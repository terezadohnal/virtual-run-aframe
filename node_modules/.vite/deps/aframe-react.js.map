{
  "version": 3,
  "sources": ["../../aframe-react/dist/index.js"],
  "sourcesContent": ["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Scene = exports.Entity = exports.options = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar nonEntityPropNames = ['children', 'events', 'primitive'];\nvar filterNonEntityPropNames = function filterNonEntityPropNames(propName) {\n  return nonEntityPropNames.indexOf(propName) === -1;\n};\n\nvar options = {\n  // React needs this because React serializes.\n  // Preact does not because Preact runs `.setAttribute` on its own.\n  runSetAttributeOnUpdates: true\n};\nexports.options = options;\n\n/**\n * Call `.setAttribute()` on the `ref`, passing prop data directly to A-Frame.\n */\n\nfunction doSetAttribute(el, props, propName) {\n  if (propName === 'className') {\n    el.setAttribute('class', props.className);\n  } else if (props[propName] && props[propName].constructor === Function) {\n    return;\n  } else {\n    el.setAttribute(propName, props[propName]);\n  }\n}\n\n/**\n * Handle diffing of previous and current attributes.\n *\n * @param {Element} el\n * @param {Object|null} prevProps - Previous props map.\n * @param {Object} props - Current props map.\n */\nfunction updateAttributes(el, prevProps, props) {\n  var propName;\n\n  if (!props || prevProps === props) {\n    return;\n  }\n\n  // Set attributes.\n  for (propName in props) {\n    if (!filterNonEntityPropNames(propName)) {\n      continue;\n    }\n    doSetAttribute(el, props, propName);\n  }\n\n  // See if attributes were removed.\n  if (prevProps) {\n    for (propName in prevProps) {\n      if (!filterNonEntityPropNames(propName)) {\n        continue;\n      }\n      if (props[propName] === undefined) {\n        el.removeAttribute(propName);\n      }\n    }\n  }\n}\n\n/**\n * Render <a-entity>.\n * Tell React to use A-Frame's .setAttribute() on the DOM element for all prop initializations\n * and updates.\n */\n\nvar Entity = exports.Entity = function (_React$Component) {\n  _inherits(Entity, _React$Component);\n\n  function Entity() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Entity);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Entity.__proto__ || Object.getPrototypeOf(Entity)).call.apply(_ref, [this].concat(args))), _this), _this.initEntity = function (el) {\n      var props = _this.props;\n      var eventName;\n\n      if (!el) {\n        return;\n      }\n\n      // Store.\n      _this.el = el;\n\n      // Attach events.\n      if (props.events) {\n        for (eventName in props.events) {\n          addEventListeners(el, eventName, props.events[eventName]);\n        }\n      }\n\n      // Update entity.\n      updateAttributes(el, null, props);\n\n      // Allow ref.\n      if (props._ref) {\n        props._ref(el);\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * In response to initial `ref` callback.\n   */\n\n\n  _createClass(Entity, [{\n    key: 'componentDidUpdate',\n\n\n    /**\n     * Handle updates after the initial render.\n     */\n    value: function componentDidUpdate(prevProps, prevState) {\n      var el = this.el;\n      var props = this.props;\n\n      // Update events.\n      updateEventListeners(el, prevProps.events, props.events);\n\n      // Update entity.\n      if (options.runSetAttributeOnUpdates) {\n        updateAttributes(el, prevProps, props);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var el = this.el;\n      var props = this.props;\n      var eventName;\n\n      if (props.events) {\n        // Remove events.\n        for (eventName in props.events) {\n          removeEventListeners(el, eventName, props.events[eventName]);\n        }\n      }\n    }\n\n    /**\n     * Render A-Frame DOM with ref: https://facebook.github.io/react/docs/refs-and-the-dom.html\n     */\n\n  }, {\n    key: 'render',\n    value: function render() {\n      var props = this.props;\n      var elementName = this.isScene ? 'a-scene' : props.primitive || 'a-entity';\n      var propName;\n\n      // Let through props that are OK to render initially.\n      var reactProps = {};\n      for (propName in props) {\n        if (['className', 'id', 'mixin'].indexOf(propName) !== -1 || propName.indexOf('data-') === 0) {\n          reactProps[propName] = props[propName];\n        }\n      }\n\n      return _react2.default.createElement(elementName, _extends({ ref: this.initEntity }, reactProps), props.children);\n    }\n  }]);\n\n  return Entity;\n}(_react2.default.Component);\n\n/**\n * Render <a-scene>.\n * <a-scene> extends from <a-entity> in A-Frame so we reuse <Entity/>.\n */\n\n\nvar Scene = exports.Scene = function (_Entity) {\n  _inherits(Scene, _Entity);\n\n  function Scene(props) {\n    _classCallCheck(this, Scene);\n\n    var _this2 = _possibleConstructorReturn(this, (Scene.__proto__ || Object.getPrototypeOf(Scene)).call(this, props));\n\n    _this2.isScene = true;\n    return _this2;\n  }\n\n  return Scene;\n}(Entity);\n\n/**\n * Handle diffing of previous and current event maps.\n *\n * @param {Element} el\n * @param {Object} prevEvents - Previous event map.\n * @param {Object} events - Current event map.\n */\n\n\nfunction updateEventListeners(el, prevEvents, events) {\n  var eventName;\n\n  if (!prevEvents || !events || prevEvents === events) {\n    return;\n  }\n\n  for (eventName in events) {\n    // Didn't change.\n    if (prevEvents[eventName] === events[eventName]) {\n      continue;\n    }\n\n    // If changed, remove old previous event listeners.\n    if (prevEvents[eventName]) {\n      removeEventListeners(el, eventName, prevEvents[eventName]);\n    }\n\n    // Add new event listeners.\n    addEventListeners(el, eventName, events[eventName]);\n  }\n\n  // See if event handlers were removed.\n  for (eventName in prevEvents) {\n    if (!events[eventName]) {\n      removeEventListeners(el, eventName, prevEvents[eventName]);\n    }\n  }\n}\n\n/**\n * Register event handlers for an event name to ref.\n *\n * @param {Element} el - DOM element.\n * @param {string} eventName\n * @param {array|function} eventHandlers - Handler function or array of handler functions.\n */\nfunction addEventListeners(el, eventName, handlers) {\n  var handler;\n  var i;\n\n  if (!handlers) {\n    return;\n  }\n\n  // Convert to array.\n  if (handlers.constructor === Function) {\n    handlers = [handlers];\n  }\n\n  // Register.\n  for (i = 0; i < handlers.length; i++) {\n    el.addEventListener(eventName, handlers[i]);\n  }\n}\n\n/**\n * Unregister event handlers for an event name to ref.\n *\n * @param {Element} el - DOM element.\n * @param {string} eventName\n * @param {array|function} eventHandlers - Handler function or array of handler functions.\n */\nfunction removeEventListeners(el, eventName, handlers) {\n  var handler;\n  var i;\n\n  if (!handlers) {\n    return;\n  }\n\n  // Convert to array.\n  if (handlers.constructor === Function) {\n    handlers = [handlers];\n  }\n\n  // Unregister.\n  for (i = 0; i < handlers.length; i++) {\n    el.removeEventListener(eventName, handlers[i]);\n  }\n}"],
  "mappings": "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",
  "names": ["filterNonEntityPropNames", "Entity", "Scene"]
}
