{
  "version": 3,
  "sources": ["../../aframe-extras/src/controls/checkpoint-controls.js", "../../aframe-extras/lib/GamepadButton.js", "../../aframe-extras/lib/GamepadButtonEvent.js", "../../aframe-extras/src/controls/gamepad-controls.js", "../../aframe-extras/lib/keyboard.polyfill.js", "../../aframe-extras/src/controls/keyboard-controls.js", "../../aframe-extras/src/controls/touch-controls.js", "../../aframe-extras/src/controls/movement-controls.js", "../../aframe-extras/src/controls/trackpad-controls.js", "../../nipplejs/src/utils.js", "../../nipplejs/src/super.js", "../../nipplejs/src/nipple.js", "../../nipplejs/src/collection.js", "../../nipplejs/src/manager.js", "../../nipplejs/src/index.js", "../../aframe-extras/src/controls/nipple-controls.js", "../../aframe-extras/src/controls/index.js", "../../aframe-extras/src/loaders/animation-mixer.js", "../../aframe-extras/lib/ColladaLoader.js", "../../aframe-extras/src/loaders/collada-model-legacy.js", "../../three/examples/jsm/libs/fflate.module.js", "../../three/examples/jsm/curves/NURBSUtils.js", "../../three/examples/jsm/curves/NURBSCurve.js", "../../three/examples/jsm/loaders/FBXLoader.js", "../../aframe-extras/src/loaders/fbx-model.js", "../../aframe-extras/lib/fetch-script.js", "../../aframe-extras/src/loaders/gltf-model-legacy.js", "../../aframe-extras/src/loaders/object-model.js", "../../aframe-extras/src/loaders/index.js", "../../aframe-extras/src/misc/checkpoint.js", "../../aframe-extras/src/misc/cube-env-map.js", "../../aframe-extras/src/misc/grab.js", "../../aframe-extras/src/misc/normal-material.js", "../../aframe-extras/src/misc/sphere-collider.js", "../../aframe-extras/src/misc/index.js", "../../aframe-extras/src/pathfinding/nav-mesh.js", "../../aframe-extras/src/pathfinding/nav-agent.js", "../../three-pathfinding/src/Utils.js", "../../three-pathfinding/src/BinaryHeap.js", "../../three-pathfinding/src/Channel.js", "../../three-pathfinding/src/Pathfinding.js", "../../three-pathfinding/src/Builder.js", "../../three-pathfinding/src/AStar.js", "../../three-pathfinding/src/PathfindingHelper.js", "../../aframe-extras/src/pathfinding/system.js", "../../aframe-extras/src/pathfinding/index.js", "../../aframe-extras/src/primitives/a-grid.js", "../../aframe-extras/src/primitives/a-ocean.js", "../../aframe-extras/src/primitives/a-tube.js", "../../aframe-extras/src/primitives/index.js", "../../aframe-extras/index.js"],
  "sourcesContent": ["const EPS = 0.1;\n\nmodule.exports = AFRAME.registerComponent('checkpoint-controls', {\n  schema: {\n    enabled: {default: true},\n    mode: {default: 'teleport', oneOf: ['teleport', 'animate']},\n    animateSpeed: {default: 3.0}\n  },\n\n  init: function () {\n    this.active = true;\n    this.checkpoint = null;\n\n    this.isNavMeshConstrained = false;\n\n    this.offset = new THREE.Vector3();\n    this.position = new THREE.Vector3();\n    this.targetPosition = new THREE.Vector3();\n  },\n\n  play: function () { this.active = true; },\n  pause: function () { this.active = false; },\n\n  setCheckpoint: function (checkpoint) {\n    const el = this.el;\n\n    if (!this.active) return;\n    if (this.checkpoint === checkpoint) return;\n\n    if (this.checkpoint) {\n      el.emit('navigation-end', {checkpoint: this.checkpoint});\n    }\n\n    this.checkpoint = checkpoint;\n    this.sync();\n\n    // Ignore new checkpoint if we're already there.\n    if (this.position.distanceTo(this.targetPosition) < EPS) {\n      this.checkpoint = null;\n      return;\n    }\n\n    el.emit('navigation-start', {checkpoint: checkpoint});\n\n    if (this.data.mode === 'teleport') {\n      this.el.setAttribute('position', this.targetPosition);\n      this.checkpoint = null;\n      el.emit('navigation-end', {checkpoint: checkpoint});\n      el.components['movement-controls'].updateNavLocation();\n    }\n  },\n\n  isVelocityActive: function () {\n    return !!(this.active && this.checkpoint);\n  },\n\n  getVelocity: function () {\n    if (!this.active) return;\n\n    const data = this.data;\n    const offset = this.offset;\n    const position = this.position;\n    const targetPosition = this.targetPosition;\n    const checkpoint = this.checkpoint;\n\n    this.sync();\n    if (position.distanceTo(targetPosition) < EPS) {\n      this.checkpoint = null;\n      this.el.emit('navigation-end', {checkpoint: checkpoint});\n      return offset.set(0, 0, 0);\n    }\n    offset.setLength(data.animateSpeed);\n    return offset;\n  },\n\n  sync: function () {\n    const offset = this.offset;\n    const position = this.position;\n    const targetPosition = this.targetPosition;\n\n    position.copy(this.el.getAttribute('position'));\n    this.checkpoint.object3D.getWorldPosition(targetPosition);\n    targetPosition.add(this.checkpoint.components.checkpoint.getOffset());\n    offset.copy(targetPosition).sub(position);\n  }\n});\n", "module.exports = Object.assign(function GamepadButton () {}, {\n\tFACE_1: 0,\n\tFACE_2: 1,\n\tFACE_3: 2,\n\tFACE_4: 3,\n\n\tL_SHOULDER_1: 4,\n\tR_SHOULDER_1: 5,\n\tL_SHOULDER_2: 6,\n\tR_SHOULDER_2: 7,\n\n\tSELECT: 8,\n\tSTART: 9,\n\n\tDPAD_UP: 12,\n\tDPAD_DOWN: 13,\n\tDPAD_LEFT: 14,\n\tDPAD_RIGHT: 15,\n\n\tVENDOR: 16,\n});\n", "function GamepadButtonEvent (type, index, details) {\n  this.type = type;\n  this.index = index;\n  this.pressed = details.pressed;\n  this.value = details.value;\n}\n\nmodule.exports = GamepadButtonEvent;\n", "/**\n * Gamepad controls for A-Frame.\n *\n * Stripped-down version of: https://github.com/donmccurdy/aframe-gamepad-controls\n *\n * For more information about the Gamepad API, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/Gamepad_API/Using_the_Gamepad_API\n */\n\nconst GamepadButton = require('../../lib/GamepadButton'),\n    GamepadButtonEvent = require('../../lib/GamepadButtonEvent');\n\nconst JOYSTICK_EPS = 0.2;\n\nconst Hand = {\n  LEFT: 'left',\n  RIGHT: 'right'\n};\n\nconst Joystick = {\n  MOVEMENT: 1,\n  ROTATION: 2\n};\n\nmodule.exports = AFRAME.registerComponent('gamepad-controls', {\n\n  /*******************************************************************\n   * Statics\n   */\n\n  GamepadButton: GamepadButton,\n\n  /*******************************************************************\n   * Schema\n   */\n\n  schema: {\n    // Enable/disable gamepad-controls\n    enabled: { default: true },\n\n    // Rotation sensitivity\n    rotationSensitivity: { default: 2.0 },\n  },\n\n  /*******************************************************************\n   * Core\n   */\n\n  /**\n   * Called once when component is attached. Generally for initial setup.\n   */\n  init: function () {\n    const sceneEl = this.el.sceneEl;\n\n    this.system = sceneEl.systems['tracked-controls-webxr'] || {controllers: []};\n\n    this.prevTime = window.performance.now();\n\n    // Button state\n    this.buttons = {};\n\n    // Rotation\n    const rotation = this.el.object3D.rotation;\n    this.pitch = new THREE.Object3D();\n    this.pitch.rotation.x = rotation.x;\n    this.yaw = new THREE.Object3D();\n    this.yaw.position.y = 10;\n    this.yaw.rotation.y = rotation.y;\n    this.yaw.add(this.pitch);\n\n    this._lookVector = new THREE.Vector2();\n    this._moveVector = new THREE.Vector2();\n    this._dpadVector = new THREE.Vector2();\n\n    sceneEl.addBehavior(this);\n  },\n\n  /**\n   * Called when component is attached and when component data changes.\n   * Generally modifies the entity based on the data.\n   */\n  update: function () { this.tick(); },\n\n  /**\n   * Called on each iteration of main render loop.\n   */\n  tick: function (t, dt) {\n    this.updateButtonState();\n    this.updateRotation(dt);\n  },\n\n  /**\n   * Called when a component is removed (e.g., via removeAttribute).\n   * Generally undoes all modifications to the entity.\n   */\n  remove: function () { },\n\n  /*******************************************************************\n   * Movement\n   */\n\n  isVelocityActive: function () {\n    if (!this.data.enabled || !this.isConnected()) return false;\n\n    const dpad = this._dpadVector;\n    const joystick = this._moveVector;\n\n    this.getDpad(dpad);\n    this.getJoystick(Joystick.MOVEMENT, joystick);\n\n    const inputX = dpad.x || joystick.x;\n    const inputY = dpad.y || joystick.y;\n\n    return Math.abs(inputX) > JOYSTICK_EPS || Math.abs(inputY) > JOYSTICK_EPS;\n  },\n\n  getVelocityDelta: function () {\n    const dpad = this._dpadVector;\n    const joystick = this._moveVector;\n\n    this.getDpad(dpad);\n    this.getJoystick(Joystick.MOVEMENT, joystick);\n\n    const inputX = dpad.x || joystick.x;\n    const inputY = dpad.y || joystick.y;\n    const dVelocity = new THREE.Vector3();\n\n    if (Math.abs(inputX) > JOYSTICK_EPS) {\n      dVelocity.x += inputX;\n    }\n    if (Math.abs(inputY) > JOYSTICK_EPS) {\n      dVelocity.z += inputY;\n    }\n\n    return dVelocity;\n  },\n\n  /*******************************************************************\n   * Rotation\n   */\n\n  isRotationActive: function () {\n    if (!this.data.enabled || !this.isConnected()) return false;\n\n    const joystick = this._lookVector;\n\n    this.getJoystick(Joystick.ROTATION, joystick);\n\n    return Math.abs(joystick.x) > JOYSTICK_EPS || Math.abs(joystick.y) > JOYSTICK_EPS;\n  },\n\n  updateRotation: function (dt) {\n    if (!this.isRotationActive()) return;\n\n    const data = this.data;\n    const yaw = this.yaw;\n    const pitch = this.pitch;\n\n    // First copy camera rig pitch/yaw, it may have been changed from\n    // another component.\n    yaw.rotation.y = this.el.object3D.rotation.y;\n    pitch.rotation.x = this.el.object3D.rotation.x;\n\n    const lookVector = this._lookVector;\n\n    this.getJoystick(Joystick.ROTATION, lookVector);\n\n    if (Math.abs(lookVector.x) <= JOYSTICK_EPS) lookVector.x = 0;\n    if (Math.abs(lookVector.y) <= JOYSTICK_EPS) lookVector.y = 0;\n\n    lookVector.multiplyScalar(data.rotationSensitivity * dt / 1000);\n    yaw.rotation.y -= lookVector.x;\n    pitch.rotation.x -= lookVector.y;\n    pitch.rotation.x = Math.max(- Math.PI / 2, Math.min(Math.PI / 2, pitch.rotation.x));\n    this.el.object3D.rotation.set(pitch.rotation.x, yaw.rotation.y, 0);\n  },\n\n  /*******************************************************************\n   * Button events\n   */\n\n  updateButtonState: function () {\n    const gamepad = this.getGamepad(Hand.RIGHT);\n    if (this.data.enabled && gamepad) {\n\n      // Fire DOM events for button state changes.\n      for (var i = 0; i < gamepad.buttons.length; i++) {\n        if (gamepad.buttons[i].pressed && !this.buttons[i]) {\n          this.emit(new GamepadButtonEvent('gamepadbuttondown', i, gamepad.buttons[i]));\n        } else if (!gamepad.buttons[i].pressed && this.buttons[i]) {\n          this.emit(new GamepadButtonEvent('gamepadbuttonup', i, gamepad.buttons[i]));\n        }\n        this.buttons[i] = gamepad.buttons[i].pressed;\n      }\n\n    } else if (Object.keys(this.buttons)) {\n      // Reset state if controls are disabled or controller is lost.\n      this.buttons = {};\n    }\n  },\n\n  emit: function (event) {\n    // Emit original event.\n    this.el.emit(event.type, event);\n\n    // Emit convenience event, identifying button index.\n    this.el.emit(\n      event.type + ':' + event.index,\n      new GamepadButtonEvent(event.type, event.index, event)\n    );\n  },\n\n  /*******************************************************************\n   * Gamepad state\n   */\n\n  /**\n   * Returns the Gamepad instance attached to the component. If connected,\n   * a proxy-controls component may provide access to Gamepad input from a\n   * remote device.\n   *\n   * @param {string} handPreference\n   * @return {Gamepad}\n   */\n  getGamepad: (function () {\n    const _xrGamepads = [];\n    const _empty = [];\n\n    return function (handPreference) {\n      // https://github.com/donmccurdy/aframe-proxy-controls\n      const proxyControls = this.el.sceneEl.components['proxy-controls'];\n      const proxyGamepad = proxyControls && proxyControls.isConnected()\n        && proxyControls.getGamepad(0);\n      if (proxyGamepad) return proxyGamepad;\n\n      // https://www.w3.org/TR/webxr/#dom-xrinputsource-handedness\n      _xrGamepads.length = 0;\n      for (let i = 0; i < this.system.controllers.length; i++) {\n        const xrController = this.system.controllers[i];\n        const xrGamepad = xrController ? xrController.gamepad : null;\n        _xrGamepads.push(xrGamepad);\n        if (xrGamepad && xrController.handedness === handPreference) return xrGamepad;\n      }\n\n      // https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/hand\n      const navGamepads = navigator.getGamepads ? navigator.getGamepads() : _empty;\n      for (let i = 0; i < navGamepads.length; i++) {\n        const navGamepad = navGamepads[i];\n        if (navGamepad && navGamepad.hand === handPreference) return navGamepad;\n      }\n\n      return _xrGamepads[0] || navGamepads[0];\n    };\n  })(),\n\n  /**\n   * Returns the state of the given button.\n   * @param  {number} index The button (0-N) for which to find state.\n   * @return {GamepadButton}\n   */\n  getButton: function (index) {\n    return this.getGamepad(Hand.RIGHT).buttons[index];\n  },\n\n  /**\n   * Returns state of the given axis. Axes are labelled 0-N, where 0-1 will\n   * represent X/Y on the first joystick, and 2-3 X/Y on the second.\n   * @param  {number} index The axis (0-N) for which to find state.\n   * @return {number} On the interval [-1,1].\n   */\n  getAxis: function (index) {\n    return this.getGamepad(index > 1 ? Hand.RIGHT : Hand.LEFT).axes[index];\n  },\n\n  /**\n   * Returns the state of the specified joystick as a THREE.Vector2.\n   * @param  {Joystick} role\n   * @param  {THREE.Vector2} target\n   * @return {THREE.Vector2}\n   */\n  getJoystick: function (index, target) {\n    const gamepad = this.getGamepad(index === Joystick.MOVEMENT ? Hand.LEFT : Hand.RIGHT);\n    // gamepad can be null here if it becomes disconnected even if isConnected() was called\n    // in the same tick before calling getJoystick.\n    if (!gamepad) {\n      return target.set(0, 0);\n    }\n    if (gamepad.mapping === 'xr-standard') {\n      // See: https://github.com/donmccurdy/aframe-extras/issues/307\n      switch (index) {\n        case Joystick.MOVEMENT: return target.set(gamepad.axes[2], gamepad.axes[3]);\n        case Joystick.ROTATION: return target.set(gamepad.axes[2], 0);\n      }\n    } else {\n      switch (index) {\n        case Joystick.MOVEMENT: return target.set(gamepad.axes[0], gamepad.axes[1]);\n        case Joystick.ROTATION: return target.set(gamepad.axes[2], gamepad.axes[3]);\n      }\n    }\n    throw new Error('Unexpected joystick index \"%d\".', index);\n  },\n\n  /**\n   * Returns the state of the dpad as a THREE.Vector2.\n   * @param {THREE.Vector2} target\n   * @return {THREE.Vector2}\n   */\n  getDpad: function (target) {\n    const gamepad = this.getGamepad(Hand.LEFT);\n    if (!gamepad) {\n      return target.set(0, 0);\n    }\n    if (!gamepad.buttons[GamepadButton.DPAD_RIGHT]) {\n      return target.set(0, 0);\n    }\n    return target.set(\n      (gamepad.buttons[GamepadButton.DPAD_RIGHT].pressed ? 1 : 0)\n      + (gamepad.buttons[GamepadButton.DPAD_LEFT].pressed ? -1 : 0),\n      (gamepad.buttons[GamepadButton.DPAD_UP].pressed ? -1 : 0)\n      + (gamepad.buttons[GamepadButton.DPAD_DOWN].pressed ? 1 : 0)\n    );\n  },\n\n  /**\n   * Returns true if the gamepad is currently connected to the system.\n   * @return {boolean}\n   */\n  isConnected: function () {\n    const gamepad = this.getGamepad(Hand.LEFT);\n    return !!(gamepad && gamepad.connected);\n  },\n\n  /**\n   * Returns a string containing some information about the controller. Result\n   * may vary across browsers, for a given controller.\n   * @return {string}\n   */\n  getID: function () {\n    return this.getGamepad(Hand.LEFT).id;\n  }\n});\n", "/**\n * Polyfill for the additional KeyboardEvent properties defined in the D3E and\n * D4E draft specifications, by @inexorabletash.\n *\n * See: https://github.com/inexorabletash/polyfill\n */\n(function(global) {\n  var nativeKeyboardEvent = ('KeyboardEvent' in global);\n  if (!nativeKeyboardEvent)\n    global.KeyboardEvent = function KeyboardEvent() { throw TypeError('Illegal constructor'); };\n\n  if (!('DOM_KEY_LOCATION_STANDARD' in global.KeyboardEvent)) global.KeyboardEvent.DOM_KEY_LOCATION_STANDARD = 0x00; // Default or unknown location\n  if (!('DOM_KEY_LOCATION_LEFT' in global.KeyboardEvent)) global.KeyboardEvent.DOM_KEY_LOCATION_LEFT          = 0x01; // e.g. Left Alt key\n  if (!('DOM_KEY_LOCATION_RIGHT' in global.KeyboardEvent)) global.KeyboardEvent.DOM_KEY_LOCATION_RIGHT         = 0x02; // e.g. Right Alt key\n  if (!('DOM_KEY_LOCATION_NUMPAD' in global.KeyboardEvent)) global.KeyboardEvent.DOM_KEY_LOCATION_NUMPAD        = 0x03; // e.g. Numpad 0 or +\n\n  var STANDARD = window.KeyboardEvent.DOM_KEY_LOCATION_STANDARD,\n      LEFT = window.KeyboardEvent.DOM_KEY_LOCATION_LEFT,\n      RIGHT = window.KeyboardEvent.DOM_KEY_LOCATION_RIGHT,\n      NUMPAD = window.KeyboardEvent.DOM_KEY_LOCATION_NUMPAD;\n\n  //--------------------------------------------------------------------\n  //\n  // Utilities\n  //\n  //--------------------------------------------------------------------\n\n  function contains(s, ss) { return String(s).indexOf(ss) !== -1; }\n\n  var os = (function() {\n    if (contains(navigator.platform, 'Win')) { return 'win'; }\n    if (contains(navigator.platform, 'Mac')) { return 'mac'; }\n    if (contains(navigator.platform, 'CrOS')) { return 'cros'; }\n    if (contains(navigator.platform, 'Linux')) { return 'linux'; }\n    if (contains(navigator.userAgent, 'iPad') || contains(navigator.platform, 'iPod') || contains(navigator.platform, 'iPhone')) { return 'ios'; }\n    return '';\n  } ());\n\n  var browser = (function() {\n    if (contains(navigator.userAgent, 'Chrome/')) { return 'chrome'; }\n    if (contains(navigator.vendor, 'Apple')) { return 'safari'; }\n    if (contains(navigator.userAgent, 'MSIE')) { return 'ie'; }\n    if (contains(navigator.userAgent, 'Gecko/')) { return 'moz'; }\n    if (contains(navigator.userAgent, 'Opera/')) { return 'opera'; }\n    return '';\n  } ());\n\n  var browser_os = browser + '-' + os;\n\n  function mergeIf(baseTable, select, table) {\n    if (browser_os === select || browser === select || os === select) {\n      Object.keys(table).forEach(function(keyCode) {\n        baseTable[keyCode] = table[keyCode];\n      });\n    }\n  }\n\n  function remap(o, key) {\n    var r = {};\n    Object.keys(o).forEach(function(k) {\n      var item = o[k];\n      if (key in item) {\n        r[item[key]] = item;\n      }\n    });\n    return r;\n  }\n\n  function invert(o) {\n    var r = {};\n    Object.keys(o).forEach(function(k) {\n      r[o[k]] = k;\n    });\n    return r;\n  }\n\n  //--------------------------------------------------------------------\n  //\n  // Generic Mappings\n  //\n  //--------------------------------------------------------------------\n\n  // \"keyInfo\" is a dictionary:\n  //   code: string - name from DOM Level 3 KeyboardEvent code Values\n  //     https://dvcs.w3.org/hg/dom3events/raw-file/tip/html/DOM3Events-code.html\n  //   location (optional): number - one of the DOM_KEY_LOCATION values\n  //   keyCap (optional): string - keyboard label in en-US locale\n  // USB code Usage ID from page 0x07 unless otherwise noted (Informative)\n\n  // Map of keyCode to keyInfo\n  var keyCodeToInfoTable = {\n    // 0x01 - VK_LBUTTON\n    // 0x02 - VK_RBUTTON\n    0x03: { code: 'Cancel' }, // [USB: 0x9b] char \\x0018 ??? (Not in D3E)\n    // 0x04 - VK_MBUTTON\n    // 0x05 - VK_XBUTTON1\n    // 0x06 - VK_XBUTTON2\n    0x06: { code: 'Help' }, // [USB: 0x75] ???\n    // 0x07 - undefined\n    0x08: { code: 'Backspace' }, // [USB: 0x2a] Labelled Delete on Macintosh keyboards.\n    0x09: { code: 'Tab' }, // [USB: 0x2b]\n    // 0x0A-0x0B - reserved\n    0X0C: { code: 'Clear' }, // [USB: 0x9c] NumPad Center (Not in D3E)\n    0X0D: { code: 'Enter' }, // [USB: 0x28]\n    // 0x0E-0x0F - undefined\n\n    0x10: { code: 'Shift' },\n    0x11: { code: 'Control' },\n    0x12: { code: 'Alt' },\n    0x13: { code: 'Pause' }, // [USB: 0x48]\n    0x14: { code: 'CapsLock' }, // [USB: 0x39]\n    0x15: { code: 'KanaMode' }, // [USB: 0x88] - \"HangulMode\" for Korean layout\n    0x16: { code: 'HangulMode' }, // [USB: 0x90] 0x15 as well in MSDN VK table ???\n    0x17: { code: 'JunjaMode' }, // (Not in D3E)\n    0x18: { code: 'FinalMode' }, // (Not in D3E)\n    0x19: { code: 'KanjiMode' }, // [USB: 0x91] - \"HanjaMode\" for Korean layout\n    // 0x1A - undefined\n    0x1B: { code: 'Escape' }, // [USB: 0x29]\n    0x1C: { code: 'Convert' }, // [USB: 0x8a]\n    0x1D: { code: 'NonConvert' }, // [USB: 0x8b]\n    0x1E: { code: 'Accept' }, // (Not in D3E)\n    0x1F: { code: 'ModeChange' }, // (Not in D3E)\n\n    0x20: { code: 'Space' }, // [USB: 0x2c]\n    0x21: { code: 'PageUp' }, // [USB: 0x4b]\n    0x22: { code: 'PageDown' }, // [USB: 0x4e]\n    0x23: { code: 'End' }, // [USB: 0x4d]\n    0x24: { code: 'Home' }, // [USB: 0x4a]\n    0x25: { code: 'ArrowLeft' }, // [USB: 0x50]\n    0x26: { code: 'ArrowUp' }, // [USB: 0x52]\n    0x27: { code: 'ArrowRight' }, // [USB: 0x4f]\n    0x28: { code: 'ArrowDown' }, // [USB: 0x51]\n    0x29: { code: 'Select' }, // (Not in D3E)\n    0x2A: { code: 'Print' }, // (Not in D3E)\n    0x2B: { code: 'Execute' }, // [USB: 0x74] (Not in D3E)\n    0x2C: { code: 'PrintScreen' }, // [USB: 0x46]\n    0x2D: { code: 'Insert' }, // [USB: 0x49]\n    0x2E: { code: 'Delete' }, // [USB: 0x4c]\n    0x2F: { code: 'Help' }, // [USB: 0x75] ???\n\n    0x30: { code: 'Digit0', keyCap: '0' }, // [USB: 0x27] 0)\n    0x31: { code: 'Digit1', keyCap: '1' }, // [USB: 0x1e] 1!\n    0x32: { code: 'Digit2', keyCap: '2' }, // [USB: 0x1f] 2@\n    0x33: { code: 'Digit3', keyCap: '3' }, // [USB: 0x20] 3#\n    0x34: { code: 'Digit4', keyCap: '4' }, // [USB: 0x21] 4$\n    0x35: { code: 'Digit5', keyCap: '5' }, // [USB: 0x22] 5%\n    0x36: { code: 'Digit6', keyCap: '6' }, // [USB: 0x23] 6^\n    0x37: { code: 'Digit7', keyCap: '7' }, // [USB: 0x24] 7&\n    0x38: { code: 'Digit8', keyCap: '8' }, // [USB: 0x25] 8*\n    0x39: { code: 'Digit9', keyCap: '9' }, // [USB: 0x26] 9(\n    // 0x3A-0x40 - undefined\n\n    0x41: { code: 'KeyA', keyCap: 'a' }, // [USB: 0x04]\n    0x42: { code: 'KeyB', keyCap: 'b' }, // [USB: 0x05]\n    0x43: { code: 'KeyC', keyCap: 'c' }, // [USB: 0x06]\n    0x44: { code: 'KeyD', keyCap: 'd' }, // [USB: 0x07]\n    0x45: { code: 'KeyE', keyCap: 'e' }, // [USB: 0x08]\n    0x46: { code: 'KeyF', keyCap: 'f' }, // [USB: 0x09]\n    0x47: { code: 'KeyG', keyCap: 'g' }, // [USB: 0x0a]\n    0x48: { code: 'KeyH', keyCap: 'h' }, // [USB: 0x0b]\n    0x49: { code: 'KeyI', keyCap: 'i' }, // [USB: 0x0c]\n    0x4A: { code: 'KeyJ', keyCap: 'j' }, // [USB: 0x0d]\n    0x4B: { code: 'KeyK', keyCap: 'k' }, // [USB: 0x0e]\n    0x4C: { code: 'KeyL', keyCap: 'l' }, // [USB: 0x0f]\n    0x4D: { code: 'KeyM', keyCap: 'm' }, // [USB: 0x10]\n    0x4E: { code: 'KeyN', keyCap: 'n' }, // [USB: 0x11]\n    0x4F: { code: 'KeyO', keyCap: 'o' }, // [USB: 0x12]\n\n    0x50: { code: 'KeyP', keyCap: 'p' }, // [USB: 0x13]\n    0x51: { code: 'KeyQ', keyCap: 'q' }, // [USB: 0x14]\n    0x52: { code: 'KeyR', keyCap: 'r' }, // [USB: 0x15]\n    0x53: { code: 'KeyS', keyCap: 's' }, // [USB: 0x16]\n    0x54: { code: 'KeyT', keyCap: 't' }, // [USB: 0x17]\n    0x55: { code: 'KeyU', keyCap: 'u' }, // [USB: 0x18]\n    0x56: { code: 'KeyV', keyCap: 'v' }, // [USB: 0x19]\n    0x57: { code: 'KeyW', keyCap: 'w' }, // [USB: 0x1a]\n    0x58: { code: 'KeyX', keyCap: 'x' }, // [USB: 0x1b]\n    0x59: { code: 'KeyY', keyCap: 'y' }, // [USB: 0x1c]\n    0x5A: { code: 'KeyZ', keyCap: 'z' }, // [USB: 0x1d]\n    0x5B: { code: 'OSLeft', location: LEFT }, // [USB: 0xe3]\n    0x5C: { code: 'OSRight', location: RIGHT }, // [USB: 0xe7]\n    0x5D: { code: 'ContextMenu' }, // [USB: 0x65] Context Menu\n    // 0x5E - reserved\n    0x5F: { code: 'Standby' }, // [USB: 0x82] Sleep\n\n    0x60: { code: 'Numpad0', keyCap: '0', location: NUMPAD }, // [USB: 0x62]\n    0x61: { code: 'Numpad1', keyCap: '1', location: NUMPAD }, // [USB: 0x59]\n    0x62: { code: 'Numpad2', keyCap: '2', location: NUMPAD }, // [USB: 0x5a]\n    0x63: { code: 'Numpad3', keyCap: '3', location: NUMPAD }, // [USB: 0x5b]\n    0x64: { code: 'Numpad4', keyCap: '4', location: NUMPAD }, // [USB: 0x5c]\n    0x65: { code: 'Numpad5', keyCap: '5', location: NUMPAD }, // [USB: 0x5d]\n    0x66: { code: 'Numpad6', keyCap: '6', location: NUMPAD }, // [USB: 0x5e]\n    0x67: { code: 'Numpad7', keyCap: '7', location: NUMPAD }, // [USB: 0x5f]\n    0x68: { code: 'Numpad8', keyCap: '8', location: NUMPAD }, // [USB: 0x60]\n    0x69: { code: 'Numpad9', keyCap: '9', location: NUMPAD }, // [USB: 0x61]\n    0x6A: { code: 'NumpadMultiply', keyCap: '*', location: NUMPAD }, // [USB: 0x55]\n    0x6B: { code: 'NumpadAdd', keyCap: '+', location: NUMPAD }, // [USB: 0x57]\n    0x6C: { code: 'NumpadComma', keyCap: ',', location: NUMPAD }, // [USB: 0x85]\n    0x6D: { code: 'NumpadSubtract', keyCap: '-', location: NUMPAD }, // [USB: 0x56]\n    0x6E: { code: 'NumpadDecimal', keyCap: '.', location: NUMPAD }, // [USB: 0x63]\n    0x6F: { code: 'NumpadDivide', keyCap: '/', location: NUMPAD }, // [USB: 0x54]\n\n    0x70: { code: 'F1' }, // [USB: 0x3a]\n    0x71: { code: 'F2' }, // [USB: 0x3b]\n    0x72: { code: 'F3' }, // [USB: 0x3c]\n    0x73: { code: 'F4' }, // [USB: 0x3d]\n    0x74: { code: 'F5' }, // [USB: 0x3e]\n    0x75: { code: 'F6' }, // [USB: 0x3f]\n    0x76: { code: 'F7' }, // [USB: 0x40]\n    0x77: { code: 'F8' }, // [USB: 0x41]\n    0x78: { code: 'F9' }, // [USB: 0x42]\n    0x79: { code: 'F10' }, // [USB: 0x43]\n    0x7A: { code: 'F11' }, // [USB: 0x44]\n    0x7B: { code: 'F12' }, // [USB: 0x45]\n    0x7C: { code: 'F13' }, // [USB: 0x68]\n    0x7D: { code: 'F14' }, // [USB: 0x69]\n    0x7E: { code: 'F15' }, // [USB: 0x6a]\n    0x7F: { code: 'F16' }, // [USB: 0x6b]\n\n    0x80: { code: 'F17' }, // [USB: 0x6c]\n    0x81: { code: 'F18' }, // [USB: 0x6d]\n    0x82: { code: 'F19' }, // [USB: 0x6e]\n    0x83: { code: 'F20' }, // [USB: 0x6f]\n    0x84: { code: 'F21' }, // [USB: 0x70]\n    0x85: { code: 'F22' }, // [USB: 0x71]\n    0x86: { code: 'F23' }, // [USB: 0x72]\n    0x87: { code: 'F24' }, // [USB: 0x73]\n    // 0x88-0x8F - unassigned\n\n    0x90: { code: 'NumLock', location: NUMPAD }, // [USB: 0x53]\n    0x91: { code: 'ScrollLock' }, // [USB: 0x47]\n    // 0x92-0x96 - OEM specific\n    // 0x97-0x9F - unassigned\n\n    // NOTE: 0xA0-0xA5 usually mapped to 0x10-0x12 in browsers\n    0xA0: { code: 'ShiftLeft', location: LEFT }, // [USB: 0xe1]\n    0xA1: { code: 'ShiftRight', location: RIGHT }, // [USB: 0xe5]\n    0xA2: { code: 'ControlLeft', location: LEFT }, // [USB: 0xe0]\n    0xA3: { code: 'ControlRight', location: RIGHT }, // [USB: 0xe4]\n    0xA4: { code: 'AltLeft', location: LEFT }, // [USB: 0xe2]\n    0xA5: { code: 'AltRight', location: RIGHT }, // [USB: 0xe6]\n\n    0xA6: { code: 'BrowserBack' }, // [USB: 0x0c/0x0224]\n    0xA7: { code: 'BrowserForward' }, // [USB: 0x0c/0x0225]\n    0xA8: { code: 'BrowserRefresh' }, // [USB: 0x0c/0x0227]\n    0xA9: { code: 'BrowserStop' }, // [USB: 0x0c/0x0226]\n    0xAA: { code: 'BrowserSearch' }, // [USB: 0x0c/0x0221]\n    0xAB: { code: 'BrowserFavorites' }, // [USB: 0x0c/0x0228]\n    0xAC: { code: 'BrowserHome' }, // [USB: 0x0c/0x0222]\n    0xAD: { code: 'VolumeMute' }, // [USB: 0x7f]\n    0xAE: { code: 'VolumeDown' }, // [USB: 0x81]\n    0xAF: { code: 'VolumeUp' }, // [USB: 0x80]\n\n    0xB0: { code: 'MediaTrackNext' }, // [USB: 0x0c/0x00b5]\n    0xB1: { code: 'MediaTrackPrevious' }, // [USB: 0x0c/0x00b6]\n    0xB2: { code: 'MediaStop' }, // [USB: 0x0c/0x00b7]\n    0xB3: { code: 'MediaPlayPause' }, // [USB: 0x0c/0x00cd]\n    0xB4: { code: 'LaunchMail' }, // [USB: 0x0c/0x018a]\n    0xB5: { code: 'MediaSelect' },\n    0xB6: { code: 'LaunchApp1' },\n    0xB7: { code: 'LaunchApp2' },\n    // 0xB8-0xB9 - reserved\n    0xBA: { code: 'Semicolon',  keyCap: ';' }, // [USB: 0x33] ;: (US Standard 101)\n    0xBB: { code: 'Equal', keyCap: '=' }, // [USB: 0x2e] =+\n    0xBC: { code: 'Comma', keyCap: ',' }, // [USB: 0x36] ,<\n    0xBD: { code: 'Minus', keyCap: '-' }, // [USB: 0x2d] -_\n    0xBE: { code: 'Period', keyCap: '.' }, // [USB: 0x37] .>\n    0xBF: { code: 'Slash', keyCap: '/' }, // [USB: 0x38] /? (US Standard 101)\n\n    0xC0: { code: 'Backquote', keyCap: '`' }, // [USB: 0x35] `~ (US Standard 101)\n    // 0xC1-0xCF - reserved\n\n    // 0xD0-0xD7 - reserved\n    // 0xD8-0xDA - unassigned\n    0xDB: { code: 'BracketLeft', keyCap: '[' }, // [USB: 0x2f] [{ (US Standard 101)\n    0xDC: { code: 'Backslash',  keyCap: '\\\\' }, // [USB: 0x31] \\| (US Standard 101)\n    0xDD: { code: 'BracketRight', keyCap: ']' }, // [USB: 0x30] ]} (US Standard 101)\n    0xDE: { code: 'Quote', keyCap: '\\'' }, // [USB: 0x34] '\" (US Standard 101)\n    // 0xDF - miscellaneous/varies\n\n    // 0xE0 - reserved\n    // 0xE1 - OEM specific\n    0xE2: { code: 'IntlBackslash',  keyCap: '\\\\' }, // [USB: 0x64] \\| (UK Standard 102)\n    // 0xE3-0xE4 - OEM specific\n    0xE5: { code: 'Process' }, // (Not in D3E)\n    // 0xE6 - OEM specific\n    // 0xE7 - VK_PACKET\n    // 0xE8 - unassigned\n    // 0xE9-0xEF - OEM specific\n\n    // 0xF0-0xF5 - OEM specific\n    0xF6: { code: 'Attn' }, // [USB: 0x9a] (Not in D3E)\n    0xF7: { code: 'CrSel' }, // [USB: 0xa3] (Not in D3E)\n    0xF8: { code: 'ExSel' }, // [USB: 0xa4] (Not in D3E)\n    0xF9: { code: 'EraseEof' }, // (Not in D3E)\n    0xFA: { code: 'Play' }, // (Not in D3E)\n    0xFB: { code: 'ZoomToggle' }, // (Not in D3E)\n    // 0xFC - VK_NONAME - reserved\n    // 0xFD - VK_PA1\n    0xFE: { code: 'Clear' } // [USB: 0x9c] (Not in D3E)\n  };\n\n  // No legacy keyCode, but listed in D3E:\n\n  // code: usb\n  // 'IntlHash': 0x070032,\n  // 'IntlRo': 0x070087,\n  // 'IntlYen': 0x070089,\n  // 'NumpadBackspace': 0x0700bb,\n  // 'NumpadClear': 0x0700d8,\n  // 'NumpadClearEntry': 0x0700d9,\n  // 'NumpadMemoryAdd': 0x0700d3,\n  // 'NumpadMemoryClear': 0x0700d2,\n  // 'NumpadMemoryRecall': 0x0700d1,\n  // 'NumpadMemoryStore': 0x0700d0,\n  // 'NumpadMemorySubtract': 0x0700d4,\n  // 'NumpadParenLeft': 0x0700b6,\n  // 'NumpadParenRight': 0x0700b7,\n\n  //--------------------------------------------------------------------\n  //\n  // Browser/OS Specific Mappings\n  //\n  //--------------------------------------------------------------------\n\n  mergeIf(keyCodeToInfoTable,\n          'moz', {\n            0x3B: { code: 'Semicolon', keyCap: ';' }, // [USB: 0x33] ;: (US Standard 101)\n            0x3D: { code: 'Equal', keyCap: '=' }, // [USB: 0x2e] =+\n            0x6B: { code: 'Equal', keyCap: '=' }, // [USB: 0x2e] =+\n            0x6D: { code: 'Minus', keyCap: '-' }, // [USB: 0x2d] -_\n            0xBB: { code: 'NumpadAdd', keyCap: '+', location: NUMPAD }, // [USB: 0x57]\n            0xBD: { code: 'NumpadSubtract', keyCap: '-', location: NUMPAD } // [USB: 0x56]\n          });\n\n  mergeIf(keyCodeToInfoTable,\n          'moz-mac', {\n            0x0C: { code: 'NumLock', location: NUMPAD }, // [USB: 0x53]\n            0xAD: { code: 'Minus', keyCap: '-' } // [USB: 0x2d] -_\n          });\n\n  mergeIf(keyCodeToInfoTable,\n          'moz-win', {\n            0xAD: { code: 'Minus', keyCap: '-' } // [USB: 0x2d] -_\n          });\n\n  mergeIf(keyCodeToInfoTable,\n          'chrome-mac', {\n            0x5D: { code: 'OSRight', location: RIGHT } // [USB: 0xe7]\n          });\n\n  // Windows via Bootcamp (!)\n  if (0) {\n    mergeIf(keyCodeToInfoTable,\n            'chrome-win', {\n              0xC0: { code: 'Quote', keyCap: '\\'' }, // [USB: 0x34] '\" (US Standard 101)\n              0xDE: { code: 'Backslash',  keyCap: '\\\\' }, // [USB: 0x31] \\| (US Standard 101)\n              0xDF: { code: 'Backquote', keyCap: '`' } // [USB: 0x35] `~ (US Standard 101)\n            });\n\n    mergeIf(keyCodeToInfoTable,\n            'ie', {\n              0xC0: { code: 'Quote', keyCap: '\\'' }, // [USB: 0x34] '\" (US Standard 101)\n              0xDE: { code: 'Backslash',  keyCap: '\\\\' }, // [USB: 0x31] \\| (US Standard 101)\n              0xDF: { code: 'Backquote', keyCap: '`' } // [USB: 0x35] `~ (US Standard 101)\n            });\n  }\n\n  mergeIf(keyCodeToInfoTable,\n          'safari', {\n            0x03: { code: 'Enter' }, // [USB: 0x28] old Safari\n            0x19: { code: 'Tab' } // [USB: 0x2b] old Safari for Shift+Tab\n          });\n\n  mergeIf(keyCodeToInfoTable,\n          'ios', {\n            0x0A: { code: 'Enter', location: STANDARD } // [USB: 0x28]\n          });\n\n  mergeIf(keyCodeToInfoTable,\n          'safari-mac', {\n            0x5B: { code: 'OSLeft', location: LEFT }, // [USB: 0xe3]\n            0x5D: { code: 'OSRight', location: RIGHT }, // [USB: 0xe7]\n            0xE5: { code: 'KeyQ', keyCap: 'Q' } // [USB: 0x14] On alternate presses, Ctrl+Q sends this\n          });\n\n  //--------------------------------------------------------------------\n  //\n  // Identifier Mappings\n  //\n  //--------------------------------------------------------------------\n\n  // Cases where newer-ish browsers send keyIdentifier which can be\n  // used to disambiguate keys.\n\n  // keyIdentifierTable[keyIdentifier] -> keyInfo\n\n  var keyIdentifierTable = {};\n  if ('cros' === os) {\n    keyIdentifierTable['U+00A0'] = { code: 'ShiftLeft', location: LEFT };\n    keyIdentifierTable['U+00A1'] = { code: 'ShiftRight', location: RIGHT };\n    keyIdentifierTable['U+00A2'] = { code: 'ControlLeft', location: LEFT };\n    keyIdentifierTable['U+00A3'] = { code: 'ControlRight', location: RIGHT };\n    keyIdentifierTable['U+00A4'] = { code: 'AltLeft', location: LEFT };\n    keyIdentifierTable['U+00A5'] = { code: 'AltRight', location: RIGHT };\n  }\n  if ('chrome-mac' === browser_os) {\n    keyIdentifierTable['U+0010'] = { code: 'ContextMenu' };\n  }\n  if ('safari-mac' === browser_os) {\n    keyIdentifierTable['U+0010'] = { code: 'ContextMenu' };\n  }\n  if ('ios' === os) {\n    // These only generate keyup events\n    keyIdentifierTable['U+0010'] = { code: 'Function' };\n\n    keyIdentifierTable['U+001C'] = { code: 'ArrowLeft' };\n    keyIdentifierTable['U+001D'] = { code: 'ArrowRight' };\n    keyIdentifierTable['U+001E'] = { code: 'ArrowUp' };\n    keyIdentifierTable['U+001F'] = { code: 'ArrowDown' };\n\n    keyIdentifierTable['U+0001'] = { code: 'Home' }; // [USB: 0x4a] Fn + ArrowLeft\n    keyIdentifierTable['U+0004'] = { code: 'End' }; // [USB: 0x4d] Fn + ArrowRight\n    keyIdentifierTable['U+000B'] = { code: 'PageUp' }; // [USB: 0x4b] Fn + ArrowUp\n    keyIdentifierTable['U+000C'] = { code: 'PageDown' }; // [USB: 0x4e] Fn + ArrowDown\n  }\n\n  //--------------------------------------------------------------------\n  //\n  // Location Mappings\n  //\n  //--------------------------------------------------------------------\n\n  // Cases where newer-ish browsers send location/keyLocation which\n  // can be used to disambiguate keys.\n\n  // locationTable[location][keyCode] -> keyInfo\n  var locationTable = [];\n  locationTable[LEFT] = {\n    0x10: { code: 'ShiftLeft', location: LEFT }, // [USB: 0xe1]\n    0x11: { code: 'ControlLeft', location: LEFT }, // [USB: 0xe0]\n    0x12: { code: 'AltLeft', location: LEFT } // [USB: 0xe2]\n  };\n  locationTable[RIGHT] = {\n    0x10: { code: 'ShiftRight', location: RIGHT }, // [USB: 0xe5]\n    0x11: { code: 'ControlRight', location: RIGHT }, // [USB: 0xe4]\n    0x12: { code: 'AltRight', location: RIGHT } // [USB: 0xe6]\n  };\n  locationTable[NUMPAD] = {\n    0x0D: { code: 'NumpadEnter', location: NUMPAD } // [USB: 0x58]\n  };\n\n  mergeIf(locationTable[NUMPAD], 'moz', {\n    0x6D: { code: 'NumpadSubtract', location: NUMPAD }, // [USB: 0x56]\n    0x6B: { code: 'NumpadAdd', location: NUMPAD } // [USB: 0x57]\n  });\n  mergeIf(locationTable[LEFT], 'moz-mac', {\n    0xE0: { code: 'OSLeft', location: LEFT } // [USB: 0xe3]\n  });\n  mergeIf(locationTable[RIGHT], 'moz-mac', {\n    0xE0: { code: 'OSRight', location: RIGHT } // [USB: 0xe7]\n  });\n  mergeIf(locationTable[RIGHT], 'moz-win', {\n    0x5B: { code: 'OSRight', location: RIGHT } // [USB: 0xe7]\n  });\n\n\n  mergeIf(locationTable[RIGHT], 'mac', {\n    0x5D: { code: 'OSRight', location: RIGHT } // [USB: 0xe7]\n  });\n\n  mergeIf(locationTable[NUMPAD], 'chrome-mac', {\n    0x0C: { code: 'NumLock', location: NUMPAD } // [USB: 0x53]\n  });\n\n  mergeIf(locationTable[NUMPAD], 'safari-mac', {\n    0x0C: { code: 'NumLock', location: NUMPAD }, // [USB: 0x53]\n    0xBB: { code: 'NumpadAdd', location: NUMPAD }, // [USB: 0x57]\n    0xBD: { code: 'NumpadSubtract', location: NUMPAD }, // [USB: 0x56]\n    0xBE: { code: 'NumpadDecimal', location: NUMPAD }, // [USB: 0x63]\n    0xBF: { code: 'NumpadDivide', location: NUMPAD } // [USB: 0x54]\n  });\n\n\n  //--------------------------------------------------------------------\n  //\n  // Key Values\n  //\n  //--------------------------------------------------------------------\n\n  // Mapping from `code` values to `key` values. Values defined at:\n  // https://dvcs.w3.org/hg/dom3events/raw-file/tip/html/DOM3Events-key.html\n  // Entries are only provided when `key` differs from `code`. If\n  // printable, `shiftKey` has the shifted printable character. This\n  // assumes US Standard 101 layout\n\n  var codeToKeyTable = {\n    // Modifier Keys\n    ShiftLeft: { key: 'Shift' },\n    ShiftRight: { key: 'Shift' },\n    ControlLeft: { key: 'Control' },\n    ControlRight: { key: 'Control' },\n    AltLeft: { key: 'Alt' },\n    AltRight: { key: 'Alt' },\n    OSLeft: { key: 'OS' },\n    OSRight: { key: 'OS' },\n\n    // Whitespace Keys\n    NumpadEnter: { key: 'Enter' },\n    Space: { key: ' ' },\n\n    // Printable Keys\n    Digit0: { key: '0', shiftKey: ')' },\n    Digit1: { key: '1', shiftKey: '!' },\n    Digit2: { key: '2', shiftKey: '@' },\n    Digit3: { key: '3', shiftKey: '#' },\n    Digit4: { key: '4', shiftKey: '$' },\n    Digit5: { key: '5', shiftKey: '%' },\n    Digit6: { key: '6', shiftKey: '^' },\n    Digit7: { key: '7', shiftKey: '&' },\n    Digit8: { key: '8', shiftKey: '*' },\n    Digit9: { key: '9', shiftKey: '(' },\n    KeyA: { key: 'a', shiftKey: 'A' },\n    KeyB: { key: 'b', shiftKey: 'B' },\n    KeyC: { key: 'c', shiftKey: 'C' },\n    KeyD: { key: 'd', shiftKey: 'D' },\n    KeyE: { key: 'e', shiftKey: 'E' },\n    KeyF: { key: 'f', shiftKey: 'F' },\n    KeyG: { key: 'g', shiftKey: 'G' },\n    KeyH: { key: 'h', shiftKey: 'H' },\n    KeyI: { key: 'i', shiftKey: 'I' },\n    KeyJ: { key: 'j', shiftKey: 'J' },\n    KeyK: { key: 'k', shiftKey: 'K' },\n    KeyL: { key: 'l', shiftKey: 'L' },\n    KeyM: { key: 'm', shiftKey: 'M' },\n    KeyN: { key: 'n', shiftKey: 'N' },\n    KeyO: { key: 'o', shiftKey: 'O' },\n    KeyP: { key: 'p', shiftKey: 'P' },\n    KeyQ: { key: 'q', shiftKey: 'Q' },\n    KeyR: { key: 'r', shiftKey: 'R' },\n    KeyS: { key: 's', shiftKey: 'S' },\n    KeyT: { key: 't', shiftKey: 'T' },\n    KeyU: { key: 'u', shiftKey: 'U' },\n    KeyV: { key: 'v', shiftKey: 'V' },\n    KeyW: { key: 'w', shiftKey: 'W' },\n    KeyX: { key: 'x', shiftKey: 'X' },\n    KeyY: { key: 'y', shiftKey: 'Y' },\n    KeyZ: { key: 'z', shiftKey: 'Z' },\n    Numpad0: { key: '0' },\n    Numpad1: { key: '1' },\n    Numpad2: { key: '2' },\n    Numpad3: { key: '3' },\n    Numpad4: { key: '4' },\n    Numpad5: { key: '5' },\n    Numpad6: { key: '6' },\n    Numpad7: { key: '7' },\n    Numpad8: { key: '8' },\n    Numpad9: { key: '9' },\n    NumpadMultiply: { key: '*' },\n    NumpadAdd: { key: '+' },\n    NumpadComma: { key: ',' },\n    NumpadSubtract: { key: '-' },\n    NumpadDecimal: { key: '.' },\n    NumpadDivide: { key: '/' },\n    Semicolon: { key: ';', shiftKey: ':' },\n    Equal: { key: '=', shiftKey: '+' },\n    Comma: { key: ',', shiftKey: '<' },\n    Minus: { key: '-', shiftKey: '_' },\n    Period: { key: '.', shiftKey: '>' },\n    Slash: { key: '/', shiftKey: '?' },\n    Backquote: { key: '`', shiftKey: '~' },\n    BracketLeft: { key: '[', shiftKey: '{' },\n    Backslash: { key: '\\\\', shiftKey: '|' },\n    BracketRight: { key: ']', shiftKey: '}' },\n    Quote: { key: '\\'', shiftKey: '\"' },\n    IntlBackslash: { key: '\\\\', shiftKey: '|' }\n  };\n\n  mergeIf(codeToKeyTable, 'mac', {\n    OSLeft: { key: 'Meta' },\n    OSRight: { key: 'Meta' }\n  });\n\n  // Corrections for 'key' names in older browsers (e.g. FF36-)\n  // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent.key#Key_values\n  var keyFixTable = {\n    Esc: 'Escape',\n    Nonconvert: 'NonConvert',\n    Left: 'ArrowLeft',\n    Up: 'ArrowUp',\n    Right: 'ArrowRight',\n    Down: 'ArrowDown',\n    Del: 'Delete',\n    Menu: 'ContextMenu',\n    MediaNextTrack: 'MediaTrackNext',\n    MediaPreviousTrack: 'MediaTrackPrevious',\n    SelectMedia: 'MediaSelect',\n    HalfWidth: 'Hankaku',\n    FullWidth: 'Zenkaku',\n    RomanCharacters: 'Romaji',\n    Crsel: 'CrSel',\n    Exsel: 'ExSel',\n    Zoom: 'ZoomToggle'\n  };\n\n  //--------------------------------------------------------------------\n  //\n  // Exported Functions\n  //\n  //--------------------------------------------------------------------\n\n\n  var codeTable = remap(keyCodeToInfoTable, 'code');\n\n  try {\n    var nativeLocation = nativeKeyboardEvent && ('location' in new KeyboardEvent(''));\n  } catch (_) {}\n\n  function keyInfoForEvent(event) {\n    var keyCode = 'keyCode' in event ? event.keyCode : 'which' in event ? event.which : 0;\n\n    var keyInfo = (function(){\n      if (nativeLocation || 'keyLocation' in event) {\n        var location = nativeLocation ? event.location : event.keyLocation;\n        if (location && keyCode in locationTable[location]) {\n          return locationTable[location][keyCode];\n        }\n      }\n      if ('keyIdentifier' in event && event.keyIdentifier in keyIdentifierTable) {\n        return keyIdentifierTable[event.keyIdentifier];\n      }\n      if (keyCode in keyCodeToInfoTable) {\n        return keyCodeToInfoTable[keyCode];\n      }\n      return null;\n    }());\n\n    // TODO: Track these down and move to general tables\n    if (0) {\n      // TODO: Map these for newerish browsers?\n      // TODO: iOS only?\n      // TODO: Override with more common keyIdentifier name?\n      switch (event.keyIdentifier) {\n      case 'U+0010': keyInfo = { code: 'Function' }; break;\n      case 'U+001C': keyInfo = { code: 'ArrowLeft' }; break;\n      case 'U+001D': keyInfo = { code: 'ArrowRight' }; break;\n      case 'U+001E': keyInfo = { code: 'ArrowUp' }; break;\n      case 'U+001F': keyInfo = { code: 'ArrowDown' }; break;\n      }\n    }\n\n    if (!keyInfo)\n      return null;\n\n    var key = (function() {\n      var entry = codeToKeyTable[keyInfo.code];\n      if (!entry) return keyInfo.code;\n      return (event.shiftKey && 'shiftKey' in entry) ? entry.shiftKey : entry.key;\n    }());\n\n    return {\n      code: keyInfo.code,\n      key: key,\n      location: keyInfo.location,\n      keyCap: keyInfo.keyCap\n    };\n  }\n\n  function queryKeyCap(code, locale) {\n    code = String(code);\n    if (!codeTable.hasOwnProperty(code)) return 'Undefined';\n    if (locale && String(locale).toLowerCase() !== 'en-us') throw Error('Unsupported locale');\n    var keyInfo = codeTable[code];\n    return keyInfo.keyCap || keyInfo.code || 'Undefined';\n  }\n\n  if ('KeyboardEvent' in global && 'defineProperty' in Object) {\n    (function() {\n      function define(o, p, v) {\n        if (p in o) return;\n        Object.defineProperty(o, p, v);\n      }\n\n      define(KeyboardEvent.prototype, 'code', { get: function() {\n        var keyInfo = keyInfoForEvent(this);\n        return keyInfo ? keyInfo.code : '';\n      }});\n\n      // Fix for nonstandard `key` values (FF36-)\n      if ('key' in KeyboardEvent.prototype) {\n        var desc = Object.getOwnPropertyDescriptor(KeyboardEvent.prototype, 'key');\n        Object.defineProperty(KeyboardEvent.prototype, 'key', { get: function() {\n          var key = desc.get.call(this);\n          return keyFixTable.hasOwnProperty(key) ? keyFixTable[key] : key;\n        }});\n      }\n\n      define(KeyboardEvent.prototype, 'key', { get: function() {\n        var keyInfo = keyInfoForEvent(this);\n        return (keyInfo && 'key' in keyInfo) ? keyInfo.key : 'Unidentified';\n      }});\n\n      define(KeyboardEvent.prototype, 'location', { get: function() {\n        var keyInfo = keyInfoForEvent(this);\n        return (keyInfo && 'location' in keyInfo) ? keyInfo.location : STANDARD;\n      }});\n\n      define(KeyboardEvent.prototype, 'locale', { get: function() {\n        return '';\n      }});\n    }());\n  }\n\n  if (!('queryKeyCap' in global.KeyboardEvent))\n    global.KeyboardEvent.queryKeyCap = queryKeyCap;\n\n  // Helper for IE8-\n  global.identifyKey = function(event) {\n    if ('code' in event)\n      return;\n\n    var keyInfo = keyInfoForEvent(event);\n    event.code = keyInfo ? keyInfo.code : '';\n    event.key = (keyInfo && 'key' in keyInfo) ? keyInfo.key : 'Unidentified';\n    event.location = ('location' in event) ? event.location :\n      ('keyLocation' in event) ? event.keyLocation :\n      (keyInfo && 'location' in keyInfo) ? keyInfo.location : STANDARD;\n    event.locale = '';\n  };\n\n} (window));\n", "/* global AFRAME, THREE */\n/* eslint-disable no-prototype-builtins */\nrequire('../../lib/keyboard.polyfill');\n\nconst PROXY_FLAG = '__keyboard-controls-proxy';\n\nconst KeyboardEvent = window.KeyboardEvent;\n\n/**\n * Keyboard Controls component.\n *\n * Stripped-down version of: https://github.com/donmccurdy/aframe-keyboard-controls\n *\n * Bind keyboard events to components, or control your entities with the WASD keys.\n *\n * Why use KeyboardEvent.code? \"This is set to a string representing the key that was pressed to\n * generate the KeyboardEvent, without taking the current keyboard layout (e.g., QWERTY vs.\n * Dvorak), locale (e.g., English vs. French), or any modifier keys into account. This is useful\n * when you care about which physical key was pressed, rather thanwhich character it corresponds\n * to. For example, if you’re a writing a game, you might want a certain set of keys to move the\n * player in different directions, and that mapping should ideally be independent of keyboard\n * layout. See: https://developers.google.com/web/updates/2016/04/keyboardevent-keys-codes\n *\n * @namespace wasd-controls\n * keys the entity moves and if you release it will stop. Easing simulates friction.\n * to the entity when pressing the keys.\n * @param {bool} [enabled=true] - To completely enable or disable the controls\n */\nmodule.exports = AFRAME.registerComponent('keyboard-controls', {\n  schema: {\n    enabled:           { default: true },\n    debug:             { default: false }\n  },\n\n  init: function () {\n    this.dVelocity = new THREE.Vector3();\n    this.localKeys = {};\n    this.listeners = {\n      keydown: this.onKeyDown.bind(this),\n      keyup: this.onKeyUp.bind(this),\n      blur: this.onBlur.bind(this),\n      onContextMenu: this.onContextMenu.bind(this),\n    };\n  },\n\n  /*******************************************************************\n  * Movement\n  */\n\n  isVelocityActive: function () {\n    return this.data.enabled && !!Object.keys(this.getKeys()).length;\n  },\n\n  getVelocityDelta: function () {\n    const data = this.data;\n    const keys = this.getKeys();\n\n    this.dVelocity.set(0, 0, 0);\n    if (data.enabled) {\n      if (keys.KeyW || keys.ArrowUp)    { this.dVelocity.z -= 1; }\n      if (keys.KeyA || keys.ArrowLeft)  { this.dVelocity.x -= 1; }\n      if (keys.KeyS || keys.ArrowDown)  { this.dVelocity.z += 1; }\n      if (keys.KeyD || keys.ArrowRight) { this.dVelocity.x += 1; }\n\n      // Move faster when the shift key is down.\n      if (keys.ShiftLeft) { this.dVelocity = this.dVelocity.multiplyScalar(2); }\n    }\n\n    return this.dVelocity.clone();\n  },\n\n  /*******************************************************************\n  * Events\n  */\n\n  play: function () {\n    this.attachEventListeners();\n  },\n\n  pause: function () {\n    this.removeEventListeners();\n  },\n\n  attachEventListeners: function () {\n    window.addEventListener(\"contextmenu\", this.listeners.onContextMenu, false);\n    window.addEventListener(\"keydown\", this.listeners.keydown, false);\n    window.addEventListener(\"keyup\", this.listeners.keyup, false);\n    window.addEventListener(\"blur\", this.listeners.blur, false);\n  },\n\n  onContextMenu: function () {\n    for (const code in this.localKeys) {\n      if (this.localKeys.hasOwnProperty(code)) {\n        delete this.localKeys[code];\n      }\n    }\n  },\n\n  removeEventListeners: function () {\n    window.removeEventListener('keydown', this.listeners.keydown);\n    window.removeEventListener('keyup', this.listeners.keyup);\n    window.removeEventListener('blur', this.listeners.blur);\n  },\n\n  onKeyDown: function (event) {\n    if (AFRAME.utils.shouldCaptureKeyEvent(event)) {\n      this.localKeys[event.code] = true;\n      this.emit(event);\n    }\n  },\n\n  onKeyUp: function (event) {\n    if (AFRAME.utils.shouldCaptureKeyEvent(event)) {\n      delete this.localKeys[event.code];\n      this.emit(event);\n    }\n  },\n\n  onBlur: function () {\n    for (const code in this.localKeys) {\n      if (this.localKeys.hasOwnProperty(code)) {\n        delete this.localKeys[code];\n      }\n    }\n  },\n\n  emit: function (event) {\n    // TODO - keydown only initially?\n    // TODO - where the f is the spacebar\n\n    // Emit original event.\n    if (PROXY_FLAG in event) {\n      // TODO - Method never triggered.\n      this.el.emit(event.type, event);\n    }\n\n    // Emit convenience event, identifying key.\n    this.el.emit(event.type + ':' + event.code, new KeyboardEvent(event.type, event));\n    if (this.data.debug) console.log(event.type + ':' + event.code);\n  },\n\n  /*******************************************************************\n  * Accessors\n  */\n\n  isPressed: function (code) {\n    return code in this.getKeys();\n  },\n\n  getKeys: function () {\n    if (this.isProxied()) {\n      return this.el.sceneEl.components['proxy-controls'].getKeyboard();\n    }\n    return this.localKeys;\n  },\n\n  isProxied: function () {\n    const proxyControls = this.el.sceneEl.components['proxy-controls'];\n    return proxyControls && proxyControls.isConnected();\n  }\n\n});\n", "/**\n * Touch-to-move-forward controls for mobile.\n */\nmodule.exports = AFRAME.registerComponent('touch-controls', {\n  schema: {\n    enabled: { default: true },\n    reverseEnabled: { default: true }\n  },\n\n  init: function () {\n    this.dVelocity = new THREE.Vector3();\n    this.bindMethods();\n    this.direction = 0;\n  },\n\n  play: function () {\n    this.addEventListeners();\n  },\n\n  pause: function () {\n    this.removeEventListeners();\n    this.dVelocity.set(0, 0, 0);\n  },\n\n  remove: function () {\n    this.pause();\n  },\n\n  addEventListeners: function () {\n    const sceneEl = this.el.sceneEl;\n    const canvasEl = sceneEl.canvas;\n\n    if (!canvasEl) {\n      sceneEl.addEventListener('render-target-loaded', this.addEventListeners.bind(this));\n      return;\n    }\n\n    canvasEl.addEventListener('touchstart', this.onTouchStart);\n    canvasEl.addEventListener('touchend', this.onTouchEnd);\n    const vrModeUI = sceneEl.getAttribute('vr-mode-ui');\n    if (vrModeUI && vrModeUI.cardboardModeEnabled) {\n      sceneEl.addEventListener('enter-vr', this.onEnterVR);\n    }\n  },\n\n  removeEventListeners: function () {\n    const canvasEl = this.el.sceneEl && this.el.sceneEl.canvas;\n    if (!canvasEl) { return; }\n\n    canvasEl.removeEventListener('touchstart', this.onTouchStart);\n    canvasEl.removeEventListener('touchend', this.onTouchEnd);\n    this.el.sceneEl.removeEventListener('enter-vr', this.onEnterVR)\n  },\n\n  isVelocityActive: function () {\n    return this.data.enabled && !!this.direction;\n  },\n\n  getVelocityDelta: function () {\n    this.dVelocity.z = this.direction;\n    return this.dVelocity.clone();\n  },\n\n  bindMethods: function () {\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n    this.onEnterVR = this.onEnterVR.bind(this);\n  },\n\n  onTouchStart: function (e) {\n    this.direction = -1;\n    if (this.data.reverseEnabled && e.touches && e.touches.length === 2) {\n      this.direction = 1;\n    }\n    e.preventDefault();\n  },\n\n  onTouchEnd: function (e) {\n    this.direction = 0;\n    e.preventDefault();\n  },\n\n  onEnterVR: function () {\n    // This is to make the Cardboard button on Chrome Android working\n    const xrSession = this.el.sceneEl.xrSession;\n    if (!xrSession) { return; }\n    xrSession.addEventListener('selectstart', this.onTouchStart);\n    xrSession.addEventListener('selectend', this.onTouchEnd);\n  }\n});\n", "/**\n * Movement Controls\n *\n * @author Don McCurdy <dm@donmccurdy.com>\n */\n\nconst COMPONENT_SUFFIX = '-controls';\nconst MAX_DELTA = 0.2; // ms\nconst EPS = 10e-6;\nconst MOVED = 'moved';\n\nmodule.exports = AFRAME.registerComponent('movement-controls', {\n\n  /*******************************************************************\n   * Schema\n   */\n\n  dependencies: ['rotation'],\n\n  schema: {\n    enabled:            { default: true },\n    controls:           { default: ['gamepad', 'trackpad', 'keyboard', 'touch'] },\n    speed:              { default: 0.3, min: 0 },\n    fly:                { default: false },\n    constrainToNavMesh: { default: false },\n    camera:             { default: '[movement-controls] [camera]', type: 'selector' }\n  },\n\n  /*******************************************************************\n   * Lifecycle\n   */\n\n  init: function () {\n    const el = this.el;\n    if (!this.data.camera) {\n      this.data.camera = el.querySelector('[camera]');\n    }\n    this.velocityCtrl = null;\n\n    this.velocity = new THREE.Vector3();\n    this.heading = new THREE.Quaternion();\n    this.eventDetail = {};\n\n    // Navigation\n    this.navGroup = null;\n    this.navNode = null;\n\n    if (el.sceneEl.hasLoaded) {\n      this.injectControls();\n    } else {\n      el.sceneEl.addEventListener('loaded', this.injectControls.bind(this));\n    }\n  },\n\n  update: function (prevData) {\n    const el = this.el;\n    const data = this.data;\n    const nav = el.sceneEl.systems.nav;\n    if (el.sceneEl.hasLoaded) {\n      this.injectControls();\n    }\n    if (nav && data.constrainToNavMesh !== prevData.constrainToNavMesh) {\n      data.constrainToNavMesh\n        ? nav.addAgent(this)\n        : nav.removeAgent(this);\n    }\n    if (data.enabled !== prevData.enabled) {\n      // Propagate the enabled change to all controls\n      for (let i = 0; i < data.controls.length; i++) {\n        const name = data.controls[i] + COMPONENT_SUFFIX;\n        this.el.setAttribute(name, { enabled: this.data.enabled });\n      }\n    }\n  },\n\n  injectControls: function () {\n    const data = this.data;\n\n    for (let i = 0; i < data.controls.length; i++) {\n      const name = data.controls[i] + COMPONENT_SUFFIX;\n      this.el.setAttribute(name, { enabled: this.data.enabled });\n    }\n  },\n\n  updateNavLocation: function () {\n    this.navGroup = null;\n    this.navNode = null;\n  },\n\n  /*******************************************************************\n   * Tick\n   */\n\n  tick: (function () {\n    const start = new THREE.Vector3();\n    const end = new THREE.Vector3();\n    const clampedEnd = new THREE.Vector3();\n\n    return function (t, dt) {\n      if (!dt) return;\n\n      const el = this.el;\n      const data = this.data;\n\n      if (!data.enabled) return;\n\n      this.updateVelocityCtrl();\n      const velocityCtrl = this.velocityCtrl;\n      const velocity = this.velocity;\n\n      if (!velocityCtrl) return;\n\n      // Update velocity. If FPS is too low, reset.\n      if (dt / 1000 > MAX_DELTA) {\n        velocity.set(0, 0, 0);\n      } else {\n        this.updateVelocity(dt);\n      }\n\n      if (data.constrainToNavMesh\n          && velocityCtrl.isNavMeshConstrained !== false) {\n\n        if (velocity.lengthSq() < EPS) return;\n\n        start.copy(el.object3D.position);\n        end\n          .copy(velocity)\n          .multiplyScalar(dt / 1000)\n          .add(start);\n\n        const nav = el.sceneEl.systems.nav;\n        this.navGroup = this.navGroup === null ? nav.getGroup(start) : this.navGroup;\n        this.navNode = this.navNode || nav.getNode(start, this.navGroup);\n        this.navNode = nav.clampStep(start, end, this.navGroup, this.navNode, clampedEnd);\n        el.object3D.position.copy(clampedEnd);\n      } else if (el.hasAttribute('velocity')) {\n        el.setAttribute('velocity', velocity);\n      } else {\n        el.object3D.position.x += velocity.x * dt / 1000;\n        el.object3D.position.y += velocity.y * dt / 1000;\n        el.object3D.position.z += velocity.z * dt / 1000;\n      }\n\n    };\n  }()),\n\n  /*******************************************************************\n   * Movement\n   */\n\n  updateVelocityCtrl: function () {\n    const data = this.data;\n    if (data.enabled) {\n      for (let i = 0, l = data.controls.length; i < l; i++) {\n        const control = this.el.components[data.controls[i] + COMPONENT_SUFFIX];\n        if (control && control.isVelocityActive()) {\n          this.velocityCtrl = control;\n          return;\n        }\n      }\n      this.velocityCtrl = null;\n    }\n  },\n\n  updateVelocity: (function () {\n    const vector2 = new THREE.Vector2();\n    const quaternion = new THREE.Quaternion();\n\n    return function (dt) {\n      let dVelocity;\n      const el = this.el;\n      const control = this.velocityCtrl;\n      const velocity = this.velocity;\n      const data = this.data;\n\n      if (control) {\n        if (control.getVelocityDelta) {\n          dVelocity = control.getVelocityDelta(dt);\n        } else if (control.getVelocity) {\n          velocity.copy(control.getVelocity());\n          return;\n        } else if (control.getPositionDelta) {\n          velocity.copy(control.getPositionDelta(dt).multiplyScalar(1000 / dt));\n          return;\n        } else {\n          throw new Error('Incompatible movement controls: ', control);\n        }\n      }\n\n      if (el.hasAttribute('velocity') && !data.constrainToNavMesh) {\n        velocity.copy(this.el.getAttribute('velocity'));\n      }\n\n      if (dVelocity && data.enabled) {\n        const cameraEl = data.camera;\n\n        // Rotate to heading\n        quaternion.copy(cameraEl.object3D.quaternion);\n        quaternion.premultiply(el.object3D.quaternion);\n        dVelocity.applyQuaternion(quaternion);\n\n        const factor = dVelocity.length();\n        if (data.fly) {\n          velocity.copy(dVelocity);\n          velocity.multiplyScalar(this.data.speed * 16.66667);\n        } else {\n          vector2.set(dVelocity.x, dVelocity.z);\n          vector2.setLength(factor * this.data.speed * 16.66667);\n          velocity.x = vector2.x;\n          velocity.y = 0;\n          velocity.z = vector2.y;\n        }\n        if (velocity.x !== 0 || velocity.y !== 0 || velocity.z !== 0) {\n          this.eventDetail.velocity = velocity;\n          this.el.emit(MOVED, this.eventDetail);\n        }\n      }\n    };\n\n  }())\n});\n", "/**\n * 3dof (Gear VR, Daydream) controls for mobile.\n */\nmodule.exports = AFRAME.registerComponent('trackpad-controls', {\n  schema: {\n    enabled: { default: true },\n    enableNegX: { default: true },\n    enablePosX: { default: true },\n    enableNegZ: { default: true },\n    enablePosZ: { default: true },\n    mode: { default: 'touch', oneOf: ['swipe', 'touch', 'press'] }\n\n  },\n\n  init: function () {\n    this.dVelocity = new THREE.Vector3();\n    this.zVel      = 0;\n    this.xVel      = 0;\n    this.bindMethods();\n  },\n\n  play: function () {\n    this.addEventListeners();\n  },\n\n  pause: function () {\n    this.removeEventListeners();\n    this.dVelocity.set(0, 0, 0);\n  },\n\n  remove: function () {\n    this.pause();\n  },\n\n  addEventListeners: function () {\n    const data = this.data;\n    const sceneEl = this.el.sceneEl;\n\n    sceneEl.addEventListener('axismove', this.onAxisMove);\n\n    switch (data.mode) {\n      case 'swipe':\n      case 'touch':\n        sceneEl.addEventListener('trackpadtouchstart', this.onTouchStart);\n        sceneEl.addEventListener('trackpadtouchend', this.onTouchEnd);\n        break;\n\n      case 'press':\n        sceneEl.addEventListener('trackpaddown', this.onTouchStart);\n        sceneEl.addEventListener('trackpadup', this.onTouchEnd);\n        break;\n    }\n\n  },\n\n  removeEventListeners: function () {\n    const sceneEl = this.el.sceneEl;\n\n    sceneEl.removeEventListener('axismove', this.onAxisMove);\n    sceneEl.removeEventListener('trackpadtouchstart', this.onTouchStart);\n    sceneEl.removeEventListener('trackpadtouchend', this.onTouchEnd);\n    sceneEl.removeEventListener('trackpaddown', this.onTouchStart);\n    sceneEl.removeEventListener('trackpadup', this.onTouchEnd);\n  },\n\n  isVelocityActive: function () {\n    return this.data.enabled && this.isMoving;\n  },\n\n  getVelocityDelta: function () {\n    this.dVelocity.z = this.isMoving ? -this.zVel : 1;\n    this.dVelocity.x = this.isMoving ? this.xVel : 1;\n    return this.dVelocity.clone();\n  },\n\n  bindMethods: function () {\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n    this.onAxisMove = this.onAxisMove.bind(this);\n  },\n\n  onTouchStart: function (e) {\n    switch(this.data.mode){\n      case 'swipe':\n        this.canRecordAxis = true;\n        this.startingAxisData = [];\n        break;\n      case 'touch':\n        this.isMoving = true;\n        break;\n      case 'press':\n        this.isMoving = true;\n        break;\n    }\n\n    e.preventDefault();\n  },\n\n  onTouchEnd: function (e) {\n    if(this.data.mode == 'swipe') {\n        this.startingAxisData = [];\n    }\n\n    this.isMoving = false;\n    e.preventDefault();\n  },\n\n  onAxisMove: function(e){\n    switch (this.data.mode) {\n      case 'swipe':\n        return this.handleSwipeAxis(e);\n      case 'touch':\n      case 'press':\n        return this.handleTouchAxis(e);\n    }\n  },\n\n  handleSwipeAxis: function(e) {\n    const data = this.data;\n    const axisData = e.detail.axis;\n\n    if(this.startingAxisData.length === 0 && this.canRecordAxis){\n      this.canRecordAxis = false;\n      this.startingAxisData[0] = axisData[0];\n      this.startingAxisData[1] = axisData[1];\n    }\n\n    if(this.startingAxisData.length > 0){\n      let velX = 0;\n      let velZ = 0;\n\n      if (data.enableNegX && axisData[0] < this.startingAxisData[0]) {\n        velX = -1;\n      }\n\n      if (data.enablePosX && axisData[0] > this.startingAxisData[0]) {\n        velX = 1;\n      }\n\n      if (data.enablePosZ && axisData[1] > this.startingAxisData[1]) {\n        velZ = -1;\n      }\n\n      if (data.enableNegZ && axisData[1] < this.startingAxisData[1]) {\n        velZ = 1;\n      }\n\n      const absChangeZ  = Math.abs(this.startingAxisData[1] - axisData[1]);\n      const absChangeX  = Math.abs(this.startingAxisData[0] - axisData[0]);\n\n      if (absChangeX > absChangeZ) {\n        this.zVel = 0;\n        this.xVel = velX;\n        this.isMoving = true;\n      } else {\n        this.xVel = 0;\n        this.zVel = velZ;\n        this.isMoving = true;\n      }\n\n    }\n  },\n\n  handleTouchAxis: function(e) {\n    const data = this.data;\n    const axisData = e.detail.axis;\n\n    let velX = 0;\n    let velZ = 0;\n\n    if (data.enableNegX && axisData[0] < 0) {\n      velX = -1;\n    }\n\n    if (data.enablePosX && axisData[0] > 0) {\n      velX = 1;\n    }\n\n    if (data.enablePosZ && axisData[1] > 0) {\n      velZ = -1;\n    }\n\n    if (data.enableNegZ && axisData[1] < 0) {\n      velZ = 1;\n    }\n\n    if (Math.abs(axisData[0]) > Math.abs(axisData[1])) {\n      this.zVel = 0;\n      this.xVel = velX;\n    } else {\n      this.xVel = 0;\n      this.zVel = velZ;\n    }\n\n  }\n\n});\n\n", "///////////////////////\n///      UTILS      ///\n///////////////////////\n\nexport const distance = (p1, p2) => {\n    const dx = p2.x - p1.x;\n    const dy = p2.y - p1.y;\n\n    return Math.sqrt((dx * dx) + (dy * dy));\n};\n\nexport const angle = (p1, p2) => {\n    const dx = p2.x - p1.x;\n    const dy = p2.y - p1.y;\n\n    return degrees(Math.atan2(dy, dx));\n};\n\nexport const findCoord = (p, d, a) => {\n    const b = {x: 0, y: 0};\n    a = radians(a);\n    b.x = p.x - d * Math.cos(a);\n    b.y = p.y - d * Math.sin(a);\n    return b;\n};\n\nexport const radians = (a) => {\n    return a * (Math.PI / 180);\n};\n\nexport const degrees = (a) => {\n    return a * (180 / Math.PI);\n};\n\nexport const isPressed = (evt) => {\n    if (isNaN(evt.buttons)) {\n        return evt.pressure !== 0;\n    }\n    return evt.buttons !== 0;\n};\n\nconst timers = new Map();\nexport const throttle = (cb) => {\n    if (timers.has(cb)) {\n        clearTimeout(timers.get(cb));\n    }\n    timers.set(cb, setTimeout(cb, 100));\n};\n\nexport const bindEvt = (el, arg, handler) => {\n    const types = arg.split(/[ ,]+/g);\n    let type;\n    for (let i = 0; i < types.length; i += 1) {\n        type = types[i];\n        if (el.addEventListener) {\n            el.addEventListener(type, handler, false);\n        } else if (el.attachEvent) {\n            el.attachEvent(type, handler);\n        }\n    }\n};\n\nexport const unbindEvt = (el, arg, handler) => {\n    const types = arg.split(/[ ,]+/g);\n    let type;\n    for (let i = 0; i < types.length; i += 1) {\n        type = types[i];\n        if (el.removeEventListener) {\n            el.removeEventListener(type, handler);\n        } else if (el.detachEvent) {\n            el.detachEvent(type, handler);\n        }\n    }\n};\n\nexport const trigger = (el, type, data) => {\n    const evt = new CustomEvent(type, data);\n    el.dispatchEvent(evt);\n};\n\nexport const prepareEvent = (evt) => {\n    evt.preventDefault();\n    return evt.type.match(/^touch/) ? evt.changedTouches : evt;\n};\n\nexport const getScroll = () => {\n    const x = (window.pageXOffset !== undefined) ?\n        window.pageXOffset :\n        (document.documentElement || document.body.parentNode || document.body)\n            .scrollLeft;\n\n    const y = (window.pageYOffset !== undefined) ?\n        window.pageYOffset :\n        (document.documentElement || document.body.parentNode || document.body)\n            .scrollTop;\n    return {\n        x: x,\n        y: y\n    };\n};\n\nexport const applyPosition = (el, pos) => {\n    if (pos.top || pos.right || pos.bottom || pos.left) {\n        el.style.top = pos.top;\n        el.style.right = pos.right;\n        el.style.bottom = pos.bottom;\n        el.style.left = pos.left;\n    } else {\n        el.style.left = pos.x + 'px';\n        el.style.top = pos.y + 'px';\n    }\n};\n\nexport const getTransitionStyle = (property, values, time) => {\n    const obj = configStylePropertyObject(property);\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (typeof values === 'string') {\n                obj[i] = values + ' ' + time;\n            } else {\n                let st = '';\n                for (let j = 0, max = values.length; j < max; j += 1) {\n                    st += values[j] + ' ' + time + ', ';\n                }\n                obj[i] = st.slice(0, -2);\n            }\n        }\n    }\n    return obj;\n};\n\nexport const getVendorStyle = (property, value) => {\n    const obj = configStylePropertyObject(property);\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            obj[i] = value;\n        }\n    }\n    return obj;\n};\n\nexport const configStylePropertyObject = (prop) => {\n    const obj = {};\n    obj[prop] = '';\n    const vendors = ['webkit', 'Moz', 'o'];\n    vendors.forEach(function (vendor) {\n        obj[vendor + prop.charAt(0).toUpperCase() + prop.slice(1)] = '';\n    });\n    return obj;\n};\n\nexport const extend = (objA, objB) => {\n    for (let i in objB) {\n        if (objB.hasOwnProperty(i)) {\n            objA[i] = objB[i];\n        }\n    }\n    return objA;\n};\n\n// Overwrite only what's already present\nexport const safeExtend = (objA, objB) => {\n    const obj = {};\n    for (let i in objA) {\n        if (objA.hasOwnProperty(i) && objB.hasOwnProperty(i)) {\n            obj[i] = objB[i];\n        } else if (objA.hasOwnProperty(i)) {\n            obj[i] = objA[i];\n        }\n    }\n    return obj;\n};\n\n// Map for array or unique item.\nexport const map = (ar, fn) => {\n    if (ar.length) {\n        for (let i = 0, max = ar.length; i < max; i += 1) {\n            fn(ar[i]);\n        }\n    } else {\n        fn(ar);\n    }\n};\n\n// Clamp position within the range\nexport const clamp = (pos, nipplePos, size) => ({\n    //                          left-clamping        right-clamping\n    x: Math.min(Math.max(pos.x, nipplePos.x - size), nipplePos.x + size),\n    //                          top-clamping         bottom-clamping\n    y: Math.min(Math.max(pos.y, nipplePos.y - size), nipplePos.y + size)\n});\n", "///////////////////////\n///   SUPER CLASS   ///\n///////////////////////\nimport * as u from './utils';\n\n// Constants\nvar isTouch = !!('ontouchstart' in window);\nvar isPointer = window.PointerEvent ? true : false;\nvar isMSPointer = window.MSPointerEvent ? true : false;\nvar events = {\n    touch: {\n        start: 'touchstart',\n        move: 'touchmove',\n        end: 'touchend, touchcancel'\n    },\n    mouse: {\n        start: 'mousedown',\n        move: 'mousemove',\n        end: 'mouseup'\n    },\n    pointer: {\n        start: 'pointerdown',\n        move: 'pointermove',\n        end: 'pointerup, pointercancel'\n    },\n    MSPointer: {\n        start: 'MSPointerDown',\n        move: 'MSPointerMove',\n        end: 'MSPointerUp'\n    }\n};\nvar toBind;\nvar secondBind = {};\nif (isPointer) {\n    toBind = events.pointer;\n} else if (isMSPointer) {\n    toBind = events.MSPointer;\n} else if (isTouch) {\n    toBind = events.touch;\n    secondBind = events.mouse;\n} else {\n    toBind = events.mouse;\n}\n\nfunction Super () {}\n\n// Basic event system.\nSuper.prototype.on = function (arg, cb) {\n    var self = this;\n    var types = arg.split(/[ ,]+/g);\n    var type;\n    self._handlers_ = self._handlers_ || {};\n\n    for (var i = 0; i < types.length; i += 1) {\n        type = types[i];\n        self._handlers_[type] = self._handlers_[type] || [];\n        self._handlers_[type].push(cb);\n    }\n    return self;\n};\n\nSuper.prototype.off = function (type, cb) {\n    var self = this;\n    self._handlers_ = self._handlers_ || {};\n\n    if (type === undefined) {\n        self._handlers_ = {};\n    } else if (cb === undefined) {\n        self._handlers_[type] = null;\n    } else if (self._handlers_[type] &&\n            self._handlers_[type].indexOf(cb) >= 0) {\n        self._handlers_[type].splice(self._handlers_[type].indexOf(cb), 1);\n    }\n\n    return self;\n};\n\nSuper.prototype.trigger = function (arg, data) {\n    var self = this;\n    var types = arg.split(/[ ,]+/g);\n    var type;\n    self._handlers_ = self._handlers_ || {};\n\n    for (var i = 0; i < types.length; i += 1) {\n        type = types[i];\n        if (self._handlers_[type] && self._handlers_[type].length) {\n            self._handlers_[type].forEach(function (handler) {\n                handler.call(self, {\n                    type: type,\n                    target: self\n                }, data);\n            });\n        }\n    }\n};\n\n// Configuration\nSuper.prototype.config = function (options) {\n    var self = this;\n    self.options = self.defaults || {};\n    if (options) {\n        self.options = u.safeExtend(self.options, options);\n    }\n};\n\n// Bind internal events.\nSuper.prototype.bindEvt = function (el, type) {\n    var self = this;\n    self._domHandlers_ = self._domHandlers_ || {};\n\n    self._domHandlers_[type] = function () {\n        if (typeof self['on' + type] === 'function') {\n            self['on' + type].apply(self, arguments);\n        } else {\n            // eslint-disable-next-line no-console\n            console.warn('[WARNING] : Missing \"on' + type + '\" handler.');\n        }\n    };\n\n    u.bindEvt(el, toBind[type], self._domHandlers_[type]);\n\n    if (secondBind[type]) {\n        // Support for both touch and mouse at the same time.\n        u.bindEvt(el, secondBind[type], self._domHandlers_[type]);\n    }\n\n    return self;\n};\n\n// Unbind dom events.\nSuper.prototype.unbindEvt = function (el, type) {\n    var self = this;\n    self._domHandlers_ = self._domHandlers_ || {};\n\n    u.unbindEvt(el, toBind[type], self._domHandlers_[type]);\n\n    if (secondBind[type]) {\n        // Support for both touch and mouse at the same time.\n        u.unbindEvt(el, secondBind[type], self._domHandlers_[type]);\n    }\n\n    delete self._domHandlers_[type];\n\n    return this;\n};\n\nexport default Super;\n", "import Super from './super';\nimport * as u from './utils';\n\n///////////////////////\n///   THE NIPPLE    ///\n///////////////////////\n\nfunction Nipple (collection, options) {\n    this.identifier = options.identifier;\n    this.position = options.position;\n    this.frontPosition = options.frontPosition;\n    this.collection = collection;\n\n    // Defaults\n    this.defaults = {\n        size: 100,\n        threshold: 0.1,\n        color: 'white',\n        fadeTime: 250,\n        dataOnly: false,\n        restJoystick: true,\n        restOpacity: 0.5,\n        mode: 'dynamic',\n        zone: document.body,\n        lockX: false,\n        lockY: false,\n        shape: 'circle'\n    };\n\n    this.config(options);\n\n    // Overwrites\n    if (this.options.mode === 'dynamic') {\n        this.options.restOpacity = 0;\n    }\n\n    this.id = Nipple.id;\n    Nipple.id += 1;\n    this.buildEl()\n        .stylize();\n\n    // Nipple's API.\n    this.instance = {\n        el: this.ui.el,\n        on: this.on.bind(this),\n        off: this.off.bind(this),\n        show: this.show.bind(this),\n        hide: this.hide.bind(this),\n        add: this.addToDom.bind(this),\n        remove: this.removeFromDom.bind(this),\n        destroy: this.destroy.bind(this),\n        setPosition:this.setPosition.bind(this),\n        resetDirection: this.resetDirection.bind(this),\n        computeDirection: this.computeDirection.bind(this),\n        trigger: this.trigger.bind(this),\n        position: this.position,\n        frontPosition: this.frontPosition,\n        ui: this.ui,\n        identifier: this.identifier,\n        id: this.id,\n        options: this.options\n    };\n\n    return this.instance;\n}\n\nNipple.prototype = new Super();\nNipple.constructor = Nipple;\nNipple.id = 0;\n\n// Build the dom element of the Nipple instance.\nNipple.prototype.buildEl = function (options) {\n    this.ui = {};\n\n    if (this.options.dataOnly) {\n        return this;\n    }\n\n    this.ui.el = document.createElement('div');\n    this.ui.back = document.createElement('div');\n    this.ui.front = document.createElement('div');\n\n    this.ui.el.className = 'nipple collection_' + this.collection.id;\n    this.ui.back.className = 'back';\n    this.ui.front.className = 'front';\n\n    this.ui.el.setAttribute('id', 'nipple_' + this.collection.id +\n        '_' + this.id);\n\n    this.ui.el.appendChild(this.ui.back);\n    this.ui.el.appendChild(this.ui.front);\n\n    return this;\n};\n\n// Apply CSS to the Nipple instance.\nNipple.prototype.stylize = function () {\n    if (this.options.dataOnly) {\n        return this;\n    }\n    var animTime = this.options.fadeTime + 'ms';\n    var borderStyle = u.getVendorStyle('borderRadius', '50%');\n    var transitStyle = u.getTransitionStyle('transition', 'opacity', animTime);\n    var styles = {};\n    styles.el = {\n        position: 'absolute',\n        opacity: this.options.restOpacity,\n        display: 'block',\n        'zIndex': 999\n    };\n\n    styles.back = {\n        position: 'absolute',\n        display: 'block',\n        width: this.options.size + 'px',\n        height: this.options.size + 'px',\n        left: 0,\n        marginLeft: -this.options.size / 2 + 'px',\n        marginTop: -this.options.size / 2 + 'px',\n        background: this.options.color,\n        'opacity': '.5'\n    };\n\n    styles.front = {\n        width: this.options.size / 2 + 'px',\n        height: this.options.size / 2 + 'px',\n        position: 'absolute',\n        display: 'block',\n        left: 0,\n        marginLeft: -this.options.size / 4 + 'px',\n        marginTop: -this.options.size / 4 + 'px',\n        background: this.options.color,\n        'opacity': '.5',\n        transform: 'translate(0px, 0px)'\n    };\n\n    u.extend(styles.el, transitStyle);\n    if(this.options.shape === 'circle'){\n        u.extend(styles.back, borderStyle);\n    }\n    u.extend(styles.front, borderStyle);\n\n    this.applyStyles(styles);\n\n    return this;\n};\n\nNipple.prototype.applyStyles = function (styles) {\n    // Apply styles\n    for (var i in this.ui) {\n        if (this.ui.hasOwnProperty(i)) {\n            for (var j in styles[i]) {\n                this.ui[i].style[j] = styles[i][j];\n            }\n        }\n    }\n\n    return this;\n};\n\n// Inject the Nipple instance into DOM.\nNipple.prototype.addToDom = function () {\n    // We're not adding it if we're dataOnly or already in dom.\n    if (this.options.dataOnly || document.body.contains(this.ui.el)) {\n        return this;\n    }\n    this.options.zone.appendChild(this.ui.el);\n    return this;\n};\n\n// Remove the Nipple instance from DOM.\nNipple.prototype.removeFromDom = function () {\n    if (this.options.dataOnly || !document.body.contains(this.ui.el)) {\n        return this;\n    }\n    this.options.zone.removeChild(this.ui.el);\n    return this;\n};\n\n// Entirely destroy this nipple\nNipple.prototype.destroy = function () {\n    clearTimeout(this.removeTimeout);\n    clearTimeout(this.showTimeout);\n    clearTimeout(this.restTimeout);\n    this.trigger('destroyed', this.instance);\n    this.removeFromDom();\n    this.off();\n};\n\n// Fade in the Nipple instance.\nNipple.prototype.show = function (cb) {\n    var self = this;\n\n    if (self.options.dataOnly) {\n        return self;\n    }\n\n    clearTimeout(self.removeTimeout);\n    clearTimeout(self.showTimeout);\n    clearTimeout(self.restTimeout);\n\n    self.addToDom();\n\n    self.restCallback();\n\n    setTimeout(function () {\n        self.ui.el.style.opacity = 1;\n    }, 0);\n\n    self.showTimeout = setTimeout(function () {\n        self.trigger('shown', self.instance);\n        if (typeof cb === 'function') {\n            cb.call(this);\n        }\n    }, self.options.fadeTime);\n\n    return self;\n};\n\n// Fade out the Nipple instance.\nNipple.prototype.hide = function (cb) {\n    var self = this;\n\n    if (self.options.dataOnly) {\n        return self;\n    }\n\n    self.ui.el.style.opacity = self.options.restOpacity;\n\n    clearTimeout(self.removeTimeout);\n    clearTimeout(self.showTimeout);\n    clearTimeout(self.restTimeout);\n\n    self.removeTimeout = setTimeout(\n        function () {\n            var display = self.options.mode === 'dynamic' ? 'none' : 'block';\n            self.ui.el.style.display = display;\n            if (typeof cb === 'function') {\n                cb.call(self);\n            }\n\n            self.trigger('hidden', self.instance);\n        },\n        self.options.fadeTime\n    );\n\n    if (self.options.restJoystick) {\n        const rest = self.options.restJoystick;\n        const newPosition = {};\n\n        newPosition.x = rest === true || rest.x !== false ? 0 : self.instance.frontPosition.x;\n        newPosition.y = rest === true || rest.y !== false ? 0 : self.instance.frontPosition.y;\n\n        self.setPosition(cb, newPosition);\n    }\n\n    return self;\n};\n\n// Set the nipple to the specified position\nNipple.prototype.setPosition = function (cb, position) {\n    var self = this;\n    self.frontPosition = {\n        x: position.x,\n        y: position.y\n    };\n    var animTime = self.options.fadeTime + 'ms';\n\n    var transitStyle = {};\n    transitStyle.front = u.getTransitionStyle('transition',\n        ['transform'], animTime);\n\n    var styles = {front: {}};\n    styles.front = {\n        transform: 'translate(' + self.frontPosition.x + 'px,' + self.frontPosition.y + 'px)'\n    };\n\n    self.applyStyles(transitStyle);\n    self.applyStyles(styles);\n\n    self.restTimeout = setTimeout(\n        function () {\n            if (typeof cb === 'function') {\n                cb.call(self);\n            }\n            self.restCallback();\n        },\n        self.options.fadeTime\n    );\n};\n\nNipple.prototype.restCallback = function () {\n    var self = this;\n    var transitStyle = {};\n    transitStyle.front = u.getTransitionStyle('transition', 'none', '');\n    self.applyStyles(transitStyle);\n    self.trigger('rested', self.instance);\n};\n\nNipple.prototype.resetDirection = function () {\n    // Fully rebuild the object to let the iteration possible.\n    this.direction = {\n        x: false,\n        y: false,\n        angle: false\n    };\n};\n\nNipple.prototype.computeDirection = function (obj) {\n    var rAngle = obj.angle.radian;\n    var angle45 = Math.PI / 4;\n    var angle90 = Math.PI / 2;\n    var direction, directionX, directionY;\n\n    // Angular direction\n    //     \\  UP /\n    //      \\   /\n    // LEFT       RIGHT\n    //      /   \\\n    //     /DOWN \\\n    //\n    if (\n        rAngle > angle45 &&\n        rAngle < (angle45 * 3) &&\n        !obj.lockX\n    ) {\n        direction = 'up';\n    } else if (\n        rAngle > -angle45 &&\n        rAngle <= angle45 &&\n        !obj.lockY\n    ) {\n        direction = 'left';\n    } else if (\n        rAngle > (-angle45 * 3) &&\n        rAngle <= -angle45 &&\n        !obj.lockX\n    ) {\n        direction = 'down';\n    } else if (!obj.lockY) {\n        direction = 'right';\n    }\n\n    // Plain direction\n    //    UP                 |\n    // _______               | RIGHT\n    //                  LEFT |\n    //   DOWN                |\n    if (!obj.lockY) {\n        if (rAngle > -angle90 && rAngle < angle90) {\n            directionX = 'left';\n        } else {\n            directionX = 'right';\n        }\n    }\n\n    if (!obj.lockX) {\n        if (rAngle > 0) {\n            directionY = 'up';\n        } else {\n            directionY = 'down';\n        }\n    }\n\n    if (obj.force > this.options.threshold) {\n        var oldDirection = {};\n        var i;\n        for (i in this.direction) {\n            if (this.direction.hasOwnProperty(i)) {\n                oldDirection[i] = this.direction[i];\n            }\n        }\n\n        var same = {};\n\n        this.direction = {\n            x: directionX,\n            y: directionY,\n            angle: direction\n        };\n\n        obj.direction = this.direction;\n\n        for (i in oldDirection) {\n            if (oldDirection[i] === this.direction[i]) {\n                same[i] = true;\n            }\n        }\n\n        // If all 3 directions are the same, we don't trigger anything.\n        if (same.x && same.y && same.angle) {\n            return obj;\n        }\n\n        if (!same.x || !same.y) {\n            this.trigger('plain', obj);\n        }\n\n        if (!same.x) {\n            this.trigger('plain:' + directionX, obj);\n        }\n\n        if (!same.y) {\n            this.trigger('plain:' + directionY, obj);\n        }\n\n        if (!same.angle) {\n            this.trigger('dir dir:' + direction, obj);\n        }\n    } else {\n        this.resetDirection();\n    }\n\n    return obj;\n};\n\nexport default Nipple;\n", "import Nipple from './nipple';\nimport Super from './super';\nimport * as u from './utils';\n\n///////////////////////////\n///   THE COLLECTION    ///\n///////////////////////////\n\nfunction Collection (manager, options) {\n    var self = this;\n    self.nipples = [];\n    self.idles = [];\n    self.actives = [];\n    self.ids = [];\n    self.pressureIntervals = {};\n    self.manager = manager;\n    self.id = Collection.id;\n    Collection.id += 1;\n\n    // Defaults\n    self.defaults = {\n        zone: document.body,\n        multitouch: false,\n        maxNumberOfNipples: 10,\n        mode: 'dynamic',\n        position: {top: 0, left: 0},\n        catchDistance: 200,\n        size: 100,\n        threshold: 0.1,\n        color: 'white',\n        fadeTime: 250,\n        dataOnly: false,\n        restJoystick: true,\n        restOpacity: 0.5,\n        lockX: false,\n        lockY: false,\n        shape: 'circle',\n        dynamicPage: false,\n        follow: false\n    };\n\n    self.config(options);\n\n    // Overwrites\n    if (self.options.mode === 'static' || self.options.mode === 'semi') {\n        self.options.multitouch = false;\n    }\n\n    if (!self.options.multitouch) {\n        self.options.maxNumberOfNipples = 1;\n    }\n    const computedStyle = getComputedStyle(self.options.zone.parentElement);\n    if (computedStyle && computedStyle.display === 'flex') {\n        self.parentIsFlex = true;\n    }\n\n    self.updateBox();\n    self.prepareNipples();\n    self.bindings();\n    self.begin();\n\n    return self.nipples;\n}\n\nCollection.prototype = new Super();\nCollection.constructor = Collection;\nCollection.id = 0;\n\nCollection.prototype.prepareNipples = function () {\n    var self = this;\n    var nips = self.nipples;\n\n    // Public API Preparation.\n    nips.on = self.on.bind(self);\n    nips.off = self.off.bind(self);\n    nips.options = self.options;\n    nips.destroy = self.destroy.bind(self);\n    nips.ids = self.ids;\n    nips.id = self.id;\n    nips.processOnMove = self.processOnMove.bind(self);\n    nips.processOnEnd = self.processOnEnd.bind(self);\n    nips.get = function (id) {\n        if (id === undefined) {\n            return nips[0];\n        }\n        for (var i = 0, max = nips.length; i < max; i += 1) {\n            if (nips[i].identifier === id) {\n                return nips[i];\n            }\n        }\n        return false;\n    };\n};\n\nCollection.prototype.bindings = function () {\n    var self = this;\n    // Touch start event.\n    self.bindEvt(self.options.zone, 'start');\n    // Avoid native touch actions (scroll, zoom etc...) on the zone.\n    self.options.zone.style.touchAction = 'none';\n    self.options.zone.style.msTouchAction = 'none';\n};\n\nCollection.prototype.begin = function () {\n    var self = this;\n    var opts = self.options;\n\n    // We place our static nipple\n    // if needed.\n    if (opts.mode === 'static') {\n        var nipple = self.createNipple(\n            opts.position,\n            self.manager.getIdentifier()\n        );\n        // Add it to the dom.\n        nipple.add();\n        // Store it in idles.\n        self.idles.push(nipple);\n    }\n};\n\n// Nipple Factory\nCollection.prototype.createNipple = function (position, identifier) {\n    var self = this;\n    var scroll = self.manager.scroll;\n    var toPutOn = {};\n    var opts = self.options;\n    var offset = {\n        x: self.parentIsFlex ? scroll.x : (scroll.x + self.box.left),\n        y: self.parentIsFlex ? scroll.y : (scroll.y + self.box.top)\n    };\n\n    if (position.x && position.y) {\n        toPutOn = {\n            x: position.x - offset.x,\n            y: position.y - offset.y\n        };\n    } else if (\n        position.top ||\n        position.right ||\n        position.bottom ||\n        position.left\n    ) {\n\n        // We need to compute the position X / Y of the joystick.\n        var dumb = document.createElement('DIV');\n        dumb.style.display = 'hidden';\n        dumb.style.top = position.top;\n        dumb.style.right = position.right;\n        dumb.style.bottom = position.bottom;\n        dumb.style.left = position.left;\n        dumb.style.position = 'absolute';\n\n        opts.zone.appendChild(dumb);\n        var dumbBox = dumb.getBoundingClientRect();\n        opts.zone.removeChild(dumb);\n\n        toPutOn = position;\n        position = {\n            x: dumbBox.left + scroll.x,\n            y: dumbBox.top + scroll.y\n        };\n    }\n\n    var nipple = new Nipple(self, {\n        color: opts.color,\n        size: opts.size,\n        threshold: opts.threshold,\n        fadeTime: opts.fadeTime,\n        dataOnly: opts.dataOnly,\n        restJoystick: opts.restJoystick,\n        restOpacity: opts.restOpacity,\n        mode: opts.mode,\n        identifier: identifier,\n        position: position,\n        zone: opts.zone,\n        frontPosition: {\n            x: 0,\n            y: 0\n        },\n        shape: opts.shape\n    });\n\n    if (!opts.dataOnly) {\n        u.applyPosition(nipple.ui.el, toPutOn);\n        u.applyPosition(nipple.ui.front, nipple.frontPosition);\n    }\n    self.nipples.push(nipple);\n    self.trigger('added ' + nipple.identifier + ':added', nipple);\n    self.manager.trigger('added ' + nipple.identifier + ':added', nipple);\n\n    self.bindNipple(nipple);\n\n    return nipple;\n};\n\nCollection.prototype.updateBox = function () {\n    var self = this;\n    self.box = self.options.zone.getBoundingClientRect();\n};\n\nCollection.prototype.bindNipple = function (nipple) {\n    var self = this;\n    var type;\n    // Bubble up identified events.\n    var handler = function (evt, data) {\n        // Identify the event type with the nipple's id.\n        type = evt.type + ' ' + data.id + ':' + evt.type;\n        self.trigger(type, data);\n    };\n\n    // When it gets destroyed.\n    nipple.on('destroyed', self.onDestroyed.bind(self));\n\n    // Other events that will get bubbled up.\n    nipple.on('shown hidden rested dir plain', handler);\n    nipple.on('dir:up dir:right dir:down dir:left', handler);\n    nipple.on('plain:up plain:right plain:down plain:left', handler);\n};\n\nCollection.prototype.pressureFn = function (touch, nipple, identifier) {\n    var self = this;\n    var previousPressure = 0;\n    clearInterval(self.pressureIntervals[identifier]);\n    // Create an interval that will read the pressure every 100ms\n    self.pressureIntervals[identifier] = setInterval(function () {\n        var pressure = touch.force || touch.pressure ||\n            touch.webkitForce || 0;\n        if (pressure !== previousPressure) {\n            nipple.trigger('pressure', pressure);\n            self.trigger('pressure ' +\n                nipple.identifier + ':pressure', pressure);\n            previousPressure = pressure;\n        }\n    }.bind(self), 100);\n};\n\nCollection.prototype.onstart = function (evt) {\n    var self = this;\n    var opts = self.options;\n    var origEvt = evt;\n    evt = u.prepareEvent(evt);\n\n    // Update the box position\n    self.updateBox();\n\n    var process = function (touch) {\n        // If we can create new nipples\n        // meaning we don't have more active nipples than we should.\n        if (self.actives.length < opts.maxNumberOfNipples) {\n            self.processOnStart(touch);\n        }\n        else if(origEvt.type.match(/^touch/)){\n            // zombies occur when end event is not received on Safari\n            // first touch removed before second touch, we need to catch up...\n            // so remove where touches in manager that no longer exist\n            Object.keys(self.manager.ids).forEach(function(k){\n                if(Object.values(origEvt.touches).findIndex(function(t){return t.identifier===k;}) < 0){\n                    // manager has id that doesn't exist in touches\n                    var e = [evt[0]];\n                    e.identifier = k;\n                    self.processOnEnd(e);\n                }\n            });\n            if(self.actives.length < opts.maxNumberOfNipples){\n                self.processOnStart(touch);\n            }\n        }\n    };\n\n    u.map(evt, process);\n\n    // We ask upstream to bind the document\n    // on 'move' and 'end'\n    self.manager.bindDocument();\n    return false;\n};\n\nCollection.prototype.processOnStart = function (evt) {\n    var self = this;\n    var opts = self.options;\n    var indexInIdles;\n    var identifier = self.manager.getIdentifier(evt);\n    var pressure = evt.force || evt.pressure || evt.webkitForce || 0;\n    var position = {\n        x: evt.pageX,\n        y: evt.pageY\n    };\n\n    var nipple = self.getOrCreate(identifier, position);\n\n    // Update its touch identifier\n    if (nipple.identifier !== identifier) {\n        self.manager.removeIdentifier(nipple.identifier);\n    }\n    nipple.identifier = identifier;\n\n    var process = function (nip) {\n        // Trigger the start.\n        nip.trigger('start', nip);\n        self.trigger('start ' + nip.id + ':start', nip);\n\n        nip.show();\n        if (pressure > 0) {\n            self.pressureFn(evt, nip, nip.identifier);\n        }\n        // Trigger the first move event.\n        self.processOnMove(evt);\n    };\n\n    // Transfer it from idles to actives.\n    if ((indexInIdles = self.idles.indexOf(nipple)) >= 0) {\n        self.idles.splice(indexInIdles, 1);\n    }\n\n    // Store the nipple in the actives array\n    self.actives.push(nipple);\n    self.ids.push(nipple.identifier);\n\n    if (opts.mode !== 'semi') {\n        process(nipple);\n    } else {\n        // In semi we check the distance of the touch\n        // to decide if we have to reset the nipple\n        var distance = u.distance(position, nipple.position);\n        if (distance <= opts.catchDistance) {\n            process(nipple);\n        } else {\n            nipple.destroy();\n            self.processOnStart(evt);\n            return;\n        }\n    }\n\n    return nipple;\n};\n\nCollection.prototype.getOrCreate = function (identifier, position) {\n    var self = this;\n    var opts = self.options;\n    var nipple;\n\n    // If we're in static or semi, we might already have an active.\n    if (/(semi|static)/.test(opts.mode)) {\n        // Get the active one.\n        // TODO: Multi-touche for semi and static will start here.\n        // Return the nearest one.\n        nipple = self.idles[0];\n        if (nipple) {\n            self.idles.splice(0, 1);\n            return nipple;\n        }\n\n        if (opts.mode === 'semi') {\n            // If we're in semi mode, we need to create one.\n            return self.createNipple(position, identifier);\n        }\n\n        // eslint-disable-next-line no-console\n        console.warn('Coudln\\'t find the needed nipple.');\n        return false;\n    }\n    // In dynamic, we create a new one.\n    nipple = self.createNipple(position, identifier);\n    return nipple;\n};\n\nCollection.prototype.processOnMove = function (evt) {\n    var self = this;\n    var opts = self.options;\n    var identifier = self.manager.getIdentifier(evt);\n    var nipple = self.nipples.get(identifier);\n    var scroll = self.manager.scroll;\n\n    // If we're moving without pressing\n    // it's that we went out the active zone\n    if (!u.isPressed(evt)) {\n        this.processOnEnd(evt);\n        return;\n    }\n\n    if (!nipple) {\n        // This is here just for safety.\n        // It shouldn't happen.\n        // eslint-disable-next-line no-console\n        console.error('Found zombie joystick with ID ' + identifier);\n        self.manager.removeIdentifier(identifier);\n        return;\n    }\n\n    if (opts.dynamicPage) {\n        var elBox = nipple.el.getBoundingClientRect();\n        nipple.position = {\n            x: scroll.x + elBox.left,\n            y: scroll.y + elBox.top\n        };\n    }\n\n    nipple.identifier = identifier;\n\n    var size = nipple.options.size / 2;\n    var pos = {\n        x: evt.pageX,\n        y: evt.pageY\n    };\n\n    if (opts.lockX){\n        pos.y = nipple.position.y;\n    }\n    if (opts.lockY) {\n        pos.x = nipple.position.x;\n    }\n\n    var dist = u.distance(pos, nipple.position);\n    var angle = u.angle(pos, nipple.position);\n    var rAngle = u.radians(angle);\n    var force = dist / size;\n\n    var raw = {\n        distance: dist,\n        position: pos\n    };\n\n    // Clamp the position\n    var clamped_dist;\n    var clamped_pos;\n    if (nipple.options.shape === 'circle') {\n        // Clamp to a circle\n        clamped_dist = Math.min(dist, size);\n        clamped_pos = u.findCoord(nipple.position, clamped_dist, angle);\n    } else {\n        // Clamp to a square\n        clamped_pos = u.clamp(pos, nipple.position, size);\n        clamped_dist = u.distance(clamped_pos, nipple.position);\n    }\n\n    if (opts.follow) {\n        // follow behaviour\n        if (dist > size) {\n            let delta_x = pos.x - clamped_pos.x;\n            let delta_y = pos.y - clamped_pos.y;\n            nipple.position.x += delta_x;\n            nipple.position.y += delta_y;\n            nipple.el.style.top = (nipple.position.y - (self.box.top + scroll.y)) + 'px';\n            nipple.el.style.left = (nipple.position.x - (self.box.left + scroll.x)) + 'px';\n\n            dist = u.distance(pos, nipple.position);\n        }\n    } else {\n        // clamp behaviour\n        pos = clamped_pos;\n        dist = clamped_dist;\n    }\n\n    var xPosition = pos.x - nipple.position.x;\n    var yPosition = pos.y - nipple.position.y;\n\n    nipple.frontPosition = {\n        x: xPosition,\n        y: yPosition\n    };\n\n    if (!opts.dataOnly) {\n        nipple.ui.front.style.transform = 'translate(' + xPosition + 'px,' + yPosition + 'px)';\n    }\n\n    // Prepare event's datas.\n    var toSend = {\n        identifier: nipple.identifier,\n        position: pos,\n        force: force,\n        pressure: evt.force || evt.pressure || evt.webkitForce || 0,\n        distance: dist,\n        angle: {\n            radian: rAngle,\n            degree: angle\n        },\n        vector: {\n            x: xPosition / size,\n            y: - yPosition / size\n        },\n        raw: raw,\n        instance: nipple,\n        lockX: opts.lockX,\n        lockY: opts.lockY\n    };\n\n    // Compute the direction's datas.\n    toSend = nipple.computeDirection(toSend);\n\n    // Offset angles to follow units circle.\n    toSend.angle = {\n        radian: u.radians(180 - angle),\n        degree: 180 - angle\n    };\n\n    // Send everything to everyone.\n    nipple.trigger('move', toSend);\n    self.trigger('move ' + nipple.id + ':move', toSend);\n};\n\nCollection.prototype.processOnEnd = function (evt) {\n    var self = this;\n    var opts = self.options;\n    var identifier = self.manager.getIdentifier(evt);\n    var nipple = self.nipples.get(identifier);\n    var removedIdentifier = self.manager.removeIdentifier(nipple.identifier);\n\n    if (!nipple) {\n        return;\n    }\n\n    if (!opts.dataOnly) {\n        nipple.hide(function () {\n            if (opts.mode === 'dynamic') {\n                nipple.trigger('removed', nipple);\n                self.trigger('removed ' + nipple.id + ':removed', nipple);\n                self.manager\n                    .trigger('removed ' + nipple.id + ':removed', nipple);\n                nipple.destroy();\n            }\n        });\n    }\n\n    // Clear the pressure interval reader\n    clearInterval(self.pressureIntervals[nipple.identifier]);\n\n    // Reset the direciton of the nipple, to be able to trigger a new direction\n    // on start.\n    nipple.resetDirection();\n\n    nipple.trigger('end', nipple);\n    self.trigger('end ' + nipple.id + ':end', nipple);\n\n    // Remove identifier from our bank.\n    if (self.ids.indexOf(nipple.identifier) >= 0) {\n        self.ids.splice(self.ids.indexOf(nipple.identifier), 1);\n    }\n\n    // Clean our actives array.\n    if (self.actives.indexOf(nipple) >= 0) {\n        self.actives.splice(self.actives.indexOf(nipple), 1);\n    }\n\n    if (/(semi|static)/.test(opts.mode)) {\n        // Transfer nipple from actives to idles\n        // if we're in semi or static mode.\n        self.idles.push(nipple);\n    } else if (self.nipples.indexOf(nipple) >= 0) {\n        // Only if we're not in semi or static mode\n        // we can remove the instance.\n        self.nipples.splice(self.nipples.indexOf(nipple), 1);\n    }\n\n    // We unbind move and end.\n    self.manager.unbindDocument();\n\n    // We add back the identifier of the idle nipple;\n    if (/(semi|static)/.test(opts.mode)) {\n        self.manager.ids[removedIdentifier.id] = removedIdentifier.identifier;\n    }\n};\n\n// Remove destroyed nipple from the lists\nCollection.prototype.onDestroyed = function(evt, nipple) {\n    var self = this;\n    if (self.nipples.indexOf(nipple) >= 0) {\n        self.nipples.splice(self.nipples.indexOf(nipple), 1);\n    }\n    if (self.actives.indexOf(nipple) >= 0) {\n        self.actives.splice(self.actives.indexOf(nipple), 1);\n    }\n    if (self.idles.indexOf(nipple) >= 0) {\n        self.idles.splice(self.idles.indexOf(nipple), 1);\n    }\n    if (self.ids.indexOf(nipple.identifier) >= 0) {\n        self.ids.splice(self.ids.indexOf(nipple.identifier), 1);\n    }\n\n    // Remove the identifier from our bank\n    self.manager.removeIdentifier(nipple.identifier);\n\n    // We unbind move and end.\n    self.manager.unbindDocument();\n};\n\n// Cleanly destroy the manager\nCollection.prototype.destroy = function () {\n    var self = this;\n    self.unbindEvt(self.options.zone, 'start');\n\n    // Destroy nipples.\n    self.nipples.forEach(function(nipple) {\n        nipple.destroy();\n    });\n\n    // Clean 3DTouch intervals.\n    for (var i in self.pressureIntervals) {\n        if (self.pressureIntervals.hasOwnProperty(i)) {\n            clearInterval(self.pressureIntervals[i]);\n        }\n    }\n\n    // Notify the manager passing the instance\n    self.trigger('destroyed', self.nipples);\n    // We unbind move and end.\n    self.manager.unbindDocument();\n    // Unbind everything.\n    self.off();\n};\n\nexport default Collection;\n", "import Collection from './collection';\nimport Super from './super';\nimport * as u from './utils';\n\n///////////////////////\n///     MANAGER     ///\n///////////////////////\n\nfunction Manager (options) {\n    var self = this;\n    self.ids = {};\n    self.index = 0;\n    self.collections = [];\n    self.scroll = u.getScroll();\n\n    self.config(options);\n    self.prepareCollections();\n\n    // Listen for resize, to reposition every joysticks\n    var resizeHandler = function () {\n        var pos;\n        self.collections.forEach(function (collection) {\n            collection.forEach(function (nipple) {\n                pos = nipple.el.getBoundingClientRect();\n                nipple.position = {\n                    x: self.scroll.x + pos.left,\n                    y: self.scroll.y + pos.top\n                };\n            });\n        });\n    };\n    u.bindEvt(window, 'resize', function () {\n        u.throttle(resizeHandler);\n    });\n\n    // Listen for scrolls, so we have a global scroll value\n    // without having to request it all the time.\n    var scrollHandler = function () {\n        self.scroll = u.getScroll();\n    };\n    u.bindEvt(window, 'scroll', function () {\n        u.throttle(scrollHandler);\n    });\n\n    return self.collections;\n}\n\nManager.prototype = new Super();\nManager.constructor = Manager;\n\nManager.prototype.prepareCollections = function () {\n    var self = this;\n    // Public API Preparation.\n    self.collections.create = self.create.bind(self);\n    // Listen to anything\n    self.collections.on = self.on.bind(self);\n    // Unbind general events\n    self.collections.off = self.off.bind(self);\n    // Destroy everything\n    self.collections.destroy = self.destroy.bind(self);\n    // Get any nipple\n    self.collections.get = function (id) {\n        var nipple;\n        // Use .every() to break the loop as soon as found.\n        self.collections.every(function (collection) {\n            nipple = collection.get(id);\n            return nipple ? false : true;\n        });\n        return nipple;\n    };\n};\n\nManager.prototype.create = function (options) {\n    return this.createCollection(options);\n};\n\n// Collection Factory\nManager.prototype.createCollection = function (options) {\n    var self = this;\n    var collection = new Collection(self, options);\n\n    self.bindCollection(collection);\n    self.collections.push(collection);\n\n    return collection;\n};\n\nManager.prototype.bindCollection = function (collection) {\n    var self = this;\n    var type;\n    // Bubble up identified events.\n    var handler = function (evt, data) {\n        // Identify the event type with the nipple's identifier.\n        type = evt.type + ' ' + data.id + ':' + evt.type;\n        self.trigger(type, data);\n    };\n\n    // When it gets destroyed we clean.\n    collection.on('destroyed', self.onDestroyed.bind(self));\n\n    // Other events that will get bubbled up.\n    collection.on('shown hidden rested dir plain', handler);\n    collection.on('dir:up dir:right dir:down dir:left', handler);\n    collection.on('plain:up plain:right plain:down plain:left', handler);\n};\n\nManager.prototype.bindDocument = function () {\n    var self = this;\n    // Bind only if not already binded\n    if (!self.binded) {\n        self.bindEvt(document, 'move')\n            .bindEvt(document, 'end');\n        self.binded = true;\n    }\n};\n\nManager.prototype.unbindDocument = function (force) {\n    var self = this;\n    // If there are no touch left\n    // unbind the document.\n    if (!Object.keys(self.ids).length || force === true) {\n        self.unbindEvt(document, 'move')\n            .unbindEvt(document, 'end');\n        self.binded = false;\n    }\n};\n\nManager.prototype.getIdentifier = function (evt) {\n    var id;\n    // If no event, simple increment\n    if (!evt) {\n        id = this.index;\n    } else {\n        // Extract identifier from event object.\n        // Unavailable in mouse events so replaced by latest increment.\n        id = evt.identifier === undefined ? evt.pointerId : evt.identifier;\n        if (id === undefined) {\n            id = this.latest || 0;\n        }\n    }\n\n    if (this.ids[id] === undefined) {\n        this.ids[id] = this.index;\n        this.index += 1;\n    }\n\n    // Keep the latest id used in case we're using an unidentified mouseEvent\n    this.latest = id;\n    return this.ids[id];\n};\n\nManager.prototype.removeIdentifier = function (identifier) {\n    var removed = {};\n    for (var id in this.ids) {\n        if (this.ids[id] === identifier) {\n            removed.id = id;\n            removed.identifier = this.ids[id];\n            delete this.ids[id];\n            break;\n        }\n    }\n    return removed;\n};\n\nManager.prototype.onmove = function (evt) {\n    var self = this;\n    self.onAny('move', evt);\n    return false;\n};\n\nManager.prototype.onend = function (evt) {\n    var self = this;\n    self.onAny('end', evt);\n    return false;\n};\n\nManager.prototype.oncancel = function (evt) {\n    var self = this;\n    self.onAny('end', evt);\n    return false;\n};\n\nManager.prototype.onAny = function (which, evt) {\n    var self = this;\n    var id;\n    var processFn = 'processOn' + which.charAt(0).toUpperCase() +\n        which.slice(1);\n    evt = u.prepareEvent(evt);\n    var processColl = function (e, id, coll) {\n        if (coll.ids.indexOf(id) >= 0) {\n            coll[processFn](e);\n            // Mark the event to avoid cleaning it later.\n            e._found_ = true;\n        }\n    };\n    var processEvt = function (e) {\n        id = self.getIdentifier(e);\n        u.map(self.collections, processColl.bind(null, e, id));\n        // If the event isn't handled by any collection,\n        // we need to clean its identifier.\n        if (!e._found_) {\n            self.removeIdentifier(id);\n        }\n    };\n\n    u.map(evt, processEvt);\n\n    return false;\n};\n\n// Cleanly destroy the manager\nManager.prototype.destroy = function () {\n    var self = this;\n    self.unbindDocument(true);\n    self.ids = {};\n    self.index = 0;\n    self.collections.forEach(function(collection) {\n        collection.destroy();\n    });\n    self.off();\n};\n\n// When a collection gets destroyed\n// we clean behind.\nManager.prototype.onDestroyed = function (evt, coll) {\n    var self = this;\n    if (self.collections.indexOf(coll) < 0) {\n        return false;\n    }\n    self.collections.splice(self.collections.indexOf(coll), 1);\n};\n\nexport default Manager;\n", "import Manager from './manager';\n\nconst factory = new Manager();\nexport default {\n    create: function (options) {\n        return factory.create(options);\n    },\n    factory: factory\n};\n", "/* global AFRAME, THREE */\nimport nipplejs from \"nipplejs\";\n\nAFRAME.registerComponent(\"nipple-controls\", {\n  schema: {\n    enabled: { default: true },\n    mode: { default: \"dynamic\", oneOf: [\"static\", \"semi\", \"dynamic\"] },\n    rotationSensitivity: { default: 1.0 },\n    moveJoystickEnabled: { default: true },\n    lookJoystickEnabled: { default: true },\n    sideMargin: { default: \"30px\" },\n    bottomMargin: { default: \"70px\" },\n    moveJoystickPosition: { default: \"left\", oneOf: [\"left\", \"right\"] },\n    lookJoystickPosition: { default: \"right\", oneOf: [\"left\", \"right\"] },\n  },\n\n  init() {\n    this.dVelocity = new THREE.Vector3();\n    this.lookVector = new THREE.Vector2();\n    const lookControls = this.el.querySelector(\"[look-controls]\").components[\"look-controls\"];\n    this.pitchObject = lookControls.pitchObject;\n    this.yawObject = lookControls.yawObject;\n    this.rigRotation = this.el.object3D.rotation;\n    this.moveData = undefined;\n    this.lookData = undefined;\n    this.moving = false;\n    this.rotating = false;\n  },\n\n  update(oldData) {\n    if (\n      this.data.moveJoystickPosition !== oldData.moveJoystickPosition ||\n      this.data.sideMargin !== oldData.sideMargin ||\n      this.data.bottomMargin !== oldData.bottomMargin ||\n      this.data.mode !== oldData.mode\n    ) {\n      this.removeMoveJoystick();\n    }\n    if (\n      this.data.lookJoystickPosition !== oldData.lookJoystickPosition ||\n      this.data.sideMargin !== oldData.sideMargin ||\n      this.data.bottomMargin !== oldData.bottomMargin ||\n      this.data.mode !== oldData.mode\n    ) {\n      this.removeLookJoystick();\n    }\n    if (this.data.enabled && this.data.moveJoystickEnabled) {\n      this.createMoveJoystick();\n    } else {\n      this.removeMoveJoystick();\n    }\n    if (this.data.enabled && this.data.lookJoystickEnabled) {\n      this.createLookJoystick();\n    } else {\n      this.removeLookJoystick();\n    }\n  },\n\n  pause() {\n    this.moving = false;\n    this.rotating = false;\n  },\n\n  remove() {\n    this.removeMoveJoystick();\n    this.removeLookJoystick();\n  },\n\n  isVelocityActive() {\n    return this.data.enabled && this.moving;\n  },\n\n  getVelocityDelta() {\n    this.dVelocity.set(0, 0, 0);\n    if (this.isVelocityActive()) {\n      const force = this.moveData.force < 1 ? this.moveData.force : 1;\n      const angle = this.moveData.angle.radian;\n      const x = Math.cos(angle) * force;\n      const z = -Math.sin(angle) * force;\n      this.dVelocity.set(x, 0, z);\n    }\n    return this.dVelocity; // We don't do a clone() here, the Vector3 will be modified by the calling code but that's fine.\n  },\n\n  isRotationActive() {\n    return this.data.enabled && this.rotating;\n  },\n\n  updateRotation(dt) {\n    if (!this.isRotationActive()) return;\n\n    const force = this.lookData.force < 1 ? this.lookData.force : 1;\n    const angle = this.lookData.angle.radian;\n    const lookVector = this.lookVector;\n    lookVector.x = Math.cos(angle) * force;\n    lookVector.y = Math.sin(angle) * force;\n    lookVector.multiplyScalar((this.data.rotationSensitivity * dt) / 1000);\n\n    this.yawObject.rotation.y -= lookVector.x;\n    let x = this.pitchObject.rotation.x + lookVector.y;\n    x = Math.max(-Math.PI / 2, Math.min(Math.PI / 2, x));\n    this.pitchObject.rotation.x = x;\n  },\n\n  tick: function (t, dt) {\n    this.updateRotation(dt);\n  },\n\n  initLeftZone() {\n    const leftZone = document.createElement(\"div\");\n    leftZone.setAttribute(\"id\", \"joystickLeftZone\");\n    leftZone.setAttribute(\n      \"style\",\n      `position:absolute;${this.data.moveJoystickPosition}:${this.data.sideMargin};bottom:${this.data.bottomMargin};z-index:1`\n    );\n    document.body.appendChild(leftZone);\n    this.leftZone = leftZone;\n  },\n\n  initRightZone() {\n    const rightZone = document.createElement(\"div\");\n    rightZone.setAttribute(\"id\", \"joystickRightZone\");\n    rightZone.setAttribute(\n      \"style\",\n      `position:absolute;${this.data.lookJoystickPosition}:${this.data.sideMargin};bottom:${this.data.bottomMargin};z-index:1`\n    );\n    document.body.appendChild(rightZone);\n    this.rightZone = rightZone;\n  },\n\n  createMoveJoystick() {\n    if (this.moveJoystick) return;\n    this.initLeftZone();\n    const options = {\n      mode: this.data.mode,\n      zone: this.leftZone,\n      color: \"white\",\n      fadeTime: 0,\n    };\n    this.leftZone.style.width = \"100px\";\n    if (this.data.mode === \"static\") {\n      this.leftZone.style.height = \"100px\";\n      options.position = { left: \"50%\", bottom: \"50%\" };\n    } else {\n      this.leftZone.style.height = \"400px\";\n    }\n\n    this.moveJoystick = nipplejs.create(options);\n    this.moveJoystick.on(\"move\", (evt, data) => {\n      this.moveData = data;\n      this.moving = true;\n    });\n    this.moveJoystick.on(\"end\", (evt, data) => {\n      this.moving = false;\n    });\n  },\n\n  createLookJoystick() {\n    if (this.lookJoystick) return;\n    this.initRightZone();\n    const options = {\n      mode: this.data.mode,\n      zone: this.rightZone,\n      color: \"white\",\n      fadeTime: 0,\n    };\n    this.rightZone.style.width = \"100px\";\n    if (this.data.mode === \"static\") {\n      this.rightZone.style.height = \"100px\";\n      options.position = { left: \"50%\", bottom: \"50%\" };\n    } else {\n      this.rightZone.style.height = \"400px\";\n    }\n\n    this.lookJoystick = nipplejs.create(options);\n    this.lookJoystick.on(\"move\", (evt, data) => {\n      this.lookData = data;\n      this.rotating = true;\n    });\n    this.lookJoystick.on(\"end\", (evt, data) => {\n      this.rotating = false;\n    });\n  },\n\n  removeMoveJoystick() {\n    if (this.moveJoystick) {\n      this.moveJoystick.destroy();\n      this.moveJoystick = undefined;\n    }\n\n    this.moveData = undefined;\n\n    if (this.leftZone && this.leftZone.parentNode) {\n      this.leftZone.remove();\n      this.leftZone = undefined;\n    }\n  },\n\n  removeLookJoystick() {\n    if (this.lookJoystick) {\n      this.lookJoystick.destroy();\n      this.lookJoystick = undefined;\n    }\n\n    this.lookData = undefined;\n\n    if (this.rightZone && this.rightZone.parentNode) {\n      this.rightZone.remove();\n      this.rightZone = undefined;\n    }\n  },\n});\n", "require('./checkpoint-controls');\nrequire('./gamepad-controls');\nrequire('./keyboard-controls');\nrequire('./touch-controls');\nrequire('./movement-controls');\nrequire('./trackpad-controls');\nrequire('./nipple-controls');\n", "const LoopMode = {\n  once: THREE.LoopOnce,\n  repeat: THREE.LoopRepeat,\n  pingpong: THREE.LoopPingPong\n};\n\n/**\n * animation-mixer\n *\n * Player for animation clips. Intended to be compatible with any model format that supports\n * skeletal or morph animations through THREE.AnimationMixer.\n * See: https://threejs.org/docs/?q=animation#Reference/Animation/AnimationMixer\n */\nmodule.exports = AFRAME.registerComponent('animation-mixer', {\n  schema: {\n    clip: { default: '*' },\n    useRegExp: {default: false},\n    duration: { default: 0 },\n    clampWhenFinished: { default: false, type: 'boolean' },\n    crossFadeDuration: { default: 0 },\n    loop: { default: 'repeat', oneOf: Object.keys(LoopMode) },\n    repetitions: { default: Infinity, min: 0 },\n    timeScale: { default: 1 },\n    startAt: { default: 0 }\n  },\n\n  init: function () {\n    /** @type {THREE.Mesh} */\n    this.model = null;\n    /** @type {THREE.AnimationMixer} */\n    this.mixer = null;\n    /** @type {Array<THREE.AnimationAction>} */\n    this.activeActions = [];\n\n    const model = this.el.getObject3D('mesh');\n\n    if (model) {\n      this.load(model);\n    } else {\n      this.el.addEventListener('model-loaded', (e) => {\n        this.load(e.detail.model);\n      });\n    }\n  },\n\n  load: function (model) {\n    const el = this.el;\n    this.model = model;\n    this.mixer = new THREE.AnimationMixer(model);\n    this.mixer.addEventListener('loop', (e) => {\n      el.emit('animation-loop', { action: e.action, loopDelta: e.loopDelta });\n    });\n    this.mixer.addEventListener('finished', (e) => {\n      el.emit('animation-finished', { action: e.action, direction: e.direction });\n    });\n    if (this.data.clip) this.update({});\n  },\n\n  remove: function () {\n    if (this.mixer) this.mixer.stopAllAction();\n  },\n\n  update: function (prevData) {\n    if (!prevData) return;\n\n    const data = this.data;\n    const changes = AFRAME.utils.diff(data, prevData);\n\n    // If selected clips have changed, restart animation.\n    if ('clip' in changes) {\n      this.stopAction();\n      if (data.clip) this.playAction();\n      return;\n    }\n\n    // Otherwise, modify running actions.\n    this.activeActions.forEach((action) => {\n      if ('duration' in changes && data.duration) {\n        action.setDuration(data.duration);\n      }\n      if ('clampWhenFinished' in changes) {\n        action.clampWhenFinished = data.clampWhenFinished;\n      }\n      if ('loop' in changes || 'repetitions' in changes) {\n        action.setLoop(LoopMode[data.loop], data.repetitions);\n      }\n      if ('timeScale' in changes) {\n        action.setEffectiveTimeScale(data.timeScale);\n      }\n    });\n  },\n\n  stopAction: function () {\n    const data = this.data;\n    for (let i = 0; i < this.activeActions.length; i++) {\n      data.crossFadeDuration\n        ? this.activeActions[i].fadeOut(data.crossFadeDuration)\n        : this.activeActions[i].stop();\n    }\n    this.activeActions.length = 0;\n  },\n\n  playAction: function () {\n    if (!this.mixer) return;\n\n    const model = this.model,\n      data = this.data,\n      clips = model.animations || (model.geometry || {}).animations || [];\n\n    if (!clips.length) return;\n\n    const re = data.useRegExp ? data.clip : wildcardToRegExp(data.clip);\n\n    for (let clip, i = 0; (clip = clips[i]); i++) {\n      if (clip.name.match(re)) {\n        const action = this.mixer.clipAction(clip, model);\n\n        action.enabled = true;\n        action.clampWhenFinished = data.clampWhenFinished;\n        if (data.duration) action.setDuration(data.duration);\n        if (data.timeScale !== 1) action.setEffectiveTimeScale(data.timeScale);\n        // animation-mixer.startAt and AnimationAction.startAt have very different meanings.\n        // animation-mixer.startAt indicates which frame in the animation to start at, in msecs.\n        // AnimationAction.startAt indicates when to start the animation (from the 1st frame),\n        // measured in global mixer time, in seconds.\n        action.startAt(this.mixer.time - data.startAt / 1000);\n        action\n          .setLoop(LoopMode[data.loop], data.repetitions)\n          .fadeIn(data.crossFadeDuration)\n          .play();\n        this.activeActions.push(action);\n      }\n    }\n  },\n\n  tick: function (t, dt) {\n    if (this.mixer && !isNaN(dt)) this.mixer.update(dt / 1000);\n  }\n});\n\n/**\n * Creates a RegExp from the given string, converting asterisks to .* expressions,\n * and escaping all other characters.\n */\nfunction wildcardToRegExp(s) {\n  return new RegExp('^' + s.split(/\\*+/).map(regExpEscape).join('.*') + '$');\n}\n\n/**\n * RegExp-escapes all characters in the given string.\n */\nfunction regExpEscape(s) {\n  return s.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n}\n", "/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nmodule.exports = THREE.ColladaLoader = function ( manager ) {\n\n  this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.ColladaLoader.prototype = {\n\n  constructor: THREE.ColladaLoader,\n\n  crossOrigin: 'anonymous',\n\n  load: function ( url, onLoad, onProgress, onError ) {\n\n    var scope = this;\n\n    var path = ( scope.path === undefined ) ? THREE.LoaderUtils.extractUrlBase( url ) : scope.path;\n\n    var loader = new THREE.FileLoader( scope.manager );\n    loader.setPath( scope.path );\n    loader.load( url, function ( text ) {\n\n      onLoad( scope.parse( text, path ) );\n\n    }, onProgress, onError );\n\n  },\n\n  setPath: function ( value ) {\n\n    this.path = value;\n    return this;\n\n  },\n\n  setResourcePath: function ( value ) {\n\n    this.resourcePath = value;\n    return this;\n\n  },\n\n  options: {\n\n    set convertUpAxis( value ) {\n\n      console.warn( 'THREE.ColladaLoader: options.convertUpAxis() has been removed. Up axis is converted automatically.' );\n\n    }\n\n  },\n\n  setCrossOrigin: function ( value ) {\n\n    this.crossOrigin = value;\n    return this;\n\n  },\n\n  parse: function ( text, path ) {\n\n    function getElementsByTagName( xml, name ) {\n\n      // Non recursive xml.getElementsByTagName() ...\n\n      var array = [];\n      var childNodes = xml.childNodes;\n\n      for ( var i = 0, l = childNodes.length; i < l; i ++ ) {\n\n        var child = childNodes[ i ];\n\n        if ( child.nodeName === name ) {\n\n          array.push( child );\n\n        }\n\n      }\n\n      return array;\n\n    }\n\n    function parseStrings( text ) {\n\n      if ( text.length === 0 ) return [];\n\n      var parts = text.trim().split( /\\s+/ );\n      var array = new Array( parts.length );\n\n      for ( var i = 0, l = parts.length; i < l; i ++ ) {\n\n        array[ i ] = parts[ i ];\n\n      }\n\n      return array;\n\n    }\n\n    function parseFloats( text ) {\n\n      if ( text.length === 0 ) return [];\n\n      var parts = text.trim().split( /\\s+/ );\n      var array = new Array( parts.length );\n\n      for ( var i = 0, l = parts.length; i < l; i ++ ) {\n\n        array[ i ] = parseFloat( parts[ i ] );\n\n      }\n\n      return array;\n\n    }\n\n    function parseInts( text ) {\n\n      if ( text.length === 0 ) return [];\n\n      var parts = text.trim().split( /\\s+/ );\n      var array = new Array( parts.length );\n\n      for ( var i = 0, l = parts.length; i < l; i ++ ) {\n\n        array[ i ] = parseInt( parts[ i ] );\n\n      }\n\n      return array;\n\n    }\n\n    function parseId( text ) {\n\n      return text.substring( 1 );\n\n    }\n\n    function generateId() {\n\n      return 'three_default_' + ( count ++ );\n\n    }\n\n    function isEmpty( object ) {\n\n      return Object.keys( object ).length === 0;\n\n    }\n\n    // asset\n\n    function parseAsset( xml ) {\n\n      return {\n        unit: parseAssetUnit( getElementsByTagName( xml, 'unit' )[ 0 ] ),\n        upAxis: parseAssetUpAxis( getElementsByTagName( xml, 'up_axis' )[ 0 ] )\n      };\n\n    }\n\n    function parseAssetUnit( xml ) {\n\n      if ( ( xml !== undefined ) && ( xml.hasAttribute( 'meter' ) === true ) ) {\n\n        return parseFloat( xml.getAttribute( 'meter' ) );\n\n      } else {\n\n        return 1; // default 1 meter\n\n      }\n\n    }\n\n    function parseAssetUpAxis( xml ) {\n\n      return xml !== undefined ? xml.textContent : 'Y_UP';\n\n    }\n\n    // library\n\n    function parseLibrary( xml, libraryName, nodeName, parser ) {\n\n      var library = getElementsByTagName( xml, libraryName )[ 0 ];\n\n      if ( library !== undefined ) {\n\n        var elements = getElementsByTagName( library, nodeName );\n\n        for ( var i = 0; i < elements.length; i ++ ) {\n\n          parser( elements[ i ] );\n\n        }\n\n      }\n\n    }\n\n    function buildLibrary( data, builder ) {\n\n      for ( var name in data ) {\n\n        var object = data[ name ];\n        object.build = builder( data[ name ] );\n\n      }\n\n    }\n\n    // get\n\n    function getBuild( data, builder ) {\n\n      if ( data.build !== undefined ) return data.build;\n\n      data.build = builder( data );\n\n      return data.build;\n\n    }\n\n    // animation\n\n    function parseAnimation( xml ) {\n\n      var data = {\n        sources: {},\n        samplers: {},\n        channels: {}\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        var id;\n\n        switch ( child.nodeName ) {\n\n          case 'source':\n            id = child.getAttribute( 'id' );\n            data.sources[ id ] = parseSource( child );\n            break;\n\n          case 'sampler':\n            id = child.getAttribute( 'id' );\n            data.samplers[ id ] = parseAnimationSampler( child );\n            break;\n\n          case 'channel':\n            id = child.getAttribute( 'target' );\n            data.channels[ id ] = parseAnimationChannel( child );\n            break;\n\n          default:\n            console.log( child );\n\n        }\n\n      }\n\n      library.animations[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function parseAnimationSampler( xml ) {\n\n      var data = {\n        inputs: {},\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'input':\n            var id = parseId( child.getAttribute( 'source' ) );\n            var semantic = child.getAttribute( 'semantic' );\n            data.inputs[ semantic ] = id;\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseAnimationChannel( xml ) {\n\n      var data = {};\n\n      var target = xml.getAttribute( 'target' );\n\n      // parsing SID Addressing Syntax\n\n      var parts = target.split( '/' );\n\n      var id = parts.shift();\n      var sid = parts.shift();\n\n      // check selection syntax\n\n      var arraySyntax = ( sid.indexOf( '(' ) !== - 1 );\n      var memberSyntax = ( sid.indexOf( '.' ) !== - 1 );\n\n      if ( memberSyntax ) {\n\n        //  member selection access\n\n        parts = sid.split( '.' );\n        sid = parts.shift();\n        data.member = parts.shift();\n\n      } else if ( arraySyntax ) {\n\n        // array-access syntax. can be used to express fields in one-dimensional vectors or two-dimensional matrices.\n\n        var indices = sid.split( '(' );\n        sid = indices.shift();\n\n        for ( var i = 0; i < indices.length; i ++ ) {\n\n          indices[ i ] = parseInt( indices[ i ].replace( /\\)/, '' ) );\n\n        }\n\n        data.indices = indices;\n\n      }\n\n      data.id = id;\n      data.sid = sid;\n\n      data.arraySyntax = arraySyntax;\n      data.memberSyntax = memberSyntax;\n\n      data.sampler = parseId( xml.getAttribute( 'source' ) );\n\n      return data;\n\n    }\n\n    function buildAnimation( data ) {\n\n      var tracks = [];\n\n      var channels = data.channels;\n      var samplers = data.samplers;\n      var sources = data.sources;\n\n      for ( var target in channels ) {\n\n        if ( channels.hasOwnProperty( target ) ) {\n\n          var channel = channels[ target ];\n          var sampler = samplers[ channel.sampler ];\n\n          var inputId = sampler.inputs.INPUT;\n          var outputId = sampler.inputs.OUTPUT;\n\n          var inputSource = sources[ inputId ];\n          var outputSource = sources[ outputId ];\n\n          var animation = buildAnimationChannel( channel, inputSource, outputSource );\n\n          createKeyframeTracks( animation, tracks );\n\n        }\n\n      }\n\n      return tracks;\n\n    }\n\n    function getAnimation( id ) {\n\n      return getBuild( library.animations[ id ], buildAnimation );\n\n    }\n\n    function buildAnimationChannel( channel, inputSource, outputSource ) {\n\n      var node = library.nodes[ channel.id ];\n      var object3D = getNode( node.id );\n\n      var transform = node.transforms[ channel.sid ];\n      var defaultMatrix = node.matrix.clone().transpose();\n\n      var time, stride;\n      var i, il, j, jl;\n\n      var data = {};\n\n      // the collada spec allows the animation of data in various ways.\n      // depending on the transform type (matrix, translate, rotate, scale), we execute different logic\n\n      switch ( transform ) {\n\n        case 'matrix':\n\n          for ( i = 0, il = inputSource.array.length; i < il; i ++ ) {\n\n            time = inputSource.array[ i ];\n            stride = i * outputSource.stride;\n\n            if ( data[ time ] === undefined ) data[ time ] = {};\n\n            if ( channel.arraySyntax === true ) {\n\n              var value = outputSource.array[ stride ];\n              var index = channel.indices[ 0 ] + 4 * channel.indices[ 1 ];\n\n              data[ time ][ index ] = value;\n\n            } else {\n\n              for ( j = 0, jl = outputSource.stride; j < jl; j ++ ) {\n\n                data[ time ][ j ] = outputSource.array[ stride + j ];\n\n              }\n\n            }\n\n          }\n\n          break;\n\n        case 'translate':\n          console.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\n          break;\n\n        case 'rotate':\n          console.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\n          break;\n\n        case 'scale':\n          console.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\n          break;\n\n      }\n\n      var keyframes = prepareAnimationData( data, defaultMatrix );\n\n      var animation = {\n        name: object3D.uuid,\n        keyframes: keyframes\n      };\n\n      return animation;\n\n    }\n\n    function prepareAnimationData( data, defaultMatrix ) {\n\n      var keyframes = [];\n\n      // transfer data into a sortable array\n\n      for ( var time in data ) {\n\n        keyframes.push( { time: parseFloat( time ), value: data[ time ] } );\n\n      }\n\n      // ensure keyframes are sorted by time\n\n      keyframes.sort( ascending );\n\n      // now we clean up all animation data, so we can use them for keyframe tracks\n\n      for ( var i = 0; i < 16; i ++ ) {\n\n        transformAnimationData( keyframes, i, defaultMatrix.elements[ i ] );\n\n      }\n\n      return keyframes;\n\n      // array sort function\n\n      function ascending( a, b ) {\n\n        return a.time - b.time;\n\n      }\n\n    }\n\n    var position = new THREE.Vector3();\n    var scale = new THREE.Vector3();\n    var quaternion = new THREE.Quaternion();\n\n    function createKeyframeTracks( animation, tracks ) {\n\n      var keyframes = animation.keyframes;\n      var name = animation.name;\n\n      var times = [];\n      var positionData = [];\n      var quaternionData = [];\n      var scaleData = [];\n\n      for ( var i = 0, l = keyframes.length; i < l; i ++ ) {\n\n        var keyframe = keyframes[ i ];\n\n        var time = keyframe.time;\n        var value = keyframe.value;\n\n        matrix.fromArray( value ).transpose();\n        matrix.decompose( position, quaternion, scale );\n\n        times.push( time );\n        positionData.push( position.x, position.y, position.z );\n        quaternionData.push( quaternion.x, quaternion.y, quaternion.z, quaternion.w );\n        scaleData.push( scale.x, scale.y, scale.z );\n\n      }\n\n      if ( positionData.length > 0 ) tracks.push( new THREE.VectorKeyframeTrack( name + '.position', times, positionData ) );\n      if ( quaternionData.length > 0 ) tracks.push( new THREE.QuaternionKeyframeTrack( name + '.quaternion', times, quaternionData ) );\n      if ( scaleData.length > 0 ) tracks.push( new THREE.VectorKeyframeTrack( name + '.scale', times, scaleData ) );\n\n      return tracks;\n\n    }\n\n    function transformAnimationData( keyframes, property, defaultValue ) {\n\n      var keyframe;\n\n      var empty = true;\n      var i, l;\n\n      // check, if values of a property are missing in our keyframes\n\n      for ( i = 0, l = keyframes.length; i < l; i ++ ) {\n\n        keyframe = keyframes[ i ];\n\n        if ( keyframe.value[ property ] === undefined ) {\n\n          keyframe.value[ property ] = null; // mark as missing\n\n        } else {\n\n          empty = false;\n\n        }\n\n      }\n\n      if ( empty === true ) {\n\n        // no values at all, so we set a default value\n\n        for ( i = 0, l = keyframes.length; i < l; i ++ ) {\n\n          keyframe = keyframes[ i ];\n\n          keyframe.value[ property ] = defaultValue;\n\n        }\n\n      } else {\n\n        // filling gaps\n\n        createMissingKeyframes( keyframes, property );\n\n      }\n\n    }\n\n    function createMissingKeyframes( keyframes, property ) {\n\n      var prev, next;\n\n      for ( var i = 0, l = keyframes.length; i < l; i ++ ) {\n\n        var keyframe = keyframes[ i ];\n\n        if ( keyframe.value[ property ] === null ) {\n\n          prev = getPrev( keyframes, i, property );\n          next = getNext( keyframes, i, property );\n\n          if ( prev === null ) {\n\n            keyframe.value[ property ] = next.value[ property ];\n            continue;\n\n          }\n\n          if ( next === null ) {\n\n            keyframe.value[ property ] = prev.value[ property ];\n            continue;\n\n          }\n\n          interpolate( keyframe, prev, next, property );\n\n        }\n\n      }\n\n    }\n\n    function getPrev( keyframes, i, property ) {\n\n      while ( i >= 0 ) {\n\n        var keyframe = keyframes[ i ];\n\n        if ( keyframe.value[ property ] !== null ) return keyframe;\n\n        i --;\n\n      }\n\n      return null;\n\n    }\n\n    function getNext( keyframes, i, property ) {\n\n      while ( i < keyframes.length ) {\n\n        var keyframe = keyframes[ i ];\n\n        if ( keyframe.value[ property ] !== null ) return keyframe;\n\n        i ++;\n\n      }\n\n      return null;\n\n    }\n\n    function interpolate( key, prev, next, property ) {\n\n      if ( ( next.time - prev.time ) === 0 ) {\n\n        key.value[ property ] = prev.value[ property ];\n        return;\n\n      }\n\n      key.value[ property ] = ( ( key.time - prev.time ) * ( next.value[ property ] - prev.value[ property ] ) / ( next.time - prev.time ) ) + prev.value[ property ];\n\n    }\n\n    // animation clips\n\n    function parseAnimationClip( xml ) {\n\n      var data = {\n        name: xml.getAttribute( 'id' ) || 'default',\n        start: parseFloat( xml.getAttribute( 'start' ) || 0 ),\n        end: parseFloat( xml.getAttribute( 'end' ) || 0 ),\n        animations: []\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'instance_animation':\n            data.animations.push( parseId( child.getAttribute( 'url' ) ) );\n            break;\n\n        }\n\n      }\n\n      library.clips[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function buildAnimationClip( data ) {\n\n      var tracks = [];\n\n      var name = data.name;\n      var duration = ( data.end - data.start ) || - 1;\n      var animations = data.animations;\n\n      for ( var i = 0, il = animations.length; i < il; i ++ ) {\n\n        var animationTracks = getAnimation( animations[ i ] );\n\n        for ( var j = 0, jl = animationTracks.length; j < jl; j ++ ) {\n\n          tracks.push( animationTracks[ j ] );\n\n        }\n\n      }\n\n      return new THREE.AnimationClip( name, duration, tracks );\n\n    }\n\n    function getAnimationClip( id ) {\n\n      return getBuild( library.clips[ id ], buildAnimationClip );\n\n    }\n\n    // controller\n\n    function parseController( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'skin':\n            // there is exactly one skin per controller\n            data.id = parseId( child.getAttribute( 'source' ) );\n            data.skin = parseSkin( child );\n            break;\n\n          case 'morph':\n            data.id = parseId( child.getAttribute( 'source' ) );\n            console.warn( 'THREE.ColladaLoader: Morph target animation not supported yet.' );\n            break;\n\n        }\n\n      }\n\n      library.controllers[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function parseSkin( xml ) {\n\n      var data = {\n        sources: {}\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'bind_shape_matrix':\n            data.bindShapeMatrix = parseFloats( child.textContent );\n            break;\n\n          case 'source':\n            var id = child.getAttribute( 'id' );\n            data.sources[ id ] = parseSource( child );\n            break;\n\n          case 'joints':\n            data.joints = parseJoints( child );\n            break;\n\n          case 'vertex_weights':\n            data.vertexWeights = parseVertexWeights( child );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseJoints( xml ) {\n\n      var data = {\n        inputs: {}\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'input':\n            var semantic = child.getAttribute( 'semantic' );\n            var id = parseId( child.getAttribute( 'source' ) );\n            data.inputs[ semantic ] = id;\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseVertexWeights( xml ) {\n\n      var data = {\n        inputs: {}\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'input':\n            var semantic = child.getAttribute( 'semantic' );\n            var id = parseId( child.getAttribute( 'source' ) );\n            var offset = parseInt( child.getAttribute( 'offset' ) );\n            data.inputs[ semantic ] = { id: id, offset: offset };\n            break;\n\n          case 'vcount':\n            data.vcount = parseInts( child.textContent );\n            break;\n\n          case 'v':\n            data.v = parseInts( child.textContent );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function buildController( data ) {\n\n      var build = {\n        id: data.id\n      };\n\n      var geometry = library.geometries[ build.id ];\n\n      if ( data.skin !== undefined ) {\n\n        build.skin = buildSkin( data.skin );\n\n        // we enhance the 'sources' property of the corresponding geometry with our skin data\n\n        geometry.sources.skinIndices = build.skin.indices;\n        geometry.sources.skinWeights = build.skin.weights;\n\n      }\n\n      return build;\n\n    }\n\n    function buildSkin( data ) {\n\n      var BONE_LIMIT = 4;\n\n      var build = {\n        joints: [], // this must be an array to preserve the joint order\n        indices: {\n          array: [],\n          stride: BONE_LIMIT\n        },\n        weights: {\n          array: [],\n          stride: BONE_LIMIT\n        }\n      };\n\n      var sources = data.sources;\n      var vertexWeights = data.vertexWeights;\n\n      var vcount = vertexWeights.vcount;\n      var v = vertexWeights.v;\n      var jointOffset = vertexWeights.inputs.JOINT.offset;\n      var weightOffset = vertexWeights.inputs.WEIGHT.offset;\n\n      var jointSource = data.sources[ data.joints.inputs.JOINT ];\n      var inverseSource = data.sources[ data.joints.inputs.INV_BIND_MATRIX ];\n\n      var weights = sources[ vertexWeights.inputs.WEIGHT.id ].array;\n      var stride = 0;\n\n      var i, j, l;\n\n      // procces skin data for each vertex\n\n      for ( i = 0, l = vcount.length; i < l; i ++ ) {\n\n        var jointCount = vcount[ i ]; // this is the amount of joints that affect a single vertex\n        var vertexSkinData = [];\n\n        for ( j = 0; j < jointCount; j ++ ) {\n\n          var skinIndex = v[ stride + jointOffset ];\n          var weightId = v[ stride + weightOffset ];\n          var skinWeight = weights[ weightId ];\n\n          vertexSkinData.push( { index: skinIndex, weight: skinWeight } );\n\n          stride += 2;\n\n        }\n\n        // we sort the joints in descending order based on the weights.\n        // this ensures, we only procced the most important joints of the vertex\n\n        vertexSkinData.sort( descending );\n\n        // now we provide for each vertex a set of four index and weight values.\n        // the order of the skin data matches the order of vertices\n\n        for ( j = 0; j < BONE_LIMIT; j ++ ) {\n\n          var d = vertexSkinData[ j ];\n\n          if ( d !== undefined ) {\n\n            build.indices.array.push( d.index );\n            build.weights.array.push( d.weight );\n\n          } else {\n\n            build.indices.array.push( 0 );\n            build.weights.array.push( 0 );\n\n          }\n\n        }\n\n      }\n\n      // setup bind matrix\n\n      if ( data.bindShapeMatrix ) {\n\n        build.bindMatrix = new THREE.Matrix4().fromArray( data.bindShapeMatrix ).transpose();\n\n      } else {\n\n        build.bindMatrix = new THREE.Matrix4().identity();\n\n      }\n\n      // process bones and inverse bind matrix data\n\n      for ( i = 0, l = jointSource.array.length; i < l; i ++ ) {\n\n        var name = jointSource.array[ i ];\n        var boneInverse = new THREE.Matrix4().fromArray( inverseSource.array, i * inverseSource.stride ).transpose();\n\n        build.joints.push( { name: name, boneInverse: boneInverse } );\n\n      }\n\n      return build;\n\n      // array sort function\n\n      function descending( a, b ) {\n\n        return b.weight - a.weight;\n\n      }\n\n    }\n\n    function getController( id ) {\n\n      return getBuild( library.controllers[ id ], buildController );\n\n    }\n\n    // image\n\n    function parseImage( xml ) {\n\n      var data = {\n        init_from: getElementsByTagName( xml, 'init_from' )[ 0 ].textContent\n      };\n\n      library.images[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function buildImage( data ) {\n\n      if ( data.build !== undefined ) return data.build;\n\n      return data.init_from;\n\n    }\n\n    function getImage( id ) {\n\n      var data = library.images[ id ];\n\n      if ( data !== undefined ) {\n\n        return getBuild( data, buildImage );\n\n      }\n\n      console.warn( 'THREE.ColladaLoader: Couldn\\'t find image with ID:', id );\n\n      return null;\n\n    }\n\n    // effect\n\n    function parseEffect( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'profile_COMMON':\n            data.profile = parseEffectProfileCOMMON( child );\n            break;\n\n        }\n\n      }\n\n      library.effects[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function parseEffectProfileCOMMON( xml ) {\n\n      var data = {\n        surfaces: {},\n        samplers: {}\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'newparam':\n            parseEffectNewparam( child, data );\n            break;\n\n          case 'technique':\n            data.technique = parseEffectTechnique( child );\n            break;\n\n          case 'extra':\n            data.extra = parseEffectExtra( child );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseEffectNewparam( xml, data ) {\n\n      var sid = xml.getAttribute( 'sid' );\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'surface':\n            data.surfaces[ sid ] = parseEffectSurface( child );\n            break;\n\n          case 'sampler2D':\n            data.samplers[ sid ] = parseEffectSampler( child );\n            break;\n\n        }\n\n      }\n\n    }\n\n    function parseEffectSurface( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'init_from':\n            data.init_from = child.textContent;\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseEffectSampler( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'source':\n            data.source = child.textContent;\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseEffectTechnique( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'constant':\n          case 'lambert':\n          case 'blinn':\n          case 'phong':\n            data.type = child.nodeName;\n            data.parameters = parseEffectParameters( child );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseEffectParameters( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'emission':\n          case 'diffuse':\n          case 'specular':\n          case 'bump':\n          case 'ambient':\n          case 'shininess':\n          case 'transparency':\n            data[ child.nodeName ] = parseEffectParameter( child );\n            break;\n          case 'transparent':\n            data[ child.nodeName ] = {\n              opaque: child.getAttribute( 'opaque' ),\n              data: parseEffectParameter( child )\n            };\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseEffectParameter( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'color':\n            data[ child.nodeName ] = parseFloats( child.textContent );\n            break;\n\n          case 'float':\n            data[ child.nodeName ] = parseFloat( child.textContent );\n            break;\n\n          case 'texture':\n            data[ child.nodeName ] = { id: child.getAttribute( 'texture' ), extra: parseEffectParameterTexture( child ) };\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseEffectParameterTexture( xml ) {\n\n      var data = {\n        technique: {}\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'extra':\n            parseEffectParameterTextureExtra( child, data );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseEffectParameterTextureExtra( xml, data ) {\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'technique':\n            parseEffectParameterTextureExtraTechnique( child, data );\n            break;\n\n        }\n\n      }\n\n    }\n\n    function parseEffectParameterTextureExtraTechnique( xml, data ) {\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'repeatU':\n          case 'repeatV':\n          case 'offsetU':\n          case 'offsetV':\n            data.technique[ child.nodeName ] = parseFloat( child.textContent );\n            break;\n\n          case 'wrapU':\n          case 'wrapV':\n\n            // some files have values for wrapU/wrapV which become NaN via parseInt\n\n            if ( child.textContent.toUpperCase() === 'TRUE' ) {\n\n              data.technique[ child.nodeName ] = 1;\n\n            } else if ( child.textContent.toUpperCase() === 'FALSE' ) {\n\n              data.technique[ child.nodeName ] = 0;\n\n            } else {\n\n              data.technique[ child.nodeName ] = parseInt( child.textContent );\n\n            }\n\n            break;\n\n        }\n\n      }\n\n    }\n\n    function parseEffectExtra( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'technique':\n            data.technique = parseEffectExtraTechnique( child );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseEffectExtraTechnique( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'double_sided':\n            data[ child.nodeName ] = parseInt( child.textContent );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function buildEffect( data ) {\n\n      return data;\n\n    }\n\n    function getEffect( id ) {\n\n      return getBuild( library.effects[ id ], buildEffect );\n\n    }\n\n    // material\n\n    function parseMaterial( xml ) {\n\n      var data = {\n        name: xml.getAttribute( 'name' )\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'instance_effect':\n            data.url = parseId( child.getAttribute( 'url' ) );\n            break;\n\n        }\n\n      }\n\n      library.materials[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function getTextureLoader( image ) {\n\n      var loader;\n\n      var extension = image.slice( ( image.lastIndexOf( '.' ) - 1 >>> 0 ) + 2 ); // http://www.jstips.co/en/javascript/get-file-extension/\n      extension = extension.toLowerCase();\n\n      switch ( extension ) {\n\n        case 'tga':\n          loader = tgaLoader;\n          break;\n\n        default:\n          loader = textureLoader;\n\n      }\n\n      return loader;\n\n    }\n\n    function buildMaterial( data ) {\n\n      var effect = getEffect( data.url );\n      var technique = effect.profile.technique;\n      var extra = effect.profile.extra;\n\n      var material;\n\n      switch ( technique.type ) {\n\n        case 'phong':\n        case 'blinn':\n          material = new THREE.MeshPhongMaterial();\n          break;\n\n        case 'lambert':\n          material = new THREE.MeshLambertMaterial();\n          break;\n\n        default:\n          material = new THREE.MeshBasicMaterial();\n          break;\n\n      }\n\n      material.name = data.name;\n\n      function getTexture( textureObject ) {\n\n        var sampler = effect.profile.samplers[ textureObject.id ];\n        var image = null;\n\n        // get image\n\n        if ( sampler !== undefined ) {\n\n          var surface = effect.profile.surfaces[ sampler.source ];\n          image = getImage( surface.init_from );\n\n        } else {\n\n          console.warn( 'THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530).' );\n          image = getImage( textureObject.id );\n\n        }\n\n        // create texture if image is avaiable\n\n        if ( image !== null ) {\n\n          var loader = getTextureLoader( image );\n\n          if ( loader !== undefined ) {\n\n            var texture = loader.load( image );\n\n            var extra = textureObject.extra;\n\n            if ( extra !== undefined && extra.technique !== undefined && isEmpty( extra.technique ) === false ) {\n\n              var technique = extra.technique;\n\n              texture.wrapS = technique.wrapU ? THREE.RepeatWrapping : THREE.ClampToEdgeWrapping;\n              texture.wrapT = technique.wrapV ? THREE.RepeatWrapping : THREE.ClampToEdgeWrapping;\n\n              texture.offset.set( technique.offsetU || 0, technique.offsetV || 0 );\n              texture.repeat.set( technique.repeatU || 1, technique.repeatV || 1 );\n\n            } else {\n\n              texture.wrapS = THREE.RepeatWrapping;\n              texture.wrapT = THREE.RepeatWrapping;\n\n            }\n\n            return texture;\n\n          } else {\n\n            console.warn( 'THREE.ColladaLoader: Loader for texture %s not found.', image );\n\n            return null;\n\n          }\n\n        } else {\n\n          console.warn( 'THREE.ColladaLoader: Couldn\\'t create texture with ID:', textureObject.id );\n\n          return null;\n\n        }\n\n      }\n\n      var parameters = technique.parameters;\n\n      for ( var key in parameters ) {\n\n        var parameter = parameters[ key ];\n\n        switch ( key ) {\n\n          case 'diffuse':\n            if ( parameter.color ) material.color.fromArray( parameter.color );\n            if ( parameter.texture ) material.map = getTexture( parameter.texture );\n            break;\n          case 'specular':\n            if ( parameter.color && material.specular ) material.specular.fromArray( parameter.color );\n            if ( parameter.texture ) material.specularMap = getTexture( parameter.texture );\n            break;\n          case 'bump':\n            if ( parameter.texture ) material.normalMap = getTexture( parameter.texture );\n            break;\n          case 'ambient':\n            if ( parameter.texture ) material.lightMap = getTexture( parameter.texture );\n            break;\n          case 'shininess':\n            if ( parameter.float && material.shininess ) material.shininess = parameter.float;\n            break;\n          case 'emission':\n            if ( parameter.color && material.emissive ) material.emissive.fromArray( parameter.color );\n            if ( parameter.texture ) material.emissiveMap = getTexture( parameter.texture );\n            break;\n\n        }\n\n      }\n\n      //\n\n      var transparent = parameters[ 'transparent' ];\n      var transparency = parameters[ 'transparency' ];\n\n      // <transparency> does not exist but <transparent>\n\n      if ( transparency === undefined && transparent ) {\n\n        transparency = {\n          float: 1\n        };\n\n      }\n\n      // <transparent> does not exist but <transparency>\n\n      if ( transparent === undefined && transparency ) {\n\n        transparent = {\n          opaque: 'A_ONE',\n          data: {\n            color: [ 1, 1, 1, 1 ]\n          } };\n\n      }\n\n      if ( transparent && transparency ) {\n\n        // handle case if a texture exists but no color\n\n        if ( transparent.data.texture ) {\n\n          // we do not set an alpha map (see #13792)\n\n          material.transparent = true;\n\n        } else {\n\n          var color = transparent.data.color;\n\n          switch ( transparent.opaque ) {\n\n            case 'A_ONE':\n              material.opacity = color[ 3 ] * transparency.float;\n              break;\n            case 'RGB_ZERO':\n              material.opacity = 1 - ( color[ 0 ] * transparency.float );\n              break;\n            case 'A_ZERO':\n              material.opacity = 1 - ( color[ 3 ] * transparency.float );\n              break;\n            case 'RGB_ONE':\n              material.opacity = color[ 0 ] * transparency.float;\n              break;\n            default:\n              console.warn( 'THREE.ColladaLoader: Invalid opaque type \"%s\" of transparent tag.', transparent.opaque );\n\n          }\n\n          if ( material.opacity < 1 ) material.transparent = true;\n\n        }\n\n      }\n\n      //\n\n      if ( extra !== undefined && extra.technique !== undefined && extra.technique.double_sided === 1 ) {\n\n        material.side = THREE.DoubleSide;\n\n      }\n\n      return material;\n\n    }\n\n    function getMaterial( id ) {\n\n      return getBuild( library.materials[ id ], buildMaterial );\n\n    }\n\n    // camera\n\n    function parseCamera( xml ) {\n\n      var data = {\n        name: xml.getAttribute( 'name' )\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'optics':\n            data.optics = parseCameraOptics( child );\n            break;\n\n        }\n\n      }\n\n      library.cameras[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function parseCameraOptics( xml ) {\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        switch ( child.nodeName ) {\n\n          case 'technique_common':\n            return parseCameraTechnique( child );\n\n        }\n\n      }\n\n      return {};\n\n    }\n\n    function parseCameraTechnique( xml ) {\n\n      var data = {};\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        switch ( child.nodeName ) {\n\n          case 'perspective':\n          case 'orthographic':\n\n            data.technique = child.nodeName;\n            data.parameters = parseCameraParameters( child );\n\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseCameraParameters( xml ) {\n\n      var data = {};\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        switch ( child.nodeName ) {\n\n          case 'xfov':\n          case 'yfov':\n          case 'xmag':\n          case 'ymag':\n          case 'znear':\n          case 'zfar':\n          case 'aspect_ratio':\n            data[ child.nodeName ] = parseFloat( child.textContent );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function buildCamera( data ) {\n\n      var camera;\n\n      switch ( data.optics.technique ) {\n\n        case 'perspective':\n          camera = new THREE.PerspectiveCamera(\n            data.optics.parameters.yfov,\n            data.optics.parameters.aspect_ratio,\n            data.optics.parameters.znear,\n            data.optics.parameters.zfar\n          );\n          break;\n\n        case 'orthographic':\n          var ymag = data.optics.parameters.ymag;\n          var xmag = data.optics.parameters.xmag;\n          var aspectRatio = data.optics.parameters.aspect_ratio;\n\n          xmag = ( xmag === undefined ) ? ( ymag * aspectRatio ) : xmag;\n          ymag = ( ymag === undefined ) ? ( xmag / aspectRatio ) : ymag;\n\n          xmag *= 0.5;\n          ymag *= 0.5;\n\n          camera = new THREE.OrthographicCamera(\n            - xmag, xmag, ymag, - ymag, // left, right, top, bottom\n            data.optics.parameters.znear,\n            data.optics.parameters.zfar\n          );\n          break;\n\n        default:\n          camera = new THREE.PerspectiveCamera();\n          break;\n\n      }\n\n      camera.name = data.name;\n\n      return camera;\n\n    }\n\n    function getCamera( id ) {\n\n      var data = library.cameras[ id ];\n\n      if ( data !== undefined ) {\n\n        return getBuild( data, buildCamera );\n\n      }\n\n      console.warn( 'THREE.ColladaLoader: Couldn\\'t find camera with ID:', id );\n\n      return null;\n\n    }\n\n    // light\n\n    function parseLight( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'technique_common':\n            data = parseLightTechnique( child );\n            break;\n\n        }\n\n      }\n\n      library.lights[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function parseLightTechnique( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'directional':\n          case 'point':\n          case 'spot':\n          case 'ambient':\n\n            data.technique = child.nodeName;\n            data.parameters = parseLightParameters( child );\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseLightParameters( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'color':\n            var array = parseFloats( child.textContent );\n            data.color = new THREE.Color().fromArray( array );\n            break;\n\n          case 'falloff_angle':\n            data.falloffAngle = parseFloat( child.textContent );\n            break;\n\n          case 'quadratic_attenuation':\n            var f = parseFloat( child.textContent );\n            data.distance = f ? Math.sqrt( 1 / f ) : 0;\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function buildLight( data ) {\n\n      var light;\n\n      switch ( data.technique ) {\n\n        case 'directional':\n          light = new THREE.DirectionalLight();\n          break;\n\n        case 'point':\n          light = new THREE.PointLight();\n          break;\n\n        case 'spot':\n          light = new THREE.SpotLight();\n          break;\n\n        case 'ambient':\n          light = new THREE.AmbientLight();\n          break;\n\n      }\n\n      if ( data.parameters.color ) light.color.copy( data.parameters.color );\n      if ( data.parameters.distance ) light.distance = data.parameters.distance;\n\n      return light;\n\n    }\n\n    function getLight( id ) {\n\n      var data = library.lights[ id ];\n\n      if ( data !== undefined ) {\n\n        return getBuild( data, buildLight );\n\n      }\n\n      console.warn( 'THREE.ColladaLoader: Couldn\\'t find light with ID:', id );\n\n      return null;\n\n    }\n\n    // geometry\n\n    function parseGeometry( xml ) {\n\n      var data = {\n        name: xml.getAttribute( 'name' ),\n        sources: {},\n        vertices: {},\n        primitives: []\n      };\n\n      var mesh = getElementsByTagName( xml, 'mesh' )[ 0 ];\n\n      // the following tags inside geometry are not supported yet (see https://github.com/mrdoob/three.js/pull/12606): convex_mesh, spline, brep\n      if ( mesh === undefined ) return;\n\n      for ( var i = 0; i < mesh.childNodes.length; i ++ ) {\n\n        var child = mesh.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        var id = child.getAttribute( 'id' );\n\n        switch ( child.nodeName ) {\n\n          case 'source':\n            data.sources[ id ] = parseSource( child );\n            break;\n\n          case 'vertices':\n            // data.sources[ id ] = data.sources[ parseId( getElementsByTagName( child, 'input' )[ 0 ].getAttribute( 'source' ) ) ];\n            data.vertices = parseGeometryVertices( child );\n            break;\n\n          case 'polygons':\n            console.warn( 'THREE.ColladaLoader: Unsupported primitive type: ', child.nodeName );\n            break;\n\n          case 'lines':\n          case 'linestrips':\n          case 'polylist':\n          case 'triangles':\n            data.primitives.push( parseGeometryPrimitive( child ) );\n            break;\n\n          default:\n            console.log( child );\n\n        }\n\n      }\n\n      library.geometries[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function parseSource( xml ) {\n\n      var data = {\n        array: [],\n        stride: 3\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'float_array':\n            data.array = parseFloats( child.textContent );\n            break;\n\n          case 'Name_array':\n            data.array = parseStrings( child.textContent );\n            break;\n\n          case 'technique_common':\n            var accessor = getElementsByTagName( child, 'accessor' )[ 0 ];\n\n            if ( accessor !== undefined ) {\n\n              data.stride = parseInt( accessor.getAttribute( 'stride' ) );\n\n            }\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseGeometryVertices( xml ) {\n\n      var data = {};\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        data[ child.getAttribute( 'semantic' ) ] = parseId( child.getAttribute( 'source' ) );\n\n      }\n\n      return data;\n\n    }\n\n    function parseGeometryPrimitive( xml ) {\n\n      var primitive = {\n        type: xml.nodeName,\n        material: xml.getAttribute( 'material' ),\n        count: parseInt( xml.getAttribute( 'count' ) ),\n        inputs: {},\n        stride: 0,\n        hasUV: false\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'input':\n            var id = parseId( child.getAttribute( 'source' ) );\n            var semantic = child.getAttribute( 'semantic' );\n            var offset = parseInt( child.getAttribute( 'offset' ) );\n            var set = parseInt( child.getAttribute( 'set' ) );\n            var inputname = ( set > 0 ? semantic + set : semantic );\n            primitive.inputs[ inputname ] = { id: id, offset: offset };\n            primitive.stride = Math.max( primitive.stride, offset + 1 );\n            if ( semantic === 'TEXCOORD' ) primitive.hasUV = true;\n            break;\n\n          case 'vcount':\n            primitive.vcount = parseInts( child.textContent );\n            break;\n\n          case 'p':\n            primitive.p = parseInts( child.textContent );\n            break;\n\n        }\n\n      }\n\n      return primitive;\n\n    }\n\n    function groupPrimitives( primitives ) {\n\n      var build = {};\n\n      for ( var i = 0; i < primitives.length; i ++ ) {\n\n        var primitive = primitives[ i ];\n\n        if ( build[ primitive.type ] === undefined ) build[ primitive.type ] = [];\n\n        build[ primitive.type ].push( primitive );\n\n      }\n\n      return build;\n\n    }\n\n    function checkUVCoordinates( primitives ) {\n\n      var count = 0;\n\n      for ( var i = 0, l = primitives.length; i < l; i ++ ) {\n\n        var primitive = primitives[ i ];\n\n        if ( primitive.hasUV === true ) {\n\n          count ++;\n\n        }\n\n      }\n\n      if ( count > 0 && count < primitives.length ) {\n\n        primitives.uvsNeedsFix = true;\n\n      }\n\n    }\n\n    function buildGeometry( data ) {\n\n      var build = {};\n\n      var sources = data.sources;\n      var vertices = data.vertices;\n      var primitives = data.primitives;\n\n      if ( primitives.length === 0 ) return {};\n\n      // our goal is to create one buffer geometry for a single type of primitives\n      // first, we group all primitives by their type\n\n      var groupedPrimitives = groupPrimitives( primitives );\n\n      for ( var type in groupedPrimitives ) {\n\n        var primitiveType = groupedPrimitives[ type ];\n\n        // second, ensure consistent uv coordinates for each type of primitives (polylist,triangles or lines)\n\n        checkUVCoordinates( primitiveType );\n\n        // third, create a buffer geometry for each type of primitives\n\n        build[ type ] = buildGeometryType( primitiveType, sources, vertices );\n\n      }\n\n      return build;\n\n    }\n\n    function buildGeometryType( primitives, sources, vertices ) {\n\n      var build = {};\n\n      var position = { array: [], stride: 0 };\n      var normal = { array: [], stride: 0 };\n      var uv = { array: [], stride: 0 };\n      var uv2 = { array: [], stride: 0 };\n      var color = { array: [], stride: 0 };\n\n      var skinIndex = { array: [], stride: 4 };\n      var skinWeight = { array: [], stride: 4 };\n\n      var geometry = new THREE.BufferGeometry();\n\n      var materialKeys = [];\n\n      var start = 0;\n\n      for ( var p = 0; p < primitives.length; p ++ ) {\n\n        var primitive = primitives[ p ];\n        var inputs = primitive.inputs;\n\n        // groups\n\n        var count = 0;\n\n        switch ( primitive.type ) {\n\n          case 'lines':\n          case 'linestrips':\n            count = primitive.count * 2;\n            break;\n\n          case 'triangles':\n            count = primitive.count * 3;\n            break;\n\n          case 'polylist':\n\n            for ( var g = 0; g < primitive.count; g ++ ) {\n\n              var vc = primitive.vcount[ g ];\n\n              switch ( vc ) {\n\n                case 3:\n                  count += 3; // single triangle\n                  break;\n\n                case 4:\n                  count += 6; // quad, subdivided into two triangles\n                  break;\n\n                default:\n                  count += ( vc - 2 ) * 3; // polylist with more than four vertices\n                  break;\n\n              }\n\n            }\n\n            break;\n\n          default:\n            console.warn( 'THREE.ColladaLoader: Unknow primitive type:', primitive.type );\n\n        }\n\n        geometry.addGroup( start, count, p );\n        start += count;\n\n        // material\n\n        if ( primitive.material ) {\n\n          materialKeys.push( primitive.material );\n\n        }\n\n        // geometry data\n\n        for ( var name in inputs ) {\n\n          var input = inputs[ name ];\n\n          switch ( name ) {\n\n            case 'VERTEX':\n              for ( var key in vertices ) {\n\n                var id = vertices[ key ];\n\n                switch ( key ) {\n\n                  case 'POSITION':\n                    var prevLength = position.array.length;\n                    buildGeometryData( primitive, sources[ id ], input.offset, position.array );\n                    position.stride = sources[ id ].stride;\n\n                    if ( sources.skinWeights && sources.skinIndices ) {\n\n                      buildGeometryData( primitive, sources.skinIndices, input.offset, skinIndex.array );\n                      buildGeometryData( primitive, sources.skinWeights, input.offset, skinWeight.array );\n\n                    }\n\n                    // see #3803\n\n                    if ( primitive.hasUV === false && primitives.uvsNeedsFix === true ) {\n\n                      var count = ( position.array.length - prevLength ) / position.stride;\n\n                      for ( var i = 0; i < count; i ++ ) {\n\n                        // fill missing uv coordinates\n\n                        uv.array.push( 0, 0 );\n\n                      }\n\n                    }\n                    break;\n\n                  case 'NORMAL':\n                    buildGeometryData( primitive, sources[ id ], input.offset, normal.array );\n                    normal.stride = sources[ id ].stride;\n                    break;\n\n                  case 'COLOR':\n                    buildGeometryData( primitive, sources[ id ], input.offset, color.array );\n                    color.stride = sources[ id ].stride;\n                    break;\n\n                  case 'TEXCOORD':\n                    buildGeometryData( primitive, sources[ id ], input.offset, uv.array );\n                    uv.stride = sources[ id ].stride;\n                    break;\n\n                  case 'TEXCOORD1':\n                    buildGeometryData( primitive, sources[ id ], input.offset, uv2.array );\n                    uv.stride = sources[ id ].stride;\n                    break;\n\n                  default:\n                    console.warn( 'THREE.ColladaLoader: Semantic \"%s\" not handled in geometry build process.', key );\n\n                }\n\n              }\n              break;\n\n            case 'NORMAL':\n              buildGeometryData( primitive, sources[ input.id ], input.offset, normal.array );\n              normal.stride = sources[ input.id ].stride;\n              break;\n\n            case 'COLOR':\n              buildGeometryData( primitive, sources[ input.id ], input.offset, color.array );\n              color.stride = sources[ input.id ].stride;\n              break;\n\n            case 'TEXCOORD':\n              buildGeometryData( primitive, sources[ input.id ], input.offset, uv.array );\n              uv.stride = sources[ input.id ].stride;\n              break;\n\n            case 'TEXCOORD1':\n              buildGeometryData( primitive, sources[ input.id ], input.offset, uv2.array );\n              uv2.stride = sources[ input.id ].stride;\n              break;\n\n          }\n\n        }\n\n      }\n\n      // build geometry\n\n      if ( position.array.length > 0 ) geometry.addAttribute( 'position', new THREE.Float32BufferAttribute( position.array, position.stride ) );\n      if ( normal.array.length > 0 ) geometry.addAttribute( 'normal', new THREE.Float32BufferAttribute( normal.array, normal.stride ) );\n      if ( color.array.length > 0 ) geometry.addAttribute( 'color', new THREE.Float32BufferAttribute( color.array, color.stride ) );\n      if ( uv.array.length > 0 ) geometry.addAttribute( 'uv', new THREE.Float32BufferAttribute( uv.array, uv.stride ) );\n      if ( uv2.array.length > 0 ) geometry.addAttribute( 'uv2', new THREE.Float32BufferAttribute( uv2.array, uv2.stride ) );\n\n      if ( skinIndex.array.length > 0 ) geometry.addAttribute( 'skinIndex', new THREE.Float32BufferAttribute( skinIndex.array, skinIndex.stride ) );\n      if ( skinWeight.array.length > 0 ) geometry.addAttribute( 'skinWeight', new THREE.Float32BufferAttribute( skinWeight.array, skinWeight.stride ) );\n\n      build.data = geometry;\n      build.type = primitives[ 0 ].type;\n      build.materialKeys = materialKeys;\n\n      return build;\n\n    }\n\n    function buildGeometryData( primitive, source, offset, array ) {\n\n      var indices = primitive.p;\n      var stride = primitive.stride;\n      var vcount = primitive.vcount;\n\n      function pushVector( i ) {\n\n        var index = indices[ i + offset ] * sourceStride;\n        var length = index + sourceStride;\n\n        for ( ; index < length; index ++ ) {\n\n          array.push( sourceArray[ index ] );\n\n        }\n\n      }\n\n      var sourceArray = source.array;\n      var sourceStride = source.stride;\n\n      if ( primitive.vcount !== undefined ) {\n\n        var index = 0;\n\n        for ( var i = 0, l = vcount.length; i < l; i ++ ) {\n\n          var count = vcount[ i ];\n\n          if ( count === 4 ) {\n\n            var a = index + stride * 0;\n            var b = index + stride * 1;\n            var c = index + stride * 2;\n            var d = index + stride * 3;\n\n            pushVector( a ); pushVector( b ); pushVector( d );\n            pushVector( b ); pushVector( c ); pushVector( d );\n\n          } else if ( count === 3 ) {\n\n            var a = index + stride * 0;\n            var b = index + stride * 1;\n            var c = index + stride * 2;\n\n            pushVector( a ); pushVector( b ); pushVector( c );\n\n          } else if ( count > 4 ) {\n\n            for ( var k = 1, kl = ( count - 2 ); k <= kl; k ++ ) {\n\n              var a = index + stride * 0;\n              var b = index + stride * k;\n              var c = index + stride * ( k + 1 );\n\n              pushVector( a ); pushVector( b ); pushVector( c );\n\n            }\n\n          }\n\n          index += stride * count;\n\n        }\n\n      } else {\n\n        for ( var i = 0, l = indices.length; i < l; i += stride ) {\n\n          pushVector( i );\n\n        }\n\n      }\n\n    }\n\n    function getGeometry( id ) {\n\n      return getBuild( library.geometries[ id ], buildGeometry );\n\n    }\n\n    // kinematics\n\n    function parseKinematicsModel( xml ) {\n\n      var data = {\n        name: xml.getAttribute( 'name' ) || '',\n        joints: {},\n        links: []\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'technique_common':\n            parseKinematicsTechniqueCommon( child, data );\n            break;\n\n        }\n\n      }\n\n      library.kinematicsModels[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function buildKinematicsModel( data ) {\n\n      if ( data.build !== undefined ) return data.build;\n\n      return data;\n\n    }\n\n    function getKinematicsModel( id ) {\n\n      return getBuild( library.kinematicsModels[ id ], buildKinematicsModel );\n\n    }\n\n    function parseKinematicsTechniqueCommon( xml, data ) {\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'joint':\n            data.joints[ child.getAttribute( 'sid' ) ] = parseKinematicsJoint( child );\n            break;\n\n          case 'link':\n            data.links.push( parseKinematicsLink( child ) );\n            break;\n\n        }\n\n      }\n\n    }\n\n    function parseKinematicsJoint( xml ) {\n\n      var data;\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'prismatic':\n          case 'revolute':\n            data = parseKinematicsJointParameter( child );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseKinematicsJointParameter( xml, data ) {\n\n      var data = {\n        sid: xml.getAttribute( 'sid' ),\n        name: xml.getAttribute( 'name' ) || '',\n        axis: new THREE.Vector3(),\n        limits: {\n          min: 0,\n          max: 0\n        },\n        type: xml.nodeName,\n        static: false,\n        zeroPosition: 0,\n        middlePosition: 0\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'axis':\n            var array = parseFloats( child.textContent );\n            data.axis.fromArray( array );\n            break;\n          case 'limits':\n            var max = child.getElementsByTagName( 'max' )[ 0 ];\n            var min = child.getElementsByTagName( 'min' )[ 0 ];\n\n            data.limits.max = parseFloat( max.textContent );\n            data.limits.min = parseFloat( min.textContent );\n            break;\n\n        }\n\n      }\n\n      // if min is equal to or greater than max, consider the joint static\n\n      if ( data.limits.min >= data.limits.max ) {\n\n        data.static = true;\n\n      }\n\n      // calculate middle position\n\n      data.middlePosition = ( data.limits.min + data.limits.max ) / 2.0;\n\n      return data;\n\n    }\n\n    function parseKinematicsLink( xml ) {\n\n      var data = {\n        sid: xml.getAttribute( 'sid' ),\n        name: xml.getAttribute( 'name' ) || '',\n        attachments: [],\n        transforms: []\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'attachment_full':\n            data.attachments.push( parseKinematicsAttachment( child ) );\n            break;\n\n          case 'matrix':\n          case 'translate':\n          case 'rotate':\n            data.transforms.push( parseKinematicsTransform( child ) );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseKinematicsAttachment( xml ) {\n\n      var data = {\n        joint: xml.getAttribute( 'joint' ).split( '/' ).pop(),\n        transforms: [],\n        links: []\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'link':\n            data.links.push( parseKinematicsLink( child ) );\n            break;\n\n          case 'matrix':\n          case 'translate':\n          case 'rotate':\n            data.transforms.push( parseKinematicsTransform( child ) );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseKinematicsTransform( xml ) {\n\n      var data = {\n        type: xml.nodeName\n      };\n\n      var array = parseFloats( xml.textContent );\n\n      switch ( data.type ) {\n\n        case 'matrix':\n          data.obj = new THREE.Matrix4();\n          data.obj.fromArray( array ).transpose();\n          break;\n\n        case 'translate':\n          data.obj = new THREE.Vector3();\n          data.obj.fromArray( array );\n          break;\n\n        case 'rotate':\n          data.obj = new THREE.Vector3();\n          data.obj.fromArray( array );\n          data.angle = THREE.MathUtils.degToRad( array[ 3 ] );\n          break;\n\n      }\n\n      return data;\n\n    }\n\n    // physics\n\n    function parsePhysicsModel( xml ) {\n\n      var data = {\n        name: xml.getAttribute( 'name' ) || '',\n        rigidBodies: {}\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'rigid_body':\n            data.rigidBodies[ child.getAttribute( 'name' ) ] = {};\n            parsePhysicsRigidBody( child, data.rigidBodies[ child.getAttribute( 'name' ) ] );\n            break;\n\n        }\n\n      }\n\n      library.physicsModels[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function parsePhysicsRigidBody( xml, data ) {\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'technique_common':\n            parsePhysicsTechniqueCommon( child, data );\n            break;\n\n        }\n\n      }\n\n    }\n\n    function parsePhysicsTechniqueCommon( xml, data ) {\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'inertia':\n            data.inertia = parseFloats( child.textContent );\n            break;\n\n          case 'mass':\n            data.mass = parseFloats( child.textContent )[ 0 ];\n            break;\n\n        }\n\n      }\n\n    }\n\n    // scene\n\n    function parseKinematicsScene( xml ) {\n\n      var data = {\n        bindJointAxis: []\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'bind_joint_axis':\n            data.bindJointAxis.push( parseKinematicsBindJointAxis( child ) );\n            break;\n\n        }\n\n      }\n\n      library.kinematicsScenes[ parseId( xml.getAttribute( 'url' ) ) ] = data;\n\n    }\n\n    function parseKinematicsBindJointAxis( xml ) {\n\n      var data = {\n        target: xml.getAttribute( 'target' ).split( '/' ).pop()\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'axis':\n            var param = child.getElementsByTagName( 'param' )[ 0 ];\n            data.axis = param.textContent;\n            var tmpJointIndex = data.axis.split( 'inst_' ).pop().split( 'axis' )[ 0 ];\n            data.jointIndex = tmpJointIndex.substr( 0, tmpJointIndex.length - 1 );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function buildKinematicsScene( data ) {\n\n      if ( data.build !== undefined ) return data.build;\n\n      return data;\n\n    }\n\n    function getKinematicsScene( id ) {\n\n      return getBuild( library.kinematicsScenes[ id ], buildKinematicsScene );\n\n    }\n\n    function setupKinematics() {\n\n      var kinematicsModelId = Object.keys( library.kinematicsModels )[ 0 ];\n      var kinematicsSceneId = Object.keys( library.kinematicsScenes )[ 0 ];\n      var visualSceneId = Object.keys( library.visualScenes )[ 0 ];\n\n      if ( kinematicsModelId === undefined || kinematicsSceneId === undefined ) return;\n\n      var kinematicsModel = getKinematicsModel( kinematicsModelId );\n      var kinematicsScene = getKinematicsScene( kinematicsSceneId );\n      var visualScene = getVisualScene( visualSceneId );\n\n      var bindJointAxis = kinematicsScene.bindJointAxis;\n      var jointMap = {};\n\n      for ( var i = 0, l = bindJointAxis.length; i < l; i ++ ) {\n\n        var axis = bindJointAxis[ i ];\n\n        // the result of the following query is an element of type 'translate', 'rotate','scale' or 'matrix'\n\n        var targetElement = collada.querySelector( '[sid=\"' + axis.target + '\"]' );\n\n        if ( targetElement ) {\n\n          // get the parent of the transfrom element\n\n          var parentVisualElement = targetElement.parentElement;\n\n          // connect the joint of the kinematics model with the element in the visual scene\n\n          connect( axis.jointIndex, parentVisualElement );\n\n        }\n\n      }\n\n      function connect( jointIndex, visualElement ) {\n\n        var visualElementName = visualElement.getAttribute( 'name' );\n        var joint = kinematicsModel.joints[ jointIndex ];\n\n        visualScene.traverse( function ( object ) {\n\n          if ( object.name === visualElementName ) {\n\n            jointMap[ jointIndex ] = {\n              object: object,\n              transforms: buildTransformList( visualElement ),\n              joint: joint,\n              position: joint.zeroPosition\n            };\n\n          }\n\n        } );\n\n      }\n\n      var m0 = new THREE.Matrix4();\n\n      kinematics = {\n\n        joints: kinematicsModel && kinematicsModel.joints,\n\n        getJointValue: function ( jointIndex ) {\n\n          var jointData = jointMap[ jointIndex ];\n\n          if ( jointData ) {\n\n            return jointData.position;\n\n          } else {\n\n            console.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' doesn\\'t exist.' );\n\n          }\n\n        },\n\n        setJointValue: function ( jointIndex, value ) {\n\n          var jointData = jointMap[ jointIndex ];\n\n          if ( jointData ) {\n\n            var joint = jointData.joint;\n\n            if ( value > joint.limits.max || value < joint.limits.min ) {\n\n              console.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' value ' + value + ' outside of limits (min: ' + joint.limits.min + ', max: ' + joint.limits.max + ').' );\n\n            } else if ( joint.static ) {\n\n              console.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' is static.' );\n\n            } else {\n\n              var object = jointData.object;\n              var axis = joint.axis;\n              var transforms = jointData.transforms;\n\n              matrix.identity();\n\n              // each update, we have to apply all transforms in the correct order\n\n              for ( var i = 0; i < transforms.length; i ++ ) {\n\n                var transform = transforms[ i ];\n\n                // if there is a connection of the transform node with a joint, apply the joint value\n\n                if ( transform.sid && transform.sid.indexOf( jointIndex ) !== - 1 ) {\n\n                  switch ( joint.type ) {\n\n                    case 'revolute':\n                      matrix.multiply( m0.makeRotationAxis( axis, THREE.MathUtils.degToRad( value ) ) );\n                      break;\n\n                    case 'prismatic':\n                      matrix.multiply( m0.makeTranslation( axis.x * value, axis.y * value, axis.z * value ) );\n                      break;\n\n                    default:\n                      console.warn( 'THREE.ColladaLoader: Unknown joint type: ' + joint.type );\n                      break;\n\n                  }\n\n                } else {\n\n                  switch ( transform.type ) {\n\n                    case 'matrix':\n                      matrix.multiply( transform.obj );\n                      break;\n\n                    case 'translate':\n                      matrix.multiply( m0.makeTranslation( transform.obj.x, transform.obj.y, transform.obj.z ) );\n                      break;\n\n                    case 'scale':\n                      matrix.scale( transform.obj );\n                      break;\n\n                    case 'rotate':\n                      matrix.multiply( m0.makeRotationAxis( transform.obj, transform.angle ) );\n                      break;\n\n                  }\n\n                }\n\n              }\n\n              object.matrix.copy( matrix );\n              object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n              jointMap[ jointIndex ].position = value;\n\n            }\n\n          } else {\n\n            console.log( 'THREE.ColladaLoader: ' + jointIndex + ' does not exist.' );\n\n          }\n\n        }\n\n      };\n\n    }\n\n    function buildTransformList( node ) {\n\n      var transforms = [];\n\n      var xml = collada.querySelector( '[id=\"' + node.id + '\"]' );\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'matrix':\n            var array = parseFloats( child.textContent );\n            var matrix = new THREE.Matrix4().fromArray( array ).transpose();\n            transforms.push( {\n              sid: child.getAttribute( 'sid' ),\n              type: child.nodeName,\n              obj: matrix\n            } );\n            break;\n\n          case 'translate':\n          case 'scale':\n            var array = parseFloats( child.textContent );\n            var vector = new THREE.Vector3().fromArray( array );\n            transforms.push( {\n              sid: child.getAttribute( 'sid' ),\n              type: child.nodeName,\n              obj: vector\n            } );\n            break;\n\n          case 'rotate':\n            var array = parseFloats( child.textContent );\n            var vector = new THREE.Vector3().fromArray( array );\n            var angle = THREE.MathUtils.degToRad( array[ 3 ] );\n            transforms.push( {\n              sid: child.getAttribute( 'sid' ),\n              type: child.nodeName,\n              obj: vector,\n              angle: angle\n            } );\n            break;\n\n        }\n\n      }\n\n      return transforms;\n\n    }\n\n    // nodes\n\n    function prepareNodes( xml ) {\n\n      var elements = xml.getElementsByTagName( 'node' );\n\n      // ensure all node elements have id attributes\n\n      for ( var i = 0; i < elements.length; i ++ ) {\n\n        var element = elements[ i ];\n\n        if ( element.hasAttribute( 'id' ) === false ) {\n\n          element.setAttribute( 'id', generateId() );\n\n        }\n\n      }\n\n    }\n\n    var matrix = new THREE.Matrix4();\n    var vector = new THREE.Vector3();\n\n    function parseNode( xml ) {\n\n      var data = {\n        name: xml.getAttribute( 'name' ) || '',\n        type: xml.getAttribute( 'type' ),\n        id: xml.getAttribute( 'id' ),\n        sid: xml.getAttribute( 'sid' ),\n        matrix: new THREE.Matrix4(),\n        nodes: [],\n        instanceCameras: [],\n        instanceControllers: [],\n        instanceLights: [],\n        instanceGeometries: [],\n        instanceNodes: [],\n        transforms: {}\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'node':\n            data.nodes.push( child.getAttribute( 'id' ) );\n            parseNode( child );\n            break;\n\n          case 'instance_camera':\n            data.instanceCameras.push( parseId( child.getAttribute( 'url' ) ) );\n            break;\n\n          case 'instance_controller':\n            data.instanceControllers.push( parseNodeInstance( child ) );\n            break;\n\n          case 'instance_light':\n            data.instanceLights.push( parseId( child.getAttribute( 'url' ) ) );\n            break;\n\n          case 'instance_geometry':\n            data.instanceGeometries.push( parseNodeInstance( child ) );\n            break;\n\n          case 'instance_node':\n            data.instanceNodes.push( parseId( child.getAttribute( 'url' ) ) );\n            break;\n\n          case 'matrix':\n            var array = parseFloats( child.textContent );\n            data.matrix.multiply( matrix.fromArray( array ).transpose() );\n            data.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n            break;\n\n          case 'translate':\n            var array = parseFloats( child.textContent );\n            vector.fromArray( array );\n            data.matrix.multiply( matrix.makeTranslation( vector.x, vector.y, vector.z ) );\n            data.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n            break;\n\n          case 'rotate':\n            var array = parseFloats( child.textContent );\n            var angle = THREE.MathUtils.degToRad( array[ 3 ] );\n            data.matrix.multiply( matrix.makeRotationAxis( vector.fromArray( array ), angle ) );\n            data.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n            break;\n\n          case 'scale':\n            var array = parseFloats( child.textContent );\n            data.matrix.scale( vector.fromArray( array ) );\n            data.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n            break;\n\n          case 'extra':\n            break;\n\n          default:\n            console.log( child );\n\n        }\n\n      }\n\n      if ( hasNode( data.id ) ) {\n\n        console.warn( 'THREE.ColladaLoader: There is already a node with ID %s. Exclude current node from further processing.', data.id );\n\n      } else {\n\n        library.nodes[ data.id ] = data;\n\n      }\n\n      return data;\n\n    }\n\n    function parseNodeInstance( xml ) {\n\n      var data = {\n        id: parseId( xml.getAttribute( 'url' ) ),\n        materials: {},\n        skeletons: []\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        switch ( child.nodeName ) {\n\n          case 'bind_material':\n            var instances = child.getElementsByTagName( 'instance_material' );\n\n            for ( var j = 0; j < instances.length; j ++ ) {\n\n              var instance = instances[ j ];\n              var symbol = instance.getAttribute( 'symbol' );\n              var target = instance.getAttribute( 'target' );\n\n              data.materials[ symbol ] = parseId( target );\n\n            }\n\n            break;\n\n          case 'skeleton':\n            data.skeletons.push( parseId( child.textContent ) );\n            break;\n\n          default:\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function buildSkeleton( skeletons, joints ) {\n\n      var boneData = [];\n      var sortedBoneData = [];\n\n      var i, j, data;\n\n      // a skeleton can have multiple root bones. collada expresses this\n      // situtation with multiple \"skeleton\" tags per controller instance\n\n      for ( i = 0; i < skeletons.length; i ++ ) {\n\n        var skeleton = skeletons[ i ];\n\n        var root;\n\n        if ( hasNode( skeleton ) ) {\n\n          root = getNode( skeleton );\n          buildBoneHierarchy( root, joints, boneData );\n\n        } else if ( hasVisualScene( skeleton ) ) {\n\n          // handle case where the skeleton refers to the visual scene (#13335)\n\n          var visualScene = library.visualScenes[ skeleton ];\n          var children = visualScene.children;\n\n          for ( var j = 0; j < children.length; j ++ ) {\n\n            var child = children[ j ];\n\n            if ( child.type === 'JOINT' ) {\n\n              var root = getNode( child.id );\n              buildBoneHierarchy( root, joints, boneData );\n\n            }\n\n          }\n\n        } else {\n\n          console.error( 'THREE.ColladaLoader: Unable to find root bone of skeleton with ID:', skeleton );\n\n        }\n\n      }\n\n      // sort bone data (the order is defined in the corresponding controller)\n\n      for ( i = 0; i < joints.length; i ++ ) {\n\n        for ( j = 0; j < boneData.length; j ++ ) {\n\n          data = boneData[ j ];\n\n          if ( data.bone.name === joints[ i ].name ) {\n\n            sortedBoneData[ i ] = data;\n            data.processed = true;\n            break;\n\n          }\n\n        }\n\n      }\n\n      // add unprocessed bone data at the end of the list\n\n      for ( i = 0; i < boneData.length; i ++ ) {\n\n        data = boneData[ i ];\n\n        if ( data.processed === false ) {\n\n          sortedBoneData.push( data );\n          data.processed = true;\n\n        }\n\n      }\n\n      // setup arrays for skeleton creation\n\n      var bones = [];\n      var boneInverses = [];\n\n      for ( i = 0; i < sortedBoneData.length; i ++ ) {\n\n        data = sortedBoneData[ i ];\n\n        bones.push( data.bone );\n        boneInverses.push( data.boneInverse );\n\n      }\n\n      return new THREE.Skeleton( bones, boneInverses );\n\n    }\n\n    function buildBoneHierarchy( root, joints, boneData ) {\n\n      // setup bone data from visual scene\n\n      root.traverse( function ( object ) {\n\n        if ( object.isBone === true ) {\n\n          var boneInverse;\n\n          // retrieve the boneInverse from the controller data\n\n          for ( var i = 0; i < joints.length; i ++ ) {\n\n            var joint = joints[ i ];\n\n            if ( joint.name === object.name ) {\n\n              boneInverse = joint.boneInverse;\n              break;\n\n            }\n\n          }\n\n          if ( boneInverse === undefined ) {\n\n            // Unfortunately, there can be joints in the visual scene that are not part of the\n            // corresponding controller. In this case, we have to create a dummy boneInverse matrix\n            // for the respective bone. This bone won't affect any vertices, because there are no skin indices\n            // and weights defined for it. But we still have to add the bone to the sorted bone list in order to\n            // ensure a correct animation of the model.\n\n            boneInverse = new THREE.Matrix4();\n\n          }\n\n          boneData.push( { bone: object, boneInverse: boneInverse, processed: false } );\n\n        }\n\n      } );\n\n    }\n\n    function buildNode( data ) {\n\n      var objects = [];\n\n      var matrix = data.matrix;\n      var nodes = data.nodes;\n      var type = data.type;\n      var instanceCameras = data.instanceCameras;\n      var instanceControllers = data.instanceControllers;\n      var instanceLights = data.instanceLights;\n      var instanceGeometries = data.instanceGeometries;\n      var instanceNodes = data.instanceNodes;\n\n      // nodes\n\n      for ( var i = 0, l = nodes.length; i < l; i ++ ) {\n\n        objects.push( getNode( nodes[ i ] ) );\n\n      }\n\n      // instance cameras\n\n      for ( var i = 0, l = instanceCameras.length; i < l; i ++ ) {\n\n        var instanceCamera = getCamera( instanceCameras[ i ] );\n\n        if ( instanceCamera !== null ) {\n\n          objects.push( instanceCamera.clone() );\n\n        }\n\n      }\n\n      // instance controllers\n\n      for ( var i = 0, l = instanceControllers.length; i < l; i ++ ) {\n\n        var instance = instanceControllers[ i ];\n        var controller = getController( instance.id );\n        var geometries = getGeometry( controller.id );\n        var newObjects = buildObjects( geometries, instance.materials );\n\n        var skeletons = instance.skeletons;\n        var joints = controller.skin.joints;\n\n        var skeleton = buildSkeleton( skeletons, joints );\n\n        for ( var j = 0, jl = newObjects.length; j < jl; j ++ ) {\n\n          var object = newObjects[ j ];\n\n          if ( object.isSkinnedMesh ) {\n\n            object.bind( skeleton, controller.skin.bindMatrix );\n            object.normalizeSkinWeights();\n\n          }\n\n          objects.push( object );\n\n        }\n\n      }\n\n      // instance lights\n\n      for ( var i = 0, l = instanceLights.length; i < l; i ++ ) {\n\n        var instanceLight = getLight( instanceLights[ i ] );\n\n        if ( instanceLight !== null ) {\n\n          objects.push( instanceLight.clone() );\n\n        }\n\n      }\n\n      // instance geometries\n\n      for ( var i = 0, l = instanceGeometries.length; i < l; i ++ ) {\n\n        var instance = instanceGeometries[ i ];\n\n        // a single geometry instance in collada can lead to multiple object3Ds.\n        // this is the case when primitives are combined like triangles and lines\n\n        var geometries = getGeometry( instance.id );\n        var newObjects = buildObjects( geometries, instance.materials );\n\n        for ( var j = 0, jl = newObjects.length; j < jl; j ++ ) {\n\n          objects.push( newObjects[ j ] );\n\n        }\n\n      }\n\n      // instance nodes\n\n      for ( var i = 0, l = instanceNodes.length; i < l; i ++ ) {\n\n        objects.push( getNode( instanceNodes[ i ] ).clone() );\n\n      }\n\n      var object;\n\n      if ( nodes.length === 0 && objects.length === 1 ) {\n\n        object = objects[ 0 ];\n\n      } else {\n\n        object = ( type === 'JOINT' ) ? new THREE.Bone() : new THREE.Group();\n\n        for ( var i = 0; i < objects.length; i ++ ) {\n\n          object.add( objects[ i ] );\n\n        }\n\n      }\n\n      if ( object.name === '' ) {\n\n        object.name = ( type === 'JOINT' ) ? data.sid : data.name;\n\n      }\n\n      object.matrix.copy( matrix );\n      object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n      return object;\n\n    }\n\n    var fallbackMaterial = new THREE.MeshBasicMaterial( { color: 0xff00ff } );\n\n    function resolveMaterialBinding( keys, instanceMaterials ) {\n\n      var materials = [];\n\n      for ( var i = 0, l = keys.length; i < l; i ++ ) {\n\n        var id = instanceMaterials[ keys[ i ] ];\n\n        if ( id === undefined ) {\n\n          console.warn( 'THREE.ColladaLoader: Material with key %s not found. Apply fallback material.', keys[ i ] );\n          materials.push( fallbackMaterial );\n\n        } else {\n\n          materials.push( getMaterial( id ) );\n\n        }\n\n      }\n\n      return materials;\n\n    }\n\n    function buildObjects( geometries, instanceMaterials ) {\n\n      var objects = [];\n\n      for ( var type in geometries ) {\n\n        var geometry = geometries[ type ];\n\n        var materials = resolveMaterialBinding( geometry.materialKeys, instanceMaterials );\n\n        // handle case if no materials are defined\n\n        if ( materials.length === 0 ) {\n\n          if ( type === 'lines' || type === 'linestrips' ) {\n\n            materials.push( new THREE.LineBasicMaterial() );\n\n          } else {\n\n            materials.push( new THREE.MeshPhongMaterial() );\n\n          }\n\n        }\n\n        // regard skinning\n\n        var skinning = ( geometry.data.attributes.skinIndex !== undefined );\n\n        if ( skinning ) {\n\n          for ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n            materials[ i ].skinning = true;\n\n          }\n\n        }\n\n        // choose between a single or multi materials (material array)\n\n        var material = ( materials.length === 1 ) ? materials[ 0 ] : materials;\n\n        // now create a specific 3D object\n\n        var object;\n\n        switch ( type ) {\n\n          case 'lines':\n            object = new THREE.LineSegments( geometry.data, material );\n            break;\n\n          case 'linestrips':\n            object = new THREE.Line( geometry.data, material );\n            break;\n\n          case 'triangles':\n          case 'polylist':\n            if ( skinning ) {\n\n              object = new THREE.SkinnedMesh( geometry.data, material );\n\n            } else {\n\n              object = new THREE.Mesh( geometry.data, material );\n\n            }\n            break;\n\n        }\n\n        objects.push( object );\n\n      }\n\n      return objects;\n\n    }\n\n    function hasNode( id ) {\n\n      return library.nodes[ id ] !== undefined;\n\n    }\n\n    function getNode( id ) {\n\n      return getBuild( library.nodes[ id ], buildNode );\n\n    }\n\n    // visual scenes\n\n    function parseVisualScene( xml ) {\n\n      var data = {\n        name: xml.getAttribute( 'name' ),\n        children: []\n      };\n\n      prepareNodes( xml );\n\n      var elements = getElementsByTagName( xml, 'node' );\n\n      for ( var i = 0; i < elements.length; i ++ ) {\n\n        data.children.push( parseNode( elements[ i ] ) );\n\n      }\n\n      library.visualScenes[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function buildVisualScene( data ) {\n\n      var group = new THREE.Group();\n      group.name = data.name;\n\n      var children = data.children;\n\n      for ( var i = 0; i < children.length; i ++ ) {\n\n        var child = children[ i ];\n\n        group.add( getNode( child.id ) );\n\n      }\n\n      return group;\n\n    }\n\n    function hasVisualScene( id ) {\n\n      return library.visualScenes[ id ] !== undefined;\n\n    }\n\n    function getVisualScene( id ) {\n\n      return getBuild( library.visualScenes[ id ], buildVisualScene );\n\n    }\n\n    // scenes\n\n    function parseScene( xml ) {\n\n      var instance = getElementsByTagName( xml, 'instance_visual_scene' )[ 0 ];\n      return getVisualScene( parseId( instance.getAttribute( 'url' ) ) );\n\n    }\n\n    function setupAnimations() {\n\n      var clips = library.clips;\n\n      if ( isEmpty( clips ) === true ) {\n\n        if ( isEmpty( library.animations ) === false ) {\n\n          // if there are animations but no clips, we create a default clip for playback\n\n          var tracks = [];\n\n          for ( var id in library.animations ) {\n\n            var animationTracks = getAnimation( id );\n\n            for ( var i = 0, l = animationTracks.length; i < l; i ++ ) {\n\n              tracks.push( animationTracks[ i ] );\n\n            }\n\n          }\n\n          animations.push( new THREE.AnimationClip( 'default', - 1, tracks ) );\n\n        }\n\n      } else {\n\n        for ( var id in clips ) {\n\n          animations.push( getAnimationClip( id ) );\n\n        }\n\n      }\n\n    }\n\n    if ( text.length === 0 ) {\n\n      return { scene: new THREE.Scene() };\n\n    }\n\n    var xml = new DOMParser().parseFromString( text, 'application/xml' );\n\n    var collada = getElementsByTagName( xml, 'COLLADA' )[ 0 ];\n\n    // metadata\n\n    var version = collada.getAttribute( 'version' );\n    console.log( 'THREE.ColladaLoader: File version', version );\n\n    var asset = parseAsset( getElementsByTagName( collada, 'asset' )[ 0 ] );\n    var textureLoader = new THREE.TextureLoader( this.manager );\n    textureLoader.setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n    var tgaLoader;\n\n    if ( THREE.TGALoader ) {\n\n      tgaLoader = new THREE.TGALoader( this.manager );\n      tgaLoader.setPath( this.resourcePath || path );\n\n    }\n\n    //\n\n    var animations = [];\n    var kinematics = {};\n    var count = 0;\n\n    //\n\n    var library = {\n      animations: {},\n      clips: {},\n      controllers: {},\n      images: {},\n      effects: {},\n      materials: {},\n      cameras: {},\n      lights: {},\n      geometries: {},\n      nodes: {},\n      visualScenes: {},\n      kinematicsModels: {},\n      physicsModels: {},\n      kinematicsScenes: {}\n    };\n\n    parseLibrary( collada, 'library_animations', 'animation', parseAnimation );\n    parseLibrary( collada, 'library_animation_clips', 'animation_clip', parseAnimationClip );\n    parseLibrary( collada, 'library_controllers', 'controller', parseController );\n    parseLibrary( collada, 'library_images', 'image', parseImage );\n    parseLibrary( collada, 'library_effects', 'effect', parseEffect );\n    parseLibrary( collada, 'library_materials', 'material', parseMaterial );\n    parseLibrary( collada, 'library_cameras', 'camera', parseCamera );\n    parseLibrary( collada, 'library_lights', 'light', parseLight );\n    parseLibrary( collada, 'library_geometries', 'geometry', parseGeometry );\n    parseLibrary( collada, 'library_nodes', 'node', parseNode );\n    parseLibrary( collada, 'library_visual_scenes', 'visual_scene', parseVisualScene );\n    parseLibrary( collada, 'library_kinematics_models', 'kinematics_model', parseKinematicsModel );\n    parseLibrary( collada, 'library_physics_models', 'physics_model', parsePhysicsModel );\n    parseLibrary( collada, 'scene', 'instance_kinematics_scene', parseKinematicsScene );\n\n    buildLibrary( library.animations, buildAnimation );\n    buildLibrary( library.clips, buildAnimationClip );\n    buildLibrary( library.controllers, buildController );\n    buildLibrary( library.images, buildImage );\n    buildLibrary( library.effects, buildEffect );\n    buildLibrary( library.materials, buildMaterial );\n    buildLibrary( library.cameras, buildCamera );\n    buildLibrary( library.lights, buildLight );\n    buildLibrary( library.geometries, buildGeometry );\n    buildLibrary( library.visualScenes, buildVisualScene );\n\n    setupAnimations();\n    setupKinematics();\n\n    var scene = parseScene( getElementsByTagName( collada, 'scene' )[ 0 ] );\n\n    if ( asset.upAxis === 'Z_UP' ) {\n\n      scene.quaternion.setFromEuler( new THREE.Euler( - Math.PI / 2, 0, 0 ) );\n\n    }\n\n    scene.scale.multiplyScalar( asset.unit );\n\n    return {\n      animations: animations,\n      kinematics: kinematics,\n      library: library,\n      scene: scene\n    };\n\n  }\n\n};\n", "THREE.ColladaLoader = require('../../lib/ColladaLoader');\n\n/**\n * collada-model-legacy\n *\n * Loader for COLLADA (.dae) format.\n */\nmodule.exports.Component = AFRAME.registerComponent('collada-model-legacy', {\n  schema: {type: 'asset'},\n\n  init: function () {\n    this.model = null;\n    this.loader = new THREE.ColladaLoader();\n  },\n\n  update: function () {\n    var self = this;\n    var el = this.el;\n    var src = this.data;\n    var rendererSystem = this.el.sceneEl.systems.renderer;\n\n    if (!src) { return; }\n\n    this.remove();\n\n    this.loader.load(src, function (colladaModel) {\n      self.model = colladaModel.scene;\n      self.model.traverse(function (object) {\n        if (object.isMesh) {\n          var material = object.material;\n          if (material.color) rendererSystem.applyColorCorrection(material.color);\n          if (material.map) rendererSystem.applyColorCorrection(material.map);\n          if (material.emissive) rendererSystem.applyColorCorrection(material.emissive);\n          if (material.emissiveMap) rendererSystem.applyColorCorrection(material.emissiveMap);\n        }\n      });\n      el.setObject3D('mesh', self.model);\n      el.emit('model-loaded', {format: 'collada', model: self.model});\n    });\n  },\n\n  remove: function () {\n    if (!this.model) { return; }\n    this.el.removeObject3D('mesh');\n  }\n});\n", "/*!\nfflate - fast JavaScript compression/decompression\n<https://101arrowz.github.io/fflate>\nLicensed under MIT. https://github.com/101arrowz/fflate/blob/master/LICENSE\nversion 0.8.2\n*/\n\n// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new i32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return { b: b, r: r };\n};\nvar _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b.b, revfd = _b.r;\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 1; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    return new u8(v.subarray(s, e));\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, st, buf, dict) {\n    // source length       dict length\n    var sl = dat.length, dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l)\n        return buf || new u8(0);\n    var noBuf = !buf;\n    // have to estimate size\n    var resize = noBuf || st.i != 2;\n    // no state\n    var noSt = st.i;\n    // Assumes roughly 33% compression ratio average\n    if (noBuf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (resize)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17\n        if (resize)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (resize)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                if (bt < dt) {\n                    var shift = dl - dt, dend = Math.min(dt, end);\n                    if (shift + bt < 0)\n                        err(3);\n                    for (; bt < dend; ++bt)\n                        buf[bt] = dict[shift + bt];\n                }\n                for (; bt < end; ++bt)\n                    buf[bt] = buf[bt - dt];\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    // don't reallocate for streams or user buffers\n    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n    d[o + 2] |= v >> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return { t: et, l: 0 };\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return { t: v, l: 1 };\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return { t: new u8(tr), l: mbt };\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return { c: cl.subarray(0, cli), n: s };\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a.t, mlb = _a.l;\n    var _b = hTree(df, 15), ddt = _b.t, mdb = _b.l;\n    var _c = lc(dlt), lclt = _c.c, nlc = _c.n;\n    var _d = lc(ddt), lcdt = _d.c, ndc = _d.n;\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        ++lcfreq[lclt[i] & 31];\n    for (var i = 0; i < lcdt.length; ++i)\n        ++lcfreq[lcdt[i] & 31];\n    var _e = hTree(lcfreq, 7), lct = _e.t, mlcb = _e.l;\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n    if (bs >= 0 && flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        var sym = syms[i];\n        if (sym > 255) {\n            var len = (sym >> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n            var dst = sym & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[sym]), p += ll[sym];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, st) {\n    var s = st.z || dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var lst = st.l;\n    var pos = (st.r || 0) & 7;\n    if (lvl) {\n        if (pos)\n            w[0] = st.r >> 3;\n        var opt = deo[lvl - 1];\n        var n = opt >> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = st.p || new u16(32768), head = st.h || new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new i32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n        var lc_1 = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n        for (; i + 2 < s; ++i) {\n            // hash value\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = i - dif + j & 32767;\n                                    var pti = prev[ti];\n                                    var cd = ti - pti & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += imod - pimod & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one int32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        for (i = Math.max(i, wi); i < s; ++i) {\n            syms[li++] = dat[i];\n            ++lf[dat[i]];\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        if (!lst) {\n            st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n            // shft(pos) now 1 less if pos & 7 != 0\n            pos -= 7;\n            st.h = head, st.p = prev, st.i = i, st.w = wi;\n        }\n    }\n    else {\n        for (var i = st.w || 0; i < s + lst; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[(pos / 8) | 0] = lst;\n                e = s;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n        st.i = s;\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Adler32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    if (!st) {\n        st = { l: 1 };\n        if (opt.dictionary) {\n            var dict = opt.dictionary.subarray(-32768);\n            var newDat = new u8(dict.length + dat.length);\n            newDat.set(dict);\n            newDat.set(dat, dict.length);\n            dat = newDat;\n            st.w = dict.length;\n        }\n    }\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? (st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20) : (12 + opt.mem), pre, post, st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return fnStr;\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            fnStr = wcln(fns[i], fnStr, td_1);\n        ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };\n    }\n    var td = mrg({}, ch[id].e);\n    return wk(ch[id].c + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt]; };\nvar bDflt = function () { return [u8, u16, i32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zls]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get opts\nvar gopt = function (o) { return o && {\n    out: o.size && new u8(o.size),\n    dictionary: o.dictionary\n}; };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) {\n        if (ev.data.length) {\n            strm.push(ev.data[0], ev.data[1]);\n            postMessage([ev.data[0].length]);\n        }\n        else\n            strm.flush();\n    };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id, flush, ext) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else if (!Array.isArray(dat))\n            ext(dat);\n        else if (dat.length == 1) {\n            strm.queuedSize -= dat[0];\n            if (strm.ondrain)\n                strm.ondrain(dat[0]);\n        }\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.queuedSize = 0;\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        strm.queuedSize += d.length;\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n    if (flush) {\n        strm.flush = function () { w.postMessage([]); };\n    }\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += (d[10] | d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + (o.filename ? o.filename.length + 1 : 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (o.dictionary && 32);\n    c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n    if (o.dictionary) {\n        var h = adler();\n        h.p(o.dictionary);\n        wbytes(c, 2, h.d());\n    }\n};\n// zlib start\nvar zls = function (d, dict) {\n    if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if ((d[1] >> 5 & 1) == +!dict)\n        err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n    return (d[1] >> 3 & 4) + 2;\n};\nfunction StrmOpt(opts, cb) {\n    if (typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n        this.s = { l: 0, i: 32768, w: 32768, z: 32768 };\n        // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev\n        // 98304 = 32768 (lookback) + 65536 (common chunk size)\n        this.b = new u8(98304);\n        if (this.o.dictionary) {\n            var dict = this.o.dictionary.subarray(-32768);\n            this.b.set(dict, 32768 - dict.length);\n            this.s.i = 32768 - dict.length;\n        }\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, this.s), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        var endLen = chunk.length + this.s.z;\n        if (endLen > this.b.length) {\n            if (endLen > 2 * this.b.length - 32768) {\n                var newBuf = new u8(endLen & -32768);\n                newBuf.set(this.b.subarray(0, this.s.z));\n                this.b = newBuf;\n            }\n            var split = this.b.length - this.s.z;\n            this.b.set(chunk.subarray(0, split), this.s.z);\n            this.s.z = this.b.length;\n            this.p(this.b, false);\n            this.b.set(this.b.subarray(-32768));\n            this.b.set(chunk.subarray(split), 32768);\n            this.s.z = chunk.length - split + 32768;\n            this.s.i = 32766, this.s.w = 32768;\n        }\n        else {\n            this.b.set(chunk, this.s.z);\n            this.s.z += chunk.length;\n        }\n        this.s.l = final & 1;\n        if (this.s.z > this.s.w + 8191 || final) {\n            this.p(this.b, final || false);\n            this.s.w = this.s.i, this.s.i -= 2;\n        }\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * deflated output for small inputs.\n     */\n    Deflate.prototype.flush = function () {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        this.p(this.b, false);\n        this.s.w = this.s.i, this.s.i -= 2;\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6, 1);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    function Inflate(opts, cb) {\n        // no StrmOpt here to avoid adding to workerizer\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n        this.s = { i: 0, b: dict ? dict.length : 0 };\n        this.o = new u8(32768);\n        this.p = new u8(0);\n        if (dict)\n            this.o.set(dict);\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        if (!this.p.length)\n            this.p = c;\n        else if (c.length) {\n            var n = new u8(this.p.length + c.length);\n            n.set(this.p), n.set(c, this.p.length), this.p = n;\n        }\n    };\n    Inflate.prototype.c = function (final) {\n        this.s.i = +(this.d = final || false);\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.s, this.o);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    function AsyncInflate(opts, cb) {\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Inflate(ev.data);\n            onmessage = astrm(strm);\n        }, 7, 0);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gopt(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, opts) {\n    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        this.l += chunk.length;\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * GZIPped output for small inputs.\n     */\n    Gzip.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8, 1);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming single or multi-member GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    function Gunzip(opts, cb) {\n        this.v = 1;\n        this.r = 0;\n        Inflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        this.r += chunk.length;\n        if (this.v) {\n            var p = this.p.subarray(this.v - 1);\n            var s = p.length > 3 ? gzs(p) : 4;\n            if (s > p.length) {\n                if (!final)\n                    return;\n            }\n            else if (this.v > 1 && this.onmember) {\n                this.onmember(this.r - p.length);\n            }\n            this.p = p.subarray(s), this.v = 0;\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n        // process concatenated GZIP\n        if (this.s.f && !this.s.l && !final) {\n            this.v = shft(this.s.p) + 9;\n            this.s = { i: 0 };\n            this.o = new u8(0);\n            this.push(new u8(0), final);\n        }\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming single or multi-member GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    function AsyncGunzip(opts, cb) {\n        var _this = this;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gunzip(ev.data);\n            strm.onmember = function (offset) { return postMessage(offset); };\n            onmessage = astrm(strm);\n        }, 9, 0, function (offset) { return _this.onmember && _this.onmember(offset); });\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0], ev.data[1])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, opts) {\n    var st = gzs(data);\n    if (st + 8 > data.length)\n        err(6, 'invalid gzip data');\n    return inflt(data.subarray(st, -8), { i: 2 }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * zlibbed output for small inputs.\n     */\n    Zlib.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10, 1);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    function Unzlib(opts, cb) {\n        Inflate.call(this, opts, cb);\n        this.v = opts && opts.dictionary ? 2 : 1;\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 6 && !final)\n                return;\n            this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    function AsyncUnzlib(opts, cb) {\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Unzlib(ev.data);\n            onmessage = astrm(strm);\n        }, 11, 0);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gopt(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, opts) {\n    return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    function Decompress(opts, cb) {\n        this.o = StrmOpt.call(this, opts, cb) || {};\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n    }\n    // init substream\n    // overriden by AsyncDecompress\n    Decompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (dat, final) {\n            _this.ondata(dat, final);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(this.o)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(this.o)\n                        : new this.Z(this.o);\n                this.i();\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    function AsyncDecompress(opts, cb) {\n        Decompress.call(this, opts, cb);\n        this.queuedSize = 0;\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n    }\n    AsyncDecompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        };\n        this.s.ondrain = function (size) {\n            _this.queuedSize -= size;\n            if (_this.ondrain)\n                _this.ondrain(size);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        this.queuedSize += chunk.length;\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, opts) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, opts)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, opts)\n            : unzlibSync(data, opts);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return { s: r, r: slc(d, i - 1) };\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (final) {\n            if (r.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = r;\n        this.ondata(s, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td) {\n        return td.decode(dat);\n    }\n    else {\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (r.length)\n            err(8);\n        return s;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this.ondata(err, dat, final);\n                    _this.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this.d & 1))\n                        return;\n                    _this.u.splice(-1, 1);\n                    _this.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this = this;\n        this.i = new Inflate(function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this.k[0] == chks_3 && _this.c)\n                                        _this.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    // Synchronously decompress under 512KB, or barely-compressed data\n                    if (su < 524288 || sc > 0.8 * su) {\n                        try {\n                            cbl(null, inflateSync(infl, { out: new u8(su) }));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n", "import {\n\tVector3,\n\tVector4\n} from 'three';\n\n/**\n * NURBS utils\n *\n * See NURBSCurve and NURBSSurface.\n **/\n\n\n/**************************************************************\n *\tNURBS Utils\n **************************************************************/\n\n/*\nFinds knot vector span.\n\np : degree\nu : parametric value\nU : knot vector\n\nreturns the span\n*/\nfunction findSpan( p, u, U ) {\n\n\tconst n = U.length - p - 1;\n\n\tif ( u >= U[ n ] ) {\n\n\t\treturn n - 1;\n\n\t}\n\n\tif ( u <= U[ p ] ) {\n\n\t\treturn p;\n\n\t}\n\n\tlet low = p;\n\tlet high = n;\n\tlet mid = Math.floor( ( low + high ) / 2 );\n\n\twhile ( u < U[ mid ] || u >= U[ mid + 1 ] ) {\n\n\t\tif ( u < U[ mid ] ) {\n\n\t\t\thigh = mid;\n\n\t\t} else {\n\n\t\t\tlow = mid;\n\n\t\t}\n\n\t\tmid = Math.floor( ( low + high ) / 2 );\n\n\t}\n\n\treturn mid;\n\n}\n\n\n/*\nCalculate basis functions. See The NURBS Book, page 70, algorithm A2.2\n\nspan : span in which u lies\nu    : parametric point\np    : degree\nU    : knot vector\n\nreturns array[p+1] with basis functions values.\n*/\nfunction calcBasisFunctions( span, u, p, U ) {\n\n\tconst N = [];\n\tconst left = [];\n\tconst right = [];\n\tN[ 0 ] = 1.0;\n\n\tfor ( let j = 1; j <= p; ++ j ) {\n\n\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\tright[ j ] = U[ span + j ] - u;\n\n\t\tlet saved = 0.0;\n\n\t\tfor ( let r = 0; r < j; ++ r ) {\n\n\t\t\tconst rv = right[ r + 1 ];\n\t\t\tconst lv = left[ j - r ];\n\t\t\tconst temp = N[ r ] / ( rv + lv );\n\t\t\tN[ r ] = saved + rv * temp;\n\t\t\tsaved = lv * temp;\n\n\t\t}\n\n\t\tN[ j ] = saved;\n\n\t}\n\n\treturn N;\n\n}\n\n\n/*\nCalculate B-Spline curve points. See The NURBS Book, page 82, algorithm A3.1.\n\np : degree of B-Spline\nU : knot vector\nP : control points (x, y, z, w)\nu : parametric point\n\nreturns point for given u\n*/\nfunction calcBSplinePoint( p, U, P, u ) {\n\n\tconst span = findSpan( p, u, U );\n\tconst N = calcBasisFunctions( span, u, p, U );\n\tconst C = new Vector4( 0, 0, 0, 0 );\n\n\tfor ( let j = 0; j <= p; ++ j ) {\n\n\t\tconst point = P[ span - p + j ];\n\t\tconst Nj = N[ j ];\n\t\tconst wNj = point.w * Nj;\n\t\tC.x += point.x * wNj;\n\t\tC.y += point.y * wNj;\n\t\tC.z += point.z * wNj;\n\t\tC.w += point.w * Nj;\n\n\t}\n\n\treturn C;\n\n}\n\n\n/*\nCalculate basis functions derivatives. See The NURBS Book, page 72, algorithm A2.3.\n\nspan : span in which u lies\nu    : parametric point\np    : degree\nn    : number of derivatives to calculate\nU    : knot vector\n\nreturns array[n+1][p+1] with basis functions derivatives\n*/\nfunction calcBasisFunctionDerivatives( span, u, p, n, U ) {\n\n\tconst zeroArr = [];\n\tfor ( let i = 0; i <= p; ++ i )\n\t\tzeroArr[ i ] = 0.0;\n\n\tconst ders = [];\n\n\tfor ( let i = 0; i <= n; ++ i )\n\t\tders[ i ] = zeroArr.slice( 0 );\n\n\tconst ndu = [];\n\n\tfor ( let i = 0; i <= p; ++ i )\n\t\tndu[ i ] = zeroArr.slice( 0 );\n\n\tndu[ 0 ][ 0 ] = 1.0;\n\n\tconst left = zeroArr.slice( 0 );\n\tconst right = zeroArr.slice( 0 );\n\n\tfor ( let j = 1; j <= p; ++ j ) {\n\n\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\tright[ j ] = U[ span + j ] - u;\n\n\t\tlet saved = 0.0;\n\n\t\tfor ( let r = 0; r < j; ++ r ) {\n\n\t\t\tconst rv = right[ r + 1 ];\n\t\t\tconst lv = left[ j - r ];\n\t\t\tndu[ j ][ r ] = rv + lv;\n\n\t\t\tconst temp = ndu[ r ][ j - 1 ] / ndu[ j ][ r ];\n\t\t\tndu[ r ][ j ] = saved + rv * temp;\n\t\t\tsaved = lv * temp;\n\n\t\t}\n\n\t\tndu[ j ][ j ] = saved;\n\n\t}\n\n\tfor ( let j = 0; j <= p; ++ j ) {\n\n\t\tders[ 0 ][ j ] = ndu[ j ][ p ];\n\n\t}\n\n\tfor ( let r = 0; r <= p; ++ r ) {\n\n\t\tlet s1 = 0;\n\t\tlet s2 = 1;\n\n\t\tconst a = [];\n\t\tfor ( let i = 0; i <= p; ++ i ) {\n\n\t\t\ta[ i ] = zeroArr.slice( 0 );\n\n\t\t}\n\n\t\ta[ 0 ][ 0 ] = 1.0;\n\n\t\tfor ( let k = 1; k <= n; ++ k ) {\n\n\t\t\tlet d = 0.0;\n\t\t\tconst rk = r - k;\n\t\t\tconst pk = p - k;\n\n\t\t\tif ( r >= k ) {\n\n\t\t\t\ta[ s2 ][ 0 ] = a[ s1 ][ 0 ] / ndu[ pk + 1 ][ rk ];\n\t\t\t\td = a[ s2 ][ 0 ] * ndu[ rk ][ pk ];\n\n\t\t\t}\n\n\t\t\tconst j1 = ( rk >= - 1 ) ? 1 : - rk;\n\t\t\tconst j2 = ( r - 1 <= pk ) ? k - 1 : p - r;\n\n\t\t\tfor ( let j = j1; j <= j2; ++ j ) {\n\n\t\t\t\ta[ s2 ][ j ] = ( a[ s1 ][ j ] - a[ s1 ][ j - 1 ] ) / ndu[ pk + 1 ][ rk + j ];\n\t\t\t\td += a[ s2 ][ j ] * ndu[ rk + j ][ pk ];\n\n\t\t\t}\n\n\t\t\tif ( r <= pk ) {\n\n\t\t\t\ta[ s2 ][ k ] = - a[ s1 ][ k - 1 ] / ndu[ pk + 1 ][ r ];\n\t\t\t\td += a[ s2 ][ k ] * ndu[ r ][ pk ];\n\n\t\t\t}\n\n\t\t\tders[ k ][ r ] = d;\n\n\t\t\tconst j = s1;\n\t\t\ts1 = s2;\n\t\t\ts2 = j;\n\n\t\t}\n\n\t}\n\n\tlet r = p;\n\n\tfor ( let k = 1; k <= n; ++ k ) {\n\n\t\tfor ( let j = 0; j <= p; ++ j ) {\n\n\t\t\tders[ k ][ j ] *= r;\n\n\t\t}\n\n\t\tr *= p - k;\n\n\t}\n\n\treturn ders;\n\n}\n\n\n/*\n\tCalculate derivatives of a B-Spline. See The NURBS Book, page 93, algorithm A3.2.\n\n\tp  : degree\n\tU  : knot vector\n\tP  : control points\n\tu  : Parametric points\n\tnd : number of derivatives\n\n\treturns array[d+1] with derivatives\n\t*/\nfunction calcBSplineDerivatives( p, U, P, u, nd ) {\n\n\tconst du = nd < p ? nd : p;\n\tconst CK = [];\n\tconst span = findSpan( p, u, U );\n\tconst nders = calcBasisFunctionDerivatives( span, u, p, du, U );\n\tconst Pw = [];\n\n\tfor ( let i = 0; i < P.length; ++ i ) {\n\n\t\tconst point = P[ i ].clone();\n\t\tconst w = point.w;\n\n\t\tpoint.x *= w;\n\t\tpoint.y *= w;\n\t\tpoint.z *= w;\n\n\t\tPw[ i ] = point;\n\n\t}\n\n\tfor ( let k = 0; k <= du; ++ k ) {\n\n\t\tconst point = Pw[ span - p ].clone().multiplyScalar( nders[ k ][ 0 ] );\n\n\t\tfor ( let j = 1; j <= p; ++ j ) {\n\n\t\t\tpoint.add( Pw[ span - p + j ].clone().multiplyScalar( nders[ k ][ j ] ) );\n\n\t\t}\n\n\t\tCK[ k ] = point;\n\n\t}\n\n\tfor ( let k = du + 1; k <= nd + 1; ++ k ) {\n\n\t\tCK[ k ] = new Vector4( 0, 0, 0 );\n\n\t}\n\n\treturn CK;\n\n}\n\n\n/*\nCalculate \"K over I\"\n\nreturns k!/(i!(k-i)!)\n*/\nfunction calcKoverI( k, i ) {\n\n\tlet nom = 1;\n\n\tfor ( let j = 2; j <= k; ++ j ) {\n\n\t\tnom *= j;\n\n\t}\n\n\tlet denom = 1;\n\n\tfor ( let j = 2; j <= i; ++ j ) {\n\n\t\tdenom *= j;\n\n\t}\n\n\tfor ( let j = 2; j <= k - i; ++ j ) {\n\n\t\tdenom *= j;\n\n\t}\n\n\treturn nom / denom;\n\n}\n\n\n/*\nCalculate derivatives (0-nd) of rational curve. See The NURBS Book, page 127, algorithm A4.2.\n\nPders : result of function calcBSplineDerivatives\n\nreturns array with derivatives for rational curve.\n*/\nfunction calcRationalCurveDerivatives( Pders ) {\n\n\tconst nd = Pders.length;\n\tconst Aders = [];\n\tconst wders = [];\n\n\tfor ( let i = 0; i < nd; ++ i ) {\n\n\t\tconst point = Pders[ i ];\n\t\tAders[ i ] = new Vector3( point.x, point.y, point.z );\n\t\twders[ i ] = point.w;\n\n\t}\n\n\tconst CK = [];\n\n\tfor ( let k = 0; k < nd; ++ k ) {\n\n\t\tconst v = Aders[ k ].clone();\n\n\t\tfor ( let i = 1; i <= k; ++ i ) {\n\n\t\t\tv.sub( CK[ k - i ].clone().multiplyScalar( calcKoverI( k, i ) * wders[ i ] ) );\n\n\t\t}\n\n\t\tCK[ k ] = v.divideScalar( wders[ 0 ] );\n\n\t}\n\n\treturn CK;\n\n}\n\n\n/*\nCalculate NURBS curve derivatives. See The NURBS Book, page 127, algorithm A4.2.\n\np  : degree\nU  : knot vector\nP  : control points in homogeneous space\nu  : parametric points\nnd : number of derivatives\n\nreturns array with derivatives.\n*/\nfunction calcNURBSDerivatives( p, U, P, u, nd ) {\n\n\tconst Pders = calcBSplineDerivatives( p, U, P, u, nd );\n\treturn calcRationalCurveDerivatives( Pders );\n\n}\n\n\n/*\nCalculate rational B-Spline surface point. See The NURBS Book, page 134, algorithm A4.3.\n\np, q : degrees of B-Spline surface\nU, V : knot vectors\nP    : control points (x, y, z, w)\nu, v : parametric values\n\nreturns point for given (u, v)\n*/\nfunction calcSurfacePoint( p, q, U, V, P, u, v, target ) {\n\n\tconst uspan = findSpan( p, u, U );\n\tconst vspan = findSpan( q, v, V );\n\tconst Nu = calcBasisFunctions( uspan, u, p, U );\n\tconst Nv = calcBasisFunctions( vspan, v, q, V );\n\tconst temp = [];\n\n\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\ttemp[ l ] = new Vector4( 0, 0, 0, 0 );\n\t\tfor ( let k = 0; k <= p; ++ k ) {\n\n\t\t\tconst point = P[ uspan - p + k ][ vspan - q + l ].clone();\n\t\t\tconst w = point.w;\n\t\t\tpoint.x *= w;\n\t\t\tpoint.y *= w;\n\t\t\tpoint.z *= w;\n\t\t\ttemp[ l ].add( point.multiplyScalar( Nu[ k ] ) );\n\n\t\t}\n\n\t}\n\n\tconst Sw = new Vector4( 0, 0, 0, 0 );\n\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\tSw.add( temp[ l ].multiplyScalar( Nv[ l ] ) );\n\n\t}\n\n\tSw.divideScalar( Sw.w );\n\ttarget.set( Sw.x, Sw.y, Sw.z );\n\n}\n\n/*\nCalculate rational B-Spline volume point. See The NURBS Book, page 134, algorithm A4.3.\n\np, q, r   : degrees of B-Splinevolume\nU, V, W   : knot vectors\nP         : control points (x, y, z, w)\nu, v, w   : parametric values\n\nreturns point for given (u, v, w)\n*/\nfunction calcVolumePoint( p, q, r, U, V, W, P, u, v, w, target ) {\n\n\tconst uspan = findSpan( p, u, U );\n\tconst vspan = findSpan( q, v, V );\n\tconst wspan = findSpan( r, w, W );\n\tconst Nu = calcBasisFunctions( uspan, u, p, U );\n\tconst Nv = calcBasisFunctions( vspan, v, q, V );\n\tconst Nw = calcBasisFunctions( wspan, w, r, W );\n\tconst temp = [];\n\n\tfor ( let m = 0; m <= r; ++ m ) {\n\n\t\ttemp[ m ] = [];\n\n\t\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\t\ttemp[ m ][ l ] = new Vector4( 0, 0, 0, 0 );\n\t\t\tfor ( let k = 0; k <= p; ++ k ) {\n\n\t\t\t\tconst point = P[ uspan - p + k ][ vspan - q + l ][ wspan - r + m ].clone();\n\t\t\t\tconst w = point.w;\n\t\t\t\tpoint.x *= w;\n\t\t\t\tpoint.y *= w;\n\t\t\t\tpoint.z *= w;\n\t\t\t\ttemp[ m ][ l ].add( point.multiplyScalar( Nu[ k ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\tconst Sw = new Vector4( 0, 0, 0, 0 );\n\tfor ( let m = 0; m <= r; ++ m ) {\n\t\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\t\tSw.add( temp[ m ][ l ].multiplyScalar( Nw[ m ] ).multiplyScalar( Nv[ l ] ) );\n\n\t\t}\n\t}\n\n\tSw.divideScalar( Sw.w );\n\ttarget.set( Sw.x, Sw.y, Sw.z );\n\n}\n\n\nexport {\n\tfindSpan,\n\tcalcBasisFunctions,\n\tcalcBSplinePoint,\n\tcalcBasisFunctionDerivatives,\n\tcalcBSplineDerivatives,\n\tcalcKoverI,\n\tcalcRationalCurveDerivatives,\n\tcalcNURBSDerivatives,\n\tcalcSurfacePoint,\n\tcalcVolumePoint,\n};\n", "import {\n\tCurve,\n\tVector3,\n\tVector4\n} from 'three';\nimport * as NURBSUtils from '../curves/NURBSUtils.js';\n\n/**\n * NURBS curve object\n *\n * Derives from Curve, overriding getPoint and getTangent.\n *\n * Implementation is based on (x, y [, z=0 [, w=1]]) control points with w=weight.\n *\n **/\n\nclass NURBSCurve extends Curve {\n\n\tconstructor(\n\t\tdegree,\n\t\tknots /* array of reals */,\n\t\tcontrolPoints /* array of Vector(2|3|4) */,\n\t\tstartKnot /* index in knots */,\n\t\tendKnot /* index in knots */\n\t) {\n\n\t\tsuper();\n\n\t\tthis.degree = degree;\n\t\tthis.knots = knots;\n\t\tthis.controlPoints = [];\n\t\t// Used by periodic NURBS to remove hidden spans\n\t\tthis.startKnot = startKnot || 0;\n\t\tthis.endKnot = endKnot || ( this.knots.length - 1 );\n\n\t\tfor ( let i = 0; i < controlPoints.length; ++ i ) {\n\n\t\t\t// ensure Vector4 for control points\n\t\t\tconst point = controlPoints[ i ];\n\t\t\tthis.controlPoints[ i ] = new Vector4( point.x, point.y, point.z, point.w );\n\n\t\t}\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst u = this.knots[ this.startKnot ] + t * ( this.knots[ this.endKnot ] - this.knots[ this.startKnot ] ); // linear mapping t->u\n\n\t\t// following results in (wx, wy, wz, w) homogeneous point\n\t\tconst hpoint = NURBSUtils.calcBSplinePoint( this.degree, this.knots, this.controlPoints, u );\n\n\t\tif ( hpoint.w !== 1.0 ) {\n\n\t\t\t// project to 3D space: (wx, wy, wz, w) -> (x, y, z, 1)\n\t\t\thpoint.divideScalar( hpoint.w );\n\n\t\t}\n\n\t\treturn point.set( hpoint.x, hpoint.y, hpoint.z );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\tconst tangent = optionalTarget;\n\n\t\tconst u = this.knots[ 0 ] + t * ( this.knots[ this.knots.length - 1 ] - this.knots[ 0 ] );\n\t\tconst ders = NURBSUtils.calcNURBSDerivatives( this.degree, this.knots, this.controlPoints, u, 1 );\n\t\ttangent.copy( ders[ 1 ] ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n}\n\nexport { NURBSCurve };\n", "import {\n\tAmbientLight,\n\tAnimationClip,\n\tBone,\n\tBufferGeometry,\n\tClampToEdgeWrapping,\n\tColor,\n\tDirectionalLight,\n\tEquirectangularReflectionMapping,\n\tEuler,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLine,\n\tLineBasicMaterial,\n\tLoader,\n\tLoaderUtils,\n\tMathUtils,\n\tMatrix3,\n\tMatrix4,\n\tMesh,\n\tMeshLambertMaterial,\n\tMeshPhongMaterial,\n\tNumberKeyframeTrack,\n\tObject3D,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tPropertyBinding,\n\tQuaternion,\n\tQuaternionKeyframeTrack,\n\tRepeatWrapping,\n\tSkeleton,\n\tSkinnedMesh,\n\tSpotLight,\n\tTexture,\n\tTextureLoader,\n\tUint16BufferAttribute,\n\tVector2,\n\tVector3,\n\tVector4,\n\tVectorKeyframeTrack,\n\tSRGBColorSpace,\n\tShapeUtils\n} from 'three';\nimport * as fflate from '../libs/fflate.module.js';\nimport { NURBSCurve } from '../curves/NURBSCurve.js';\n\n/**\n * Loader loads FBX file and generates Group representing FBX scene.\n * Requires FBX file to be >= 7.0 and in ASCII or >= 6400 in Binary format\n * Versions lower than this may load but will probably have errors\n *\n * Needs Support:\n *  Morph normals / blend shape normals\n *\n * FBX format references:\n * \thttps://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_index_html (C++ SDK reference)\n *\n * Binary format specification:\n *\thttps://code.blender.org/2013/08/fbx-binary-file-format-specification/\n */\n\n\nlet fbxTree;\nlet connections;\nlet sceneGraph;\n\nclass FBXLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( scope.path === '' ) ? LoaderUtils.extractUrlBase( url ) : scope.path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( buffer, path ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( FBXBuffer, path ) {\n\n\t\tif ( isFbxFormatBinary( FBXBuffer ) ) {\n\n\t\t\tfbxTree = new BinaryParser().parse( FBXBuffer );\n\n\t\t} else {\n\n\t\t\tconst FBXText = convertArrayBufferToString( FBXBuffer );\n\n\t\t\tif ( ! isFbxFormatASCII( FBXText ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown format.' );\n\n\t\t\t}\n\n\t\t\tif ( getFbxVersion( FBXText ) < 7000 ) {\n\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + getFbxVersion( FBXText ) );\n\n\t\t\t}\n\n\t\t\tfbxTree = new TextParser().parse( FBXText );\n\n\t\t}\n\n\t\t// console.log( fbxTree );\n\n\t\tconst textureLoader = new TextureLoader( this.manager ).setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n\t\treturn new FBXTreeParser( textureLoader, this.manager ).parse( fbxTree );\n\n\t}\n\n}\n\n// Parse the FBXTree object returned by the BinaryParser or TextParser and return a Group\nclass FBXTreeParser {\n\n\tconstructor( textureLoader, manager ) {\n\n\t\tthis.textureLoader = textureLoader;\n\t\tthis.manager = manager;\n\n\t}\n\n\tparse() {\n\n\t\tconnections = this.parseConnections();\n\n\t\tconst images = this.parseImages();\n\t\tconst textures = this.parseTextures( images );\n\t\tconst materials = this.parseMaterials( textures );\n\t\tconst deformers = this.parseDeformers();\n\t\tconst geometryMap = new GeometryParser().parse( deformers );\n\n\t\tthis.parseScene( deformers, geometryMap, materials );\n\n\t\treturn sceneGraph;\n\n\t}\n\n\t// Parses FBXTree.Connections which holds parent-child connections between objects (e.g. material -> texture, model->geometry )\n\t// and details the connection type\n\tparseConnections() {\n\n\t\tconst connectionMap = new Map();\n\n\t\tif ( 'Connections' in fbxTree ) {\n\n\t\t\tconst rawConnections = fbxTree.Connections.connections;\n\n\t\t\trawConnections.forEach( function ( rawConnection ) {\n\n\t\t\t\tconst fromID = rawConnection[ 0 ];\n\t\t\t\tconst toID = rawConnection[ 1 ];\n\t\t\t\tconst relationship = rawConnection[ 2 ];\n\n\t\t\t\tif ( ! connectionMap.has( fromID ) ) {\n\n\t\t\t\t\tconnectionMap.set( fromID, {\n\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\tchildren: []\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tconst parentRelationship = { ID: toID, relationship: relationship };\n\t\t\t\tconnectionMap.get( fromID ).parents.push( parentRelationship );\n\n\t\t\t\tif ( ! connectionMap.has( toID ) ) {\n\n\t\t\t\t\tconnectionMap.set( toID, {\n\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\tchildren: []\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tconst childRelationship = { ID: fromID, relationship: relationship };\n\t\t\t\tconnectionMap.get( toID ).children.push( childRelationship );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn connectionMap;\n\n\t}\n\n\t// Parse FBXTree.Objects.Video for embedded image data\n\t// These images are connected to textures in FBXTree.Objects.Textures\n\t// via FBXTree.Connections.\n\tparseImages() {\n\n\t\tconst images = {};\n\t\tconst blobs = {};\n\n\t\tif ( 'Video' in fbxTree.Objects ) {\n\n\t\t\tconst videoNodes = fbxTree.Objects.Video;\n\n\t\t\tfor ( const nodeID in videoNodes ) {\n\n\t\t\t\tconst videoNode = videoNodes[ nodeID ];\n\n\t\t\t\tconst id = parseInt( nodeID );\n\n\t\t\t\timages[ id ] = videoNode.RelativeFilename || videoNode.Filename;\n\n\t\t\t\t// raw image data is in videoNode.Content\n\t\t\t\tif ( 'Content' in videoNode ) {\n\n\t\t\t\t\tconst arrayBufferContent = ( videoNode.Content instanceof ArrayBuffer ) && ( videoNode.Content.byteLength > 0 );\n\t\t\t\t\tconst base64Content = ( typeof videoNode.Content === 'string' ) && ( videoNode.Content !== '' );\n\n\t\t\t\t\tif ( arrayBufferContent || base64Content ) {\n\n\t\t\t\t\t\tconst image = this.parseImage( videoNodes[ nodeID ] );\n\n\t\t\t\t\t\tblobs[ videoNode.RelativeFilename || videoNode.Filename ] = image;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( const id in images ) {\n\n\t\t\tconst filename = images[ id ];\n\n\t\t\tif ( blobs[ filename ] !== undefined ) images[ id ] = blobs[ filename ];\n\t\t\telse images[ id ] = images[ id ].split( '\\\\' ).pop();\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\t// Parse embedded image data in FBXTree.Video.Content\n\tparseImage( videoNode ) {\n\n\t\tconst content = videoNode.Content;\n\t\tconst fileName = videoNode.RelativeFilename || videoNode.Filename;\n\t\tconst extension = fileName.slice( fileName.lastIndexOf( '.' ) + 1 ).toLowerCase();\n\n\t\tlet type;\n\n\t\tswitch ( extension ) {\n\n\t\t\tcase 'bmp':\n\n\t\t\t\ttype = 'image/bmp';\n\t\t\t\tbreak;\n\n\t\t\tcase 'jpg':\n\t\t\tcase 'jpeg':\n\n\t\t\t\ttype = 'image/jpeg';\n\t\t\t\tbreak;\n\n\t\t\tcase 'png':\n\n\t\t\t\ttype = 'image/png';\n\t\t\t\tbreak;\n\n\t\t\tcase 'tif':\n\n\t\t\t\ttype = 'image/tiff';\n\t\t\t\tbreak;\n\n\t\t\tcase 'tga':\n\n\t\t\t\tif ( this.manager.getHandler( '.tga' ) === null ) {\n\n\t\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, skipping ', fileName );\n\n\t\t\t\t}\n\n\t\t\t\ttype = 'image/tga';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'FBXLoader: Image type \"' + extension + '\" is not supported.' );\n\t\t\t\treturn;\n\n\t\t}\n\n\t\tif ( typeof content === 'string' ) { // ASCII format\n\n\t\t\treturn 'data:' + type + ';base64,' + content;\n\n\t\t} else { // Binary Format\n\n\t\t\tconst array = new Uint8Array( content );\n\t\t\treturn window.URL.createObjectURL( new Blob( [ array ], { type: type } ) );\n\n\t\t}\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Texture\n\t// These contain details such as UV scaling, cropping, rotation etc and are connected\n\t// to images in FBXTree.Objects.Video\n\tparseTextures( images ) {\n\n\t\tconst textureMap = new Map();\n\n\t\tif ( 'Texture' in fbxTree.Objects ) {\n\n\t\t\tconst textureNodes = fbxTree.Objects.Texture;\n\t\t\tfor ( const nodeID in textureNodes ) {\n\n\t\t\t\tconst texture = this.parseTexture( textureNodes[ nodeID ], images );\n\t\t\t\ttextureMap.set( parseInt( nodeID ), texture );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textureMap;\n\n\t}\n\n\t// Parse individual node in FBXTree.Objects.Texture\n\tparseTexture( textureNode, images ) {\n\n\t\tconst texture = this.loadTexture( textureNode, images );\n\n\t\ttexture.ID = textureNode.id;\n\n\t\ttexture.name = textureNode.attrName;\n\n\t\tconst wrapModeU = textureNode.WrapModeU;\n\t\tconst wrapModeV = textureNode.WrapModeV;\n\n\t\tconst valueU = wrapModeU !== undefined ? wrapModeU.value : 0;\n\t\tconst valueV = wrapModeV !== undefined ? wrapModeV.value : 0;\n\n\t\t// http://download.autodesk.com/us/fbx/SDKdocs/FBX_SDK_Help/files/fbxsdkref/class_k_fbx_texture.html#889640e63e2e681259ea81061b85143a\n\t\t// 0: repeat(default), 1: clamp\n\n\t\ttexture.wrapS = valueU === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\t\ttexture.wrapT = valueV === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\n\t\tif ( 'Scaling' in textureNode ) {\n\n\t\t\tconst values = textureNode.Scaling.value;\n\n\t\t\ttexture.repeat.x = values[ 0 ];\n\t\t\ttexture.repeat.y = values[ 1 ];\n\n\t\t}\n\n\t\tif ( 'Translation' in textureNode ) {\n\n\t\t\tconst values = textureNode.Translation.value;\n\n\t\t\ttexture.offset.x = values[ 0 ];\n\t\t\ttexture.offset.y = values[ 1 ];\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\t// load a texture specified as a blob or data URI, or via an external URL using TextureLoader\n\tloadTexture( textureNode, images ) {\n\n\t\tlet fileName;\n\n\t\tconst currentPath = this.textureLoader.path;\n\n\t\tconst children = connections.get( textureNode.id ).children;\n\n\t\tif ( children !== undefined && children.length > 0 && images[ children[ 0 ].ID ] !== undefined ) {\n\n\t\t\tfileName = images[ children[ 0 ].ID ];\n\n\t\t\tif ( fileName.indexOf( 'blob:' ) === 0 || fileName.indexOf( 'data:' ) === 0 ) {\n\n\t\t\t\tthis.textureLoader.setPath( undefined );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet texture;\n\n\t\tconst extension = textureNode.FileName.slice( - 3 ).toLowerCase();\n\n\t\tif ( extension === 'tga' ) {\n\n\t\t\tconst loader = this.manager.getHandler( '.tga' );\n\n\t\t\tif ( loader === null ) {\n\n\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\t\ttexture = new Texture();\n\n\t\t\t} else {\n\n\t\t\t\tloader.setPath( this.textureLoader.path );\n\t\t\t\ttexture = loader.load( fileName );\n\n\t\t\t}\n\n\t\t} else if ( extension === 'dds' ) {\n\n\t\t\tconst loader = this.manager.getHandler( '.dds' );\n\n\t\t\tif ( loader === null ) {\n\n\t\t\t\tconsole.warn( 'FBXLoader: DDS loader not found, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\t\ttexture = new Texture();\n\n\t\t\t} else {\n\n\t\t\t\tloader.setPath( this.textureLoader.path );\n\t\t\t\ttexture = loader.load( fileName );\n\n\t\t\t}\n\n\t\t} else if ( extension === 'psd' ) {\n\n\t\t\tconsole.warn( 'FBXLoader: PSD textures are not supported, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\ttexture = new Texture();\n\n\t\t} else {\n\n\t\t\ttexture = this.textureLoader.load( fileName );\n\n\t\t}\n\n\t\tthis.textureLoader.setPath( currentPath );\n\n\t\treturn texture;\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Material\n\tparseMaterials( textureMap ) {\n\n\t\tconst materialMap = new Map();\n\n\t\tif ( 'Material' in fbxTree.Objects ) {\n\n\t\t\tconst materialNodes = fbxTree.Objects.Material;\n\n\t\t\tfor ( const nodeID in materialNodes ) {\n\n\t\t\t\tconst material = this.parseMaterial( materialNodes[ nodeID ], textureMap );\n\n\t\t\t\tif ( material !== null ) materialMap.set( parseInt( nodeID ), material );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materialMap;\n\n\t}\n\n\t// Parse single node in FBXTree.Objects.Material\n\t// Materials are connected to texture maps in FBXTree.Objects.Textures\n\t// FBX format currently only supports Lambert and Phong shading models\n\tparseMaterial( materialNode, textureMap ) {\n\n\t\tconst ID = materialNode.id;\n\t\tconst name = materialNode.attrName;\n\t\tlet type = materialNode.ShadingModel;\n\n\t\t// Case where FBX wraps shading model in property object.\n\t\tif ( typeof type === 'object' ) {\n\n\t\t\ttype = type.value;\n\n\t\t}\n\n\t\t// Ignore unused materials which don't have any connections.\n\t\tif ( ! connections.has( ID ) ) return null;\n\n\t\tconst parameters = this.parseParameters( materialNode, textureMap, ID );\n\n\t\tlet material;\n\n\t\tswitch ( type.toLowerCase() ) {\n\n\t\t\tcase 'phong':\n\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\tbreak;\n\t\t\tcase 'lambert':\n\t\t\t\tmaterial = new MeshLambertMaterial();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown material type \"%s\". Defaulting to MeshPhongMaterial.', type );\n\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tmaterial.setValues( parameters );\n\t\tmaterial.name = name;\n\n\t\treturn material;\n\n\t}\n\n\t// Parse FBX material and return parameters suitable for a three.js material\n\t// Also parse the texture map and return any textures associated with the material\n\tparseParameters( materialNode, textureMap, ID ) {\n\n\t\tconst parameters = {};\n\n\t\tif ( materialNode.BumpFactor ) {\n\n\t\t\tparameters.bumpScale = materialNode.BumpFactor.value;\n\n\t\t}\n\n\t\tif ( materialNode.Diffuse ) {\n\n\t\t\tparameters.color = new Color().fromArray( materialNode.Diffuse.value ).convertSRGBToLinear();\n\n\t\t} else if ( materialNode.DiffuseColor && ( materialNode.DiffuseColor.type === 'Color' || materialNode.DiffuseColor.type === 'ColorRGB' ) ) {\n\n\t\t\t// The blender exporter exports diffuse here instead of in materialNode.Diffuse\n\t\t\tparameters.color = new Color().fromArray( materialNode.DiffuseColor.value ).convertSRGBToLinear();\n\n\t\t}\n\n\t\tif ( materialNode.DisplacementFactor ) {\n\n\t\t\tparameters.displacementScale = materialNode.DisplacementFactor.value;\n\n\t\t}\n\n\t\tif ( materialNode.Emissive ) {\n\n\t\t\tparameters.emissive = new Color().fromArray( materialNode.Emissive.value ).convertSRGBToLinear();\n\n\t\t} else if ( materialNode.EmissiveColor && ( materialNode.EmissiveColor.type === 'Color' || materialNode.EmissiveColor.type === 'ColorRGB' ) ) {\n\n\t\t\t// The blender exporter exports emissive color here instead of in materialNode.Emissive\n\t\t\tparameters.emissive = new Color().fromArray( materialNode.EmissiveColor.value ).convertSRGBToLinear();\n\n\t\t}\n\n\t\tif ( materialNode.EmissiveFactor ) {\n\n\t\t\tparameters.emissiveIntensity = parseFloat( materialNode.EmissiveFactor.value );\n\n\t\t}\n\n\t\tif ( materialNode.Opacity ) {\n\n\t\t\tparameters.opacity = parseFloat( materialNode.Opacity.value );\n\n\t\t}\n\n\t\tif ( parameters.opacity < 1.0 ) {\n\n\t\t\tparameters.transparent = true;\n\n\t\t}\n\n\t\tif ( materialNode.ReflectionFactor ) {\n\n\t\t\tparameters.reflectivity = materialNode.ReflectionFactor.value;\n\n\t\t}\n\n\t\tif ( materialNode.Shininess ) {\n\n\t\t\tparameters.shininess = materialNode.Shininess.value;\n\n\t\t}\n\n\t\tif ( materialNode.Specular ) {\n\n\t\t\tparameters.specular = new Color().fromArray( materialNode.Specular.value ).convertSRGBToLinear();\n\n\t\t} else if ( materialNode.SpecularColor && materialNode.SpecularColor.type === 'Color' ) {\n\n\t\t\t// The blender exporter exports specular color here instead of in materialNode.Specular\n\t\t\tparameters.specular = new Color().fromArray( materialNode.SpecularColor.value ).convertSRGBToLinear();\n\n\t\t}\n\n\t\tconst scope = this;\n\t\tconnections.get( ID ).children.forEach( function ( child ) {\n\n\t\t\tconst type = child.relationship;\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'Bump':\n\t\t\t\t\tparameters.bumpMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Maya|TEX_ao_map':\n\t\t\t\t\tparameters.aoMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DiffuseColor':\n\t\t\t\tcase 'Maya|TEX_color_map':\n\t\t\t\t\tparameters.map = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.map !== undefined ) {\n\n\t\t\t\t\t\tparameters.map.colorSpace = SRGBColorSpace;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DisplacementColor':\n\t\t\t\t\tparameters.displacementMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EmissiveColor':\n\t\t\t\t\tparameters.emissiveMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.emissiveMap !== undefined ) {\n\n\t\t\t\t\t\tparameters.emissiveMap.colorSpace = SRGBColorSpace;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'NormalMap':\n\t\t\t\tcase 'Maya|TEX_normal_map':\n\t\t\t\t\tparameters.normalMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ReflectionColor':\n\t\t\t\t\tparameters.envMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.envMap !== undefined ) {\n\n\t\t\t\t\t\tparameters.envMap.mapping = EquirectangularReflectionMapping;\n\t\t\t\t\t\tparameters.envMap.colorSpace = SRGBColorSpace;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpecularColor':\n\t\t\t\t\tparameters.specularMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.specularMap !== undefined ) {\n\n\t\t\t\t\t\tparameters.specularMap.colorSpace = SRGBColorSpace;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'TransparentColor':\n\t\t\t\tcase 'TransparencyFactor':\n\t\t\t\t\tparameters.alphaMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tparameters.transparent = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientColor':\n\t\t\t\tcase 'ShininessExponent': // AKA glossiness map\n\t\t\t\tcase 'SpecularFactor': // AKA specularLevel\n\t\t\t\tcase 'VectorDisplacementColor': // NOTE: Seems to be a copy of DisplacementColor\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: %s map is not supported in three.js, skipping texture.', type );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn parameters;\n\n\t}\n\n\t// get a texture from the textureMap for use by a material.\n\tgetTexture( textureMap, id ) {\n\n\t\t// if the texture is a layered texture, just use the first layer and issue a warning\n\t\tif ( 'LayeredTexture' in fbxTree.Objects && id in fbxTree.Objects.LayeredTexture ) {\n\n\t\t\tconsole.warn( 'THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer.' );\n\t\t\tid = connections.get( id ).children[ 0 ].ID;\n\n\t\t}\n\n\t\treturn textureMap.get( id );\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Deformer\n\t// Deformer node can contain skinning or Vertex Cache animation data, however only skinning is supported here\n\t// Generates map of Skeleton-like objects for use later when generating and binding skeletons.\n\tparseDeformers() {\n\n\t\tconst skeletons = {};\n\t\tconst morphTargets = {};\n\n\t\tif ( 'Deformer' in fbxTree.Objects ) {\n\n\t\t\tconst DeformerNodes = fbxTree.Objects.Deformer;\n\n\t\t\tfor ( const nodeID in DeformerNodes ) {\n\n\t\t\t\tconst deformerNode = DeformerNodes[ nodeID ];\n\n\t\t\t\tconst relationships = connections.get( parseInt( nodeID ) );\n\n\t\t\t\tif ( deformerNode.attrType === 'Skin' ) {\n\n\t\t\t\t\tconst skeleton = this.parseSkeleton( relationships, DeformerNodes );\n\t\t\t\t\tskeleton.ID = nodeID;\n\n\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: skeleton attached to more than one geometry is not supported.' );\n\t\t\t\t\tskeleton.geometryID = relationships.parents[ 0 ].ID;\n\n\t\t\t\t\tskeletons[ nodeID ] = skeleton;\n\n\t\t\t\t} else if ( deformerNode.attrType === 'BlendShape' ) {\n\n\t\t\t\t\tconst morphTarget = {\n\t\t\t\t\t\tid: nodeID,\n\t\t\t\t\t};\n\n\t\t\t\t\tmorphTarget.rawTargets = this.parseMorphTargets( relationships, DeformerNodes );\n\t\t\t\t\tmorphTarget.id = nodeID;\n\n\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: morph target attached to more than one geometry is not supported.' );\n\n\t\t\t\t\tmorphTargets[ nodeID ] = morphTarget;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tskeletons: skeletons,\n\t\t\tmorphTargets: morphTargets,\n\n\t\t};\n\n\t}\n\n\t// Parse single nodes in FBXTree.Objects.Deformer\n\t// The top level skeleton node has type 'Skin' and sub nodes have type 'Cluster'\n\t// Each skin node represents a skeleton and each cluster node represents a bone\n\tparseSkeleton( relationships, deformerNodes ) {\n\n\t\tconst rawBones = [];\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tconst boneNode = deformerNodes[ child.ID ];\n\n\t\t\tif ( boneNode.attrType !== 'Cluster' ) return;\n\n\t\t\tconst rawBone = {\n\n\t\t\t\tID: child.ID,\n\t\t\t\tindices: [],\n\t\t\t\tweights: [],\n\t\t\t\ttransformLink: new Matrix4().fromArray( boneNode.TransformLink.a ),\n\t\t\t\t// transform: new Matrix4().fromArray( boneNode.Transform.a ),\n\t\t\t\t// linkMode: boneNode.Mode,\n\n\t\t\t};\n\n\t\t\tif ( 'Indexes' in boneNode ) {\n\n\t\t\t\trawBone.indices = boneNode.Indexes.a;\n\t\t\t\trawBone.weights = boneNode.Weights.a;\n\n\t\t\t}\n\n\t\t\trawBones.push( rawBone );\n\n\t\t} );\n\n\t\treturn {\n\n\t\t\trawBones: rawBones,\n\t\t\tbones: []\n\n\t\t};\n\n\t}\n\n\t// The top level morph deformer node has type \"BlendShape\" and sub nodes have type \"BlendShapeChannel\"\n\tparseMorphTargets( relationships, deformerNodes ) {\n\n\t\tconst rawMorphTargets = [];\n\n\t\tfor ( let i = 0; i < relationships.children.length; i ++ ) {\n\n\t\t\tconst child = relationships.children[ i ];\n\n\t\t\tconst morphTargetNode = deformerNodes[ child.ID ];\n\n\t\t\tconst rawMorphTarget = {\n\n\t\t\t\tname: morphTargetNode.attrName,\n\t\t\t\tinitialWeight: morphTargetNode.DeformPercent,\n\t\t\t\tid: morphTargetNode.id,\n\t\t\t\tfullWeights: morphTargetNode.FullWeights.a\n\n\t\t\t};\n\n\t\t\tif ( morphTargetNode.attrType !== 'BlendShapeChannel' ) return;\n\n\t\t\trawMorphTarget.geoID = connections.get( parseInt( child.ID ) ).children.filter( function ( child ) {\n\n\t\t\t\treturn child.relationship === undefined;\n\n\t\t\t} )[ 0 ].ID;\n\n\t\t\trawMorphTargets.push( rawMorphTarget );\n\n\t\t}\n\n\t\treturn rawMorphTargets;\n\n\t}\n\n\t// create the main Group() to be returned by the loader\n\tparseScene( deformers, geometryMap, materialMap ) {\n\n\t\tsceneGraph = new Group();\n\n\t\tconst modelMap = this.parseModels( deformers.skeletons, geometryMap, materialMap );\n\n\t\tconst modelNodes = fbxTree.Objects.Model;\n\n\t\tconst scope = this;\n\t\tmodelMap.forEach( function ( model ) {\n\n\t\t\tconst modelNode = modelNodes[ model.ID ];\n\t\t\tscope.setLookAtProperties( model, modelNode );\n\n\t\t\tconst parentConnections = connections.get( model.ID ).parents;\n\n\t\t\tparentConnections.forEach( function ( connection ) {\n\n\t\t\t\tconst parent = modelMap.get( connection.ID );\n\t\t\t\tif ( parent !== undefined ) parent.add( model );\n\n\t\t\t} );\n\n\t\t\tif ( model.parent === null ) {\n\n\t\t\t\tsceneGraph.add( model );\n\n\t\t\t}\n\n\n\t\t} );\n\n\t\tthis.bindSkeleton( deformers.skeletons, geometryMap, modelMap );\n\n\t\tthis.addGlobalSceneSettings();\n\n\t\tsceneGraph.traverse( function ( node ) {\n\n\t\t\tif ( node.userData.transformData ) {\n\n\t\t\t\tif ( node.parent ) {\n\n\t\t\t\t\tnode.userData.transformData.parentMatrix = node.parent.matrix;\n\t\t\t\t\tnode.userData.transformData.parentMatrixWorld = node.parent.matrixWorld;\n\n\t\t\t\t}\n\n\t\t\t\tconst transform = generateTransform( node.userData.transformData );\n\n\t\t\t\tnode.applyMatrix4( transform );\n\t\t\t\tnode.updateWorldMatrix();\n\n\t\t\t}\n\n\t\t} );\n\n\t\tconst animations = new AnimationParser().parse();\n\n\t\t// if all the models where already combined in a single group, just return that\n\t\tif ( sceneGraph.children.length === 1 && sceneGraph.children[ 0 ].isGroup ) {\n\n\t\t\tsceneGraph.children[ 0 ].animations = animations;\n\t\t\tsceneGraph = sceneGraph.children[ 0 ];\n\n\t\t}\n\n\t\tsceneGraph.animations = animations;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.Model\n\tparseModels( skeletons, geometryMap, materialMap ) {\n\n\t\tconst modelMap = new Map();\n\t\tconst modelNodes = fbxTree.Objects.Model;\n\n\t\tfor ( const nodeID in modelNodes ) {\n\n\t\t\tconst id = parseInt( nodeID );\n\t\t\tconst node = modelNodes[ nodeID ];\n\t\t\tconst relationships = connections.get( id );\n\n\t\t\tlet model = this.buildSkeleton( relationships, skeletons, id, node.attrName );\n\n\t\t\tif ( ! model ) {\n\n\t\t\t\tswitch ( node.attrType ) {\n\n\t\t\t\t\tcase 'Camera':\n\t\t\t\t\t\tmodel = this.createCamera( relationships );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Light':\n\t\t\t\t\t\tmodel = this.createLight( relationships );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Mesh':\n\t\t\t\t\t\tmodel = this.createMesh( relationships, geometryMap, materialMap );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\t\tmodel = this.createCurve( relationships, geometryMap );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'LimbNode':\n\t\t\t\t\tcase 'Root':\n\t\t\t\t\t\tmodel = new Bone();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Null':\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmodel = new Group();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tmodel.name = node.attrName ? PropertyBinding.sanitizeNodeName( node.attrName ) : '';\n\t\t\t\tmodel.userData.originalName = node.attrName;\n\n\t\t\t\tmodel.ID = id;\n\n\t\t\t}\n\n\t\t\tthis.getTransformData( model, node );\n\t\t\tmodelMap.set( id, model );\n\n\t\t}\n\n\t\treturn modelMap;\n\n\t}\n\n\tbuildSkeleton( relationships, skeletons, id, name ) {\n\n\t\tlet bone = null;\n\n\t\trelationships.parents.forEach( function ( parent ) {\n\n\t\t\tfor ( const ID in skeletons ) {\n\n\t\t\t\tconst skeleton = skeletons[ ID ];\n\n\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t\tif ( rawBone.ID === parent.ID ) {\n\n\t\t\t\t\t\tconst subBone = bone;\n\t\t\t\t\t\tbone = new Bone();\n\n\t\t\t\t\t\tbone.matrixWorld.copy( rawBone.transformLink );\n\n\t\t\t\t\t\t// set name and id here - otherwise in cases where \"subBone\" is created it will not have a name / id\n\n\t\t\t\t\t\tbone.name = name ? PropertyBinding.sanitizeNodeName( name ) : '';\n\t\t\t\t\t\tbone.userData.originalName = name;\n\t\t\t\t\t\tbone.ID = id;\n\n\t\t\t\t\t\tskeleton.bones[ i ] = bone;\n\n\t\t\t\t\t\t// In cases where a bone is shared between multiple meshes\n\t\t\t\t\t\t// duplicate the bone here and and it as a child of the first bone\n\t\t\t\t\t\tif ( subBone !== null ) {\n\n\t\t\t\t\t\t\tbone.add( subBone );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn bone;\n\n\t}\n\n\t// create a PerspectiveCamera or OrthographicCamera\n\tcreateCamera( relationships ) {\n\n\t\tlet model;\n\t\tlet cameraAttribute;\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tconst attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\tcameraAttribute = attr;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( cameraAttribute === undefined ) {\n\n\t\t\tmodel = new Object3D();\n\n\t\t} else {\n\n\t\t\tlet type = 0;\n\t\t\tif ( cameraAttribute.CameraProjectionType !== undefined && cameraAttribute.CameraProjectionType.value === 1 ) {\n\n\t\t\t\ttype = 1;\n\n\t\t\t}\n\n\t\t\tlet nearClippingPlane = 1;\n\t\t\tif ( cameraAttribute.NearPlane !== undefined ) {\n\n\t\t\t\tnearClippingPlane = cameraAttribute.NearPlane.value / 1000;\n\n\t\t\t}\n\n\t\t\tlet farClippingPlane = 1000;\n\t\t\tif ( cameraAttribute.FarPlane !== undefined ) {\n\n\t\t\t\tfarClippingPlane = cameraAttribute.FarPlane.value / 1000;\n\n\t\t\t}\n\n\n\t\t\tlet width = window.innerWidth;\n\t\t\tlet height = window.innerHeight;\n\n\t\t\tif ( cameraAttribute.AspectWidth !== undefined && cameraAttribute.AspectHeight !== undefined ) {\n\n\t\t\t\twidth = cameraAttribute.AspectWidth.value;\n\t\t\t\theight = cameraAttribute.AspectHeight.value;\n\n\t\t\t}\n\n\t\t\tconst aspect = width / height;\n\n\t\t\tlet fov = 45;\n\t\t\tif ( cameraAttribute.FieldOfView !== undefined ) {\n\n\t\t\t\tfov = cameraAttribute.FieldOfView.value;\n\n\t\t\t}\n\n\t\t\tconst focalLength = cameraAttribute.FocalLength ? cameraAttribute.FocalLength.value : null;\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 0: // Perspective\n\t\t\t\t\tmodel = new PerspectiveCamera( fov, aspect, nearClippingPlane, farClippingPlane );\n\t\t\t\t\tif ( focalLength !== null ) model.setFocalLength( focalLength );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1: // Orthographic\n\t\t\t\t\tmodel = new OrthographicCamera( - width / 2, width / 2, height / 2, - height / 2, nearClippingPlane, farClippingPlane );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown camera type ' + type + '.' );\n\t\t\t\t\tmodel = new Object3D();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn model;\n\n\t}\n\n\t// Create a DirectionalLight, PointLight or SpotLight\n\tcreateLight( relationships ) {\n\n\t\tlet model;\n\t\tlet lightAttribute;\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tconst attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\tlightAttribute = attr;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( lightAttribute === undefined ) {\n\n\t\t\tmodel = new Object3D();\n\n\t\t} else {\n\n\t\t\tlet type;\n\n\t\t\t// LightType can be undefined for Point lights\n\t\t\tif ( lightAttribute.LightType === undefined ) {\n\n\t\t\t\ttype = 0;\n\n\t\t\t} else {\n\n\t\t\t\ttype = lightAttribute.LightType.value;\n\n\t\t\t}\n\n\t\t\tlet color = 0xffffff;\n\n\t\t\tif ( lightAttribute.Color !== undefined ) {\n\n\t\t\t\tcolor = new Color().fromArray( lightAttribute.Color.value ).convertSRGBToLinear();\n\n\t\t\t}\n\n\t\t\tlet intensity = ( lightAttribute.Intensity === undefined ) ? 1 : lightAttribute.Intensity.value / 100;\n\n\t\t\t// light disabled\n\t\t\tif ( lightAttribute.CastLightOnObject !== undefined && lightAttribute.CastLightOnObject.value === 0 ) {\n\n\t\t\t\tintensity = 0;\n\n\t\t\t}\n\n\t\t\tlet distance = 0;\n\t\t\tif ( lightAttribute.FarAttenuationEnd !== undefined ) {\n\n\t\t\t\tif ( lightAttribute.EnableFarAttenuation !== undefined && lightAttribute.EnableFarAttenuation.value === 0 ) {\n\n\t\t\t\t\tdistance = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdistance = lightAttribute.FarAttenuationEnd.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// TODO: could this be calculated linearly from FarAttenuationStart to FarAttenuationEnd?\n\t\t\tconst decay = 1;\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 0: // Point\n\t\t\t\t\tmodel = new PointLight( color, intensity, distance, decay );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1: // Directional\n\t\t\t\t\tmodel = new DirectionalLight( color, intensity );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // Spot\n\t\t\t\t\tlet angle = Math.PI / 3;\n\n\t\t\t\t\tif ( lightAttribute.InnerAngle !== undefined ) {\n\n\t\t\t\t\t\tangle = MathUtils.degToRad( lightAttribute.InnerAngle.value );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet penumbra = 0;\n\t\t\t\t\tif ( lightAttribute.OuterAngle !== undefined ) {\n\n\t\t\t\t\t\t// TODO: this is not correct - FBX calculates outer and inner angle in degrees\n\t\t\t\t\t\t// with OuterAngle > InnerAngle && OuterAngle <= Math.PI\n\t\t\t\t\t\t// while three.js uses a penumbra between (0, 1) to attenuate the inner angle\n\t\t\t\t\t\tpenumbra = MathUtils.degToRad( lightAttribute.OuterAngle.value );\n\t\t\t\t\t\tpenumbra = Math.max( penumbra, 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmodel = new SpotLight( color, intensity, distance, angle, penumbra, decay );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown light type ' + lightAttribute.LightType.value + ', defaulting to a PointLight.' );\n\t\t\t\t\tmodel = new PointLight( color, intensity );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( lightAttribute.CastShadows !== undefined && lightAttribute.CastShadows.value === 1 ) {\n\n\t\t\t\tmodel.castShadow = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn model;\n\n\t}\n\n\tcreateMesh( relationships, geometryMap, materialMap ) {\n\n\t\tlet model;\n\t\tlet geometry = null;\n\t\tlet material = null;\n\t\tconst materials = [];\n\n\t\t// get geometry and materials(s) from connections\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tif ( geometryMap.has( child.ID ) ) {\n\n\t\t\t\tgeometry = geometryMap.get( child.ID );\n\n\t\t\t}\n\n\t\t\tif ( materialMap.has( child.ID ) ) {\n\n\t\t\t\tmaterials.push( materialMap.get( child.ID ) );\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( materials.length > 1 ) {\n\n\t\t\tmaterial = materials;\n\n\t\t} else if ( materials.length > 0 ) {\n\n\t\t\tmaterial = materials[ 0 ];\n\n\t\t} else {\n\n\t\t\tmaterial = new MeshPhongMaterial( {\n\t\t\t\tname: Loader.DEFAULT_MATERIAL_NAME,\n\t\t\t\tcolor: 0xcccccc\n\t\t\t} );\n\t\t\tmaterials.push( material );\n\n\t\t}\n\n\t\tif ( 'color' in geometry.attributes ) {\n\n\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( geometry.FBX_Deformer ) {\n\n\t\t\tmodel = new SkinnedMesh( geometry, material );\n\t\t\tmodel.normalizeSkinWeights();\n\n\t\t} else {\n\n\t\t\tmodel = new Mesh( geometry, material );\n\n\t\t}\n\n\t\treturn model;\n\n\t}\n\n\tcreateCurve( relationships, geometryMap ) {\n\n\t\tconst geometry = relationships.children.reduce( function ( geo, child ) {\n\n\t\t\tif ( geometryMap.has( child.ID ) ) geo = geometryMap.get( child.ID );\n\n\t\t\treturn geo;\n\n\t\t}, null );\n\n\t\t// FBX does not list materials for Nurbs lines, so we'll just put our own in here.\n\t\tconst material = new LineBasicMaterial( {\n\t\t\tname: Loader.DEFAULT_MATERIAL_NAME,\n\t\t\tcolor: 0x3300ff,\n\t\t\tlinewidth: 1\n\t\t} );\n\t\treturn new Line( geometry, material );\n\n\t}\n\n\t// parse the model node for transform data\n\tgetTransformData( model, modelNode ) {\n\n\t\tconst transformData = {};\n\n\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\telse transformData.eulerOrder = 'ZYX';\n\n\t\tif ( 'Lcl_Translation' in modelNode ) transformData.translation = modelNode.Lcl_Translation.value;\n\n\t\tif ( 'PreRotation' in modelNode ) transformData.preRotation = modelNode.PreRotation.value;\n\t\tif ( 'Lcl_Rotation' in modelNode ) transformData.rotation = modelNode.Lcl_Rotation.value;\n\t\tif ( 'PostRotation' in modelNode ) transformData.postRotation = modelNode.PostRotation.value;\n\n\t\tif ( 'Lcl_Scaling' in modelNode ) transformData.scale = modelNode.Lcl_Scaling.value;\n\n\t\tif ( 'ScalingOffset' in modelNode ) transformData.scalingOffset = modelNode.ScalingOffset.value;\n\t\tif ( 'ScalingPivot' in modelNode ) transformData.scalingPivot = modelNode.ScalingPivot.value;\n\n\t\tif ( 'RotationOffset' in modelNode ) transformData.rotationOffset = modelNode.RotationOffset.value;\n\t\tif ( 'RotationPivot' in modelNode ) transformData.rotationPivot = modelNode.RotationPivot.value;\n\n\t\tmodel.userData.transformData = transformData;\n\n\t}\n\n\tsetLookAtProperties( model, modelNode ) {\n\n\t\tif ( 'LookAtProperty' in modelNode ) {\n\n\t\t\tconst children = connections.get( model.ID ).children;\n\n\t\t\tchildren.forEach( function ( child ) {\n\n\t\t\t\tif ( child.relationship === 'LookAtProperty' ) {\n\n\t\t\t\t\tconst lookAtTarget = fbxTree.Objects.Model[ child.ID ];\n\n\t\t\t\t\tif ( 'Lcl_Translation' in lookAtTarget ) {\n\n\t\t\t\t\t\tconst pos = lookAtTarget.Lcl_Translation.value;\n\n\t\t\t\t\t\t// DirectionalLight, SpotLight\n\t\t\t\t\t\tif ( model.target !== undefined ) {\n\n\t\t\t\t\t\t\tmodel.target.position.fromArray( pos );\n\t\t\t\t\t\t\tsceneGraph.add( model.target );\n\n\t\t\t\t\t\t} else { // Cameras and other Object3Ds\n\n\t\t\t\t\t\t\tmodel.lookAt( new Vector3().fromArray( pos ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\tbindSkeleton( skeletons, geometryMap, modelMap ) {\n\n\t\tconst bindMatrices = this.parsePoseNodes();\n\n\t\tfor ( const ID in skeletons ) {\n\n\t\t\tconst skeleton = skeletons[ ID ];\n\n\t\t\tconst parents = connections.get( parseInt( skeleton.ID ) ).parents;\n\n\t\t\tparents.forEach( function ( parent ) {\n\n\t\t\t\tif ( geometryMap.has( parent.ID ) ) {\n\n\t\t\t\t\tconst geoID = parent.ID;\n\t\t\t\t\tconst geoRelationships = connections.get( geoID );\n\n\t\t\t\t\tgeoRelationships.parents.forEach( function ( geoConnParent ) {\n\n\t\t\t\t\t\tif ( modelMap.has( geoConnParent.ID ) ) {\n\n\t\t\t\t\t\t\tconst model = modelMap.get( geoConnParent.ID );\n\n\t\t\t\t\t\t\tmodel.bind( new Skeleton( skeleton.bones ), bindMatrices[ geoConnParent.ID ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\tparsePoseNodes() {\n\n\t\tconst bindMatrices = {};\n\n\t\tif ( 'Pose' in fbxTree.Objects ) {\n\n\t\t\tconst BindPoseNode = fbxTree.Objects.Pose;\n\n\t\t\tfor ( const nodeID in BindPoseNode ) {\n\n\t\t\t\tif ( BindPoseNode[ nodeID ].attrType === 'BindPose' && BindPoseNode[ nodeID ].NbPoseNodes > 0 ) {\n\n\t\t\t\t\tconst poseNodes = BindPoseNode[ nodeID ].PoseNode;\n\n\t\t\t\t\tif ( Array.isArray( poseNodes ) ) {\n\n\t\t\t\t\t\tposeNodes.forEach( function ( poseNode ) {\n\n\t\t\t\t\t\t\tbindMatrices[ poseNode.Node ] = new Matrix4().fromArray( poseNode.Matrix.a );\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbindMatrices[ poseNodes.Node ] = new Matrix4().fromArray( poseNodes.Matrix.a );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn bindMatrices;\n\n\t}\n\n\taddGlobalSceneSettings() {\n\n\t\tif ( 'GlobalSettings' in fbxTree ) {\n\n\t\t\tif ( 'AmbientColor' in fbxTree.GlobalSettings ) {\n\n\t\t\t\t// Parse ambient color - if it's not set to black (default), create an ambient light\n\n\t\t\t\tconst ambientColor = fbxTree.GlobalSettings.AmbientColor.value;\n\t\t\t\tconst r = ambientColor[ 0 ];\n\t\t\t\tconst g = ambientColor[ 1 ];\n\t\t\t\tconst b = ambientColor[ 2 ];\n\n\t\t\t\tif ( r !== 0 || g !== 0 || b !== 0 ) {\n\n\t\t\t\t\tconst color = new Color( r, g, b ).convertSRGBToLinear();\n\t\t\t\t\tsceneGraph.add( new AmbientLight( color, 1 ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( 'UnitScaleFactor' in fbxTree.GlobalSettings ) {\n\n\t\t\t\tsceneGraph.userData.unitScaleFactor = fbxTree.GlobalSettings.UnitScaleFactor.value;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\n// parse Geometry data from FBXTree and return map of BufferGeometries\nclass GeometryParser {\n\n\tconstructor() {\n\n\t\tthis.negativeMaterialIndices = false;\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Geometry\n\tparse( deformers ) {\n\n\t\tconst geometryMap = new Map();\n\n\t\tif ( 'Geometry' in fbxTree.Objects ) {\n\n\t\t\tconst geoNodes = fbxTree.Objects.Geometry;\n\n\t\t\tfor ( const nodeID in geoNodes ) {\n\n\t\t\t\tconst relationships = connections.get( parseInt( nodeID ) );\n\t\t\t\tconst geo = this.parseGeometry( relationships, geoNodes[ nodeID ], deformers );\n\n\t\t\t\tgeometryMap.set( parseInt( nodeID ), geo );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// report warnings\n\n\t\tif ( this.negativeMaterialIndices === true ) {\n\n\t\t\tconsole.warn( 'THREE.FBXLoader: The FBX file contains invalid (negative) material indices. The asset might not render as expected.' );\n\n\t\t}\n\n\t\treturn geometryMap;\n\n\t}\n\n\t// Parse single node in FBXTree.Objects.Geometry\n\tparseGeometry( relationships, geoNode, deformers ) {\n\n\t\tswitch ( geoNode.attrType ) {\n\n\t\t\tcase 'Mesh':\n\t\t\t\treturn this.parseMeshGeometry( relationships, geoNode, deformers );\n\t\t\t\tbreak;\n\n\t\t\tcase 'NurbsCurve':\n\t\t\t\treturn this.parseNurbsGeometry( geoNode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\t// Parse single node mesh geometry in FBXTree.Objects.Geometry\n\tparseMeshGeometry( relationships, geoNode, deformers ) {\n\n\t\tconst skeletons = deformers.skeletons;\n\t\tconst morphTargets = [];\n\n\t\tconst modelNodes = relationships.parents.map( function ( parent ) {\n\n\t\t\treturn fbxTree.Objects.Model[ parent.ID ];\n\n\t\t} );\n\n\t\t// don't create geometry if it is not associated with any models\n\t\tif ( modelNodes.length === 0 ) return;\n\n\t\tconst skeleton = relationships.children.reduce( function ( skeleton, child ) {\n\n\t\t\tif ( skeletons[ child.ID ] !== undefined ) skeleton = skeletons[ child.ID ];\n\n\t\t\treturn skeleton;\n\n\t\t}, null );\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tif ( deformers.morphTargets[ child.ID ] !== undefined ) {\n\n\t\t\t\tmorphTargets.push( deformers.morphTargets[ child.ID ] );\n\n\t\t\t}\n\n\t\t} );\n\n\t\t// Assume one model and get the preRotation from that\n\t\t// if there is more than one model associated with the geometry this may cause problems\n\t\tconst modelNode = modelNodes[ 0 ];\n\n\t\tconst transformData = {};\n\n\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\tif ( 'GeometricTranslation' in modelNode ) transformData.translation = modelNode.GeometricTranslation.value;\n\t\tif ( 'GeometricRotation' in modelNode ) transformData.rotation = modelNode.GeometricRotation.value;\n\t\tif ( 'GeometricScaling' in modelNode ) transformData.scale = modelNode.GeometricScaling.value;\n\n\t\tconst transform = generateTransform( transformData );\n\n\t\treturn this.genGeometry( geoNode, skeleton, morphTargets, transform );\n\n\t}\n\n\t// Generate a BufferGeometry from a node in FBXTree.Objects.Geometry\n\tgenGeometry( geoNode, skeleton, morphTargets, preTransform ) {\n\n\t\tconst geo = new BufferGeometry();\n\t\tif ( geoNode.attrName ) geo.name = geoNode.attrName;\n\n\t\tconst geoInfo = this.parseGeoNode( geoNode, skeleton );\n\t\tconst buffers = this.genBuffers( geoInfo );\n\n\t\tconst positionAttribute = new Float32BufferAttribute( buffers.vertex, 3 );\n\n\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\tgeo.setAttribute( 'position', positionAttribute );\n\n\t\tif ( buffers.colors.length > 0 ) {\n\n\t\t\tgeo.setAttribute( 'color', new Float32BufferAttribute( buffers.colors, 3 ) );\n\n\t\t}\n\n\t\tif ( skeleton ) {\n\n\t\t\tgeo.setAttribute( 'skinIndex', new Uint16BufferAttribute( buffers.weightsIndices, 4 ) );\n\n\t\t\tgeo.setAttribute( 'skinWeight', new Float32BufferAttribute( buffers.vertexWeights, 4 ) );\n\n\t\t\t// used later to bind the skeleton to the model\n\t\t\tgeo.FBX_Deformer = skeleton;\n\n\t\t}\n\n\t\tif ( buffers.normal.length > 0 ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( preTransform );\n\n\t\t\tconst normalAttribute = new Float32BufferAttribute( buffers.normal, 3 );\n\t\t\tnormalAttribute.applyNormalMatrix( normalMatrix );\n\n\t\t\tgeo.setAttribute( 'normal', normalAttribute );\n\n\t\t}\n\n\t\tbuffers.uvs.forEach( function ( uvBuffer, i ) {\n\n\t\t\tconst name = i === 0 ? 'uv' : `uv${ i }`;\n\n\t\t\tgeo.setAttribute( name, new Float32BufferAttribute( buffers.uvs[ i ], 2 ) );\n\n\t\t} );\n\n\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t// Convert the material indices of each vertex into rendering groups on the geometry.\n\t\t\tlet prevMaterialIndex = buffers.materialIndex[ 0 ];\n\t\t\tlet startIndex = 0;\n\n\t\t\tbuffers.materialIndex.forEach( function ( currentIndex, i ) {\n\n\t\t\t\tif ( currentIndex !== prevMaterialIndex ) {\n\n\t\t\t\t\tgeo.addGroup( startIndex, i - startIndex, prevMaterialIndex );\n\n\t\t\t\t\tprevMaterialIndex = currentIndex;\n\t\t\t\t\tstartIndex = i;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\t// the loop above doesn't add the last group, do that here.\n\t\t\tif ( geo.groups.length > 0 ) {\n\n\t\t\t\tconst lastGroup = geo.groups[ geo.groups.length - 1 ];\n\t\t\t\tconst lastIndex = lastGroup.start + lastGroup.count;\n\n\t\t\t\tif ( lastIndex !== buffers.materialIndex.length ) {\n\n\t\t\t\t\tgeo.addGroup( lastIndex, buffers.materialIndex.length - lastIndex, prevMaterialIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// case where there are multiple materials but the whole geometry is only\n\t\t\t// using one of them\n\t\t\tif ( geo.groups.length === 0 ) {\n\n\t\t\t\tgeo.addGroup( 0, buffers.materialIndex.length, buffers.materialIndex[ 0 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.addMorphTargets( geo, geoNode, morphTargets, preTransform );\n\n\t\treturn geo;\n\n\t}\n\n\tparseGeoNode( geoNode, skeleton ) {\n\n\t\tconst geoInfo = {};\n\n\t\tgeoInfo.vertexPositions = ( geoNode.Vertices !== undefined ) ? geoNode.Vertices.a : [];\n\t\tgeoInfo.vertexIndices = ( geoNode.PolygonVertexIndex !== undefined ) ? geoNode.PolygonVertexIndex.a : [];\n\n\t\tif ( geoNode.LayerElementColor ) {\n\n\t\t\tgeoInfo.color = this.parseVertexColors( geoNode.LayerElementColor[ 0 ] );\n\n\t\t}\n\n\t\tif ( geoNode.LayerElementMaterial ) {\n\n\t\t\tgeoInfo.material = this.parseMaterialIndices( geoNode.LayerElementMaterial[ 0 ] );\n\n\t\t}\n\n\t\tif ( geoNode.LayerElementNormal ) {\n\n\t\t\tgeoInfo.normal = this.parseNormals( geoNode.LayerElementNormal[ 0 ] );\n\n\t\t}\n\n\t\tif ( geoNode.LayerElementUV ) {\n\n\t\t\tgeoInfo.uv = [];\n\n\t\t\tlet i = 0;\n\t\t\twhile ( geoNode.LayerElementUV[ i ] ) {\n\n\t\t\t\tif ( geoNode.LayerElementUV[ i ].UV ) {\n\n\t\t\t\t\tgeoInfo.uv.push( this.parseUVs( geoNode.LayerElementUV[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeoInfo.weightTable = {};\n\n\t\tif ( skeleton !== null ) {\n\n\t\t\tgeoInfo.skeleton = skeleton;\n\n\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t// loop over the bone's vertex indices and weights\n\t\t\t\trawBone.indices.forEach( function ( index, j ) {\n\n\t\t\t\t\tif ( geoInfo.weightTable[ index ] === undefined ) geoInfo.weightTable[ index ] = [];\n\n\t\t\t\t\tgeoInfo.weightTable[ index ].push( {\n\n\t\t\t\t\t\tid: i,\n\t\t\t\t\t\tweight: rawBone.weights[ j ],\n\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn geoInfo;\n\n\t}\n\n\tgenBuffers( geoInfo ) {\n\n\t\tconst buffers = {\n\t\t\tvertex: [],\n\t\t\tnormal: [],\n\t\t\tcolors: [],\n\t\t\tuvs: [],\n\t\t\tmaterialIndex: [],\n\t\t\tvertexWeights: [],\n\t\t\tweightsIndices: [],\n\t\t};\n\n\t\tlet polygonIndex = 0;\n\t\tlet faceLength = 0;\n\t\tlet displayedWeightsWarning = false;\n\n\t\t// these will hold data for a single face\n\t\tlet facePositionIndexes = [];\n\t\tlet faceNormals = [];\n\t\tlet faceColors = [];\n\t\tlet faceUVs = [];\n\t\tlet faceWeights = [];\n\t\tlet faceWeightIndices = [];\n\n\t\tconst scope = this;\n\t\tgeoInfo.vertexIndices.forEach( function ( vertexIndex, polygonVertexIndex ) {\n\n\t\t\tlet materialIndex;\n\t\t\tlet endOfFace = false;\n\n\t\t\t// Face index and vertex index arrays are combined in a single array\n\t\t\t// A cube with quad faces looks like this:\n\t\t\t// PolygonVertexIndex: *24 {\n\t\t\t//  a: 0, 1, 3, -3, 2, 3, 5, -5, 4, 5, 7, -7, 6, 7, 1, -1, 1, 7, 5, -4, 6, 0, 2, -5\n\t\t\t//  }\n\t\t\t// Negative numbers mark the end of a face - first face here is 0, 1, 3, -3\n\t\t\t// to find index of last vertex bit shift the index: ^ - 1\n\t\t\tif ( vertexIndex < 0 ) {\n\n\t\t\t\tvertexIndex = vertexIndex ^ - 1; // equivalent to ( x * -1 ) - 1\n\t\t\t\tendOfFace = true;\n\n\t\t\t}\n\n\t\t\tlet weightIndices = [];\n\t\t\tlet weights = [];\n\n\t\t\tfacePositionIndexes.push( vertexIndex * 3, vertexIndex * 3 + 1, vertexIndex * 3 + 2 );\n\n\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.color );\n\n\t\t\t\tfaceColors.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\tif ( geoInfo.weightTable[ vertexIndex ] !== undefined ) {\n\n\t\t\t\t\tgeoInfo.weightTable[ vertexIndex ].forEach( function ( wt ) {\n\n\t\t\t\t\t\tweights.push( wt.weight );\n\t\t\t\t\t\tweightIndices.push( wt.id );\n\n\t\t\t\t\t} );\n\n\n\t\t\t\t}\n\n\t\t\t\tif ( weights.length > 4 ) {\n\n\t\t\t\t\tif ( ! displayedWeightsWarning ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights.' );\n\t\t\t\t\t\tdisplayedWeightsWarning = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst wIndex = [ 0, 0, 0, 0 ];\n\t\t\t\t\tconst Weight = [ 0, 0, 0, 0 ];\n\n\t\t\t\t\tweights.forEach( function ( weight, weightIndex ) {\n\n\t\t\t\t\t\tlet currentWeight = weight;\n\t\t\t\t\t\tlet currentIndex = weightIndices[ weightIndex ];\n\n\t\t\t\t\t\tWeight.forEach( function ( comparedWeight, comparedWeightIndex, comparedWeightArray ) {\n\n\t\t\t\t\t\t\tif ( currentWeight > comparedWeight ) {\n\n\t\t\t\t\t\t\t\tcomparedWeightArray[ comparedWeightIndex ] = currentWeight;\n\t\t\t\t\t\t\t\tcurrentWeight = comparedWeight;\n\n\t\t\t\t\t\t\t\tconst tmp = wIndex[ comparedWeightIndex ];\n\t\t\t\t\t\t\t\twIndex[ comparedWeightIndex ] = currentIndex;\n\t\t\t\t\t\t\t\tcurrentIndex = tmp;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tweightIndices = wIndex;\n\t\t\t\t\tweights = Weight;\n\n\t\t\t\t}\n\n\t\t\t\t// if the weight array is shorter than 4 pad with 0s\n\t\t\t\twhile ( weights.length < 4 ) {\n\n\t\t\t\t\tweights.push( 0 );\n\t\t\t\t\tweightIndices.push( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 4; ++ i ) {\n\n\t\t\t\t\tfaceWeights.push( weights[ i ] );\n\t\t\t\t\tfaceWeightIndices.push( weightIndices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.normal );\n\n\t\t\t\tfaceNormals.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\tmaterialIndex = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.material )[ 0 ];\n\n\t\t\t\tif ( materialIndex < 0 ) {\n\n\t\t\t\t\tscope.negativeMaterialIndices = true;\n\t\t\t\t\tmaterialIndex = 0; // fallback\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\tgeoInfo.uv.forEach( function ( uv, i ) {\n\n\t\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, uv );\n\n\t\t\t\t\tif ( faceUVs[ i ] === undefined ) {\n\n\t\t\t\t\t\tfaceUVs[ i ] = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceUVs[ i ].push( data[ 0 ] );\n\t\t\t\t\tfaceUVs[ i ].push( data[ 1 ] );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tfaceLength ++;\n\n\t\t\tif ( endOfFace ) {\n\n\t\t\t\tscope.genFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength );\n\n\t\t\t\tpolygonIndex ++;\n\t\t\t\tfaceLength = 0;\n\n\t\t\t\t// reset arrays for the next face\n\t\t\t\tfacePositionIndexes = [];\n\t\t\t\tfaceNormals = [];\n\t\t\t\tfaceColors = [];\n\t\t\t\tfaceUVs = [];\n\t\t\t\tfaceWeights = [];\n\t\t\t\tfaceWeightIndices = [];\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn buffers;\n\n\t}\n\n\t// See https://www.khronos.org/opengl/wiki/Calculating_a_Surface_Normal\n\tgetNormalNewell( vertices ) {\n\n\t\tconst normal = new Vector3( 0.0, 0.0, 0.0 );\n\n\t\tfor ( let i = 0; i < vertices.length; i ++ ) {\n\n\t\t\tconst current = vertices[ i ];\n\t\t\tconst next = vertices[ ( i + 1 ) % vertices.length ];\n\n\t\t\tnormal.x += ( current.y - next.y ) * ( current.z + next.z );\n\t\t\tnormal.y += ( current.z - next.z ) * ( current.x + next.x );\n\t\t\tnormal.z += ( current.x - next.x ) * ( current.y + next.y );\n\n\t\t}\n\n\t\tnormal.normalize();\n\n\t\treturn normal;\n\n\t}\n\n\tgetNormalTangentAndBitangent( vertices ) {\n\n\t\tconst normalVector = this.getNormalNewell( vertices );\n\t\t// Avoid up being equal or almost equal to normalVector\n\t\tconst up = Math.abs( normalVector.z ) > 0.5 ? new Vector3( 0.0, 1.0, 0.0 ) : new Vector3( 0.0, 0.0, 1.0 );\n\t\tconst tangent = up.cross( normalVector ).normalize();\n\t\tconst bitangent = normalVector.clone().cross( tangent ).normalize();\n\n\t\treturn {\n\t\t\tnormal: normalVector,\n\t\t\ttangent: tangent,\n\t\t\tbitangent: bitangent\n\t\t};\n\n\t}\n\n\tflattenVertex( vertex, normalTangent, normalBitangent ) {\n\n\t\treturn new Vector2(\n\t\t\tvertex.dot( normalTangent ),\n\t\t\tvertex.dot( normalBitangent )\n\t\t);\n\n\t}\n\n\t// Generate data for a single face in a geometry. If the face is a quad then split it into 2 tris\n\tgenFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength ) {\n\n\t\tlet triangles;\n\n\t\tif ( faceLength > 3 ) {\n\n\t\t\t// Triangulate n-gon using earcut\n\n\t\t\tconst vertices = [];\n\n\t\t\tfor ( let i = 0; i < facePositionIndexes.length; i += 3 ) {\n\n\t\t\t\tvertices.push( new Vector3(\n\t\t\t\t\tgeoInfo.vertexPositions[ facePositionIndexes[ i ] ],\n\t\t\t\t\tgeoInfo.vertexPositions[ facePositionIndexes[ i + 1 ] ],\n\t\t\t\t\tgeoInfo.vertexPositions[ facePositionIndexes[ i + 2 ] ]\n\t\t\t\t) );\n\n\t\t\t}\n\n\t\t\tconst { tangent, bitangent } = this.getNormalTangentAndBitangent( vertices );\n\t\t\tconst triangulationInput = [];\n\n\t\t\tfor ( const vertex of vertices ) {\n\n\t\t\t\ttriangulationInput.push( this.flattenVertex( vertex, tangent, bitangent ) );\n\n\t\t\t}\n\n\t\t\ttriangles = ShapeUtils.triangulateShape( triangulationInput, [] );\n\n\t\t} else {\n\n\t\t\t// Regular triangle, skip earcut triangulation step\n\t\t\ttriangles = [[ 0, 1, 2 ]];\n\n\t\t}\n\n\t\tfor ( const [ i0, i1, i2 ] of triangles ) {\n\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i0 * 3 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i0 * 3 + 1 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i0 * 3 + 2 ] ] );\n\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i1 * 3 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i1 * 3 + 1 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i1 * 3 + 2 ] ] );\n\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i2 * 3 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i2 * 3 + 1 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i2 * 3 + 2 ] ] );\n\n\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i0 * 4 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i0 * 4 + 1 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i0 * 4 + 2 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i0 * 4 + 3 ] );\n\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i1 * 4 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i1 * 4 + 1 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i1 * 4 + 2 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i1 * 4 + 3 ] );\n\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i2 * 4 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i2 * 4 + 1 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i2 * 4 + 2 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i2 * 4 + 3 ] );\n\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i0 * 4 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i0 * 4 + 1 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i0 * 4 + 2 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i0 * 4 + 3 ] );\n\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i1 * 4 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i1 * 4 + 1 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i1 * 4 + 2 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i1 * 4 + 3 ] );\n\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i2 * 4 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i2 * 4 + 1 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i2 * 4 + 2 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i2 * 4 + 3 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\tbuffers.colors.push( faceColors[ i0 * 3 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i0 * 3 + 1 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i0 * 3 + 2 ] );\n\n\t\t\t\tbuffers.colors.push( faceColors[ i1 * 3 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i1 * 3 + 1 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i1 * 3 + 2 ] );\n\n\t\t\t\tbuffers.colors.push( faceColors[ i2 * 3 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i2 * 3 + 1 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i2 * 3 + 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\tbuffers.normal.push( faceNormals[ i0 * 3 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i0 * 3 + 1 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i0 * 3 + 2 ] );\n\n\t\t\t\tbuffers.normal.push( faceNormals[ i1 * 3 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i1 * 3 + 1 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i1 * 3 + 2 ] );\n\n\t\t\t\tbuffers.normal.push( faceNormals[ i2 * 3 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i2 * 3 + 1 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i2 * 3 + 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\tgeoInfo.uv.forEach( function ( uv, j ) {\n\n\t\t\t\t\tif ( buffers.uvs[ j ] === undefined ) buffers.uvs[ j ] = [];\n\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i0 * 2 ] );\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i0 * 2 + 1 ] );\n\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i1 * 2 ] );\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i1 * 2 + 1 ] );\n\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i2 * 2 ] );\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i2 * 2 + 1 ] );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\taddMorphTargets( parentGeo, parentGeoNode, morphTargets, preTransform ) {\n\n\t\tif ( morphTargets.length === 0 ) return;\n\n\t\tparentGeo.morphTargetsRelative = true;\n\n\t\tparentGeo.morphAttributes.position = [];\n\t\t// parentGeo.morphAttributes.normal = []; // not implemented\n\n\t\tconst scope = this;\n\t\tmorphTargets.forEach( function ( morphTarget ) {\n\n\t\t\tmorphTarget.rawTargets.forEach( function ( rawTarget ) {\n\n\t\t\t\tconst morphGeoNode = fbxTree.Objects.Geometry[ rawTarget.geoID ];\n\n\t\t\t\tif ( morphGeoNode !== undefined ) {\n\n\t\t\t\t\tscope.genMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, rawTarget.name );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t// a morph geometry node is similar to a standard  node, and the node is also contained\n\t// in FBXTree.Objects.Geometry, however it can only have attributes for position, normal\n\t// and a special attribute Index defining which vertices of the original geometry are affected\n\t// Normal and position attributes only have data for the vertices that are affected by the morph\n\tgenMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, name ) {\n\n\t\tconst vertexIndices = ( parentGeoNode.PolygonVertexIndex !== undefined ) ? parentGeoNode.PolygonVertexIndex.a : [];\n\n\t\tconst morphPositionsSparse = ( morphGeoNode.Vertices !== undefined ) ? morphGeoNode.Vertices.a : [];\n\t\tconst indices = ( morphGeoNode.Indexes !== undefined ) ? morphGeoNode.Indexes.a : [];\n\n\t\tconst length = parentGeo.attributes.position.count * 3;\n\t\tconst morphPositions = new Float32Array( length );\n\n\t\tfor ( let i = 0; i < indices.length; i ++ ) {\n\n\t\t\tconst morphIndex = indices[ i ] * 3;\n\n\t\t\tmorphPositions[ morphIndex ] = morphPositionsSparse[ i * 3 ];\n\t\t\tmorphPositions[ morphIndex + 1 ] = morphPositionsSparse[ i * 3 + 1 ];\n\t\t\tmorphPositions[ morphIndex + 2 ] = morphPositionsSparse[ i * 3 + 2 ];\n\n\t\t}\n\n\t\t// TODO: add morph normal support\n\t\tconst morphGeoInfo = {\n\t\t\tvertexIndices: vertexIndices,\n\t\t\tvertexPositions: morphPositions,\n\n\t\t};\n\n\t\tconst morphBuffers = this.genBuffers( morphGeoInfo );\n\n\t\tconst positionAttribute = new Float32BufferAttribute( morphBuffers.vertex, 3 );\n\t\tpositionAttribute.name = name || morphGeoNode.attrName;\n\n\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\tparentGeo.morphAttributes.position.push( positionAttribute );\n\n\t}\n\n\t// Parse normal from FBXTree.Objects.Geometry.LayerElementNormal if it exists\n\tparseNormals( NormalNode ) {\n\n\t\tconst mappingType = NormalNode.MappingInformationType;\n\t\tconst referenceType = NormalNode.ReferenceInformationType;\n\t\tconst buffer = NormalNode.Normals.a;\n\t\tlet indexBuffer = [];\n\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\tif ( 'NormalIndex' in NormalNode ) {\n\n\t\t\t\tindexBuffer = NormalNode.NormalIndex.a;\n\n\t\t\t} else if ( 'NormalsIndex' in NormalNode ) {\n\n\t\t\t\tindexBuffer = NormalNode.NormalsIndex.a;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 3,\n\t\t\tbuffer: buffer,\n\t\t\tindices: indexBuffer,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Parse UVs from FBXTree.Objects.Geometry.LayerElementUV if it exists\n\tparseUVs( UVNode ) {\n\n\t\tconst mappingType = UVNode.MappingInformationType;\n\t\tconst referenceType = UVNode.ReferenceInformationType;\n\t\tconst buffer = UVNode.UV.a;\n\t\tlet indexBuffer = [];\n\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\tindexBuffer = UVNode.UVIndex.a;\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 2,\n\t\t\tbuffer: buffer,\n\t\t\tindices: indexBuffer,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Parse Vertex Colors from FBXTree.Objects.Geometry.LayerElementColor if it exists\n\tparseVertexColors( ColorNode ) {\n\n\t\tconst mappingType = ColorNode.MappingInformationType;\n\t\tconst referenceType = ColorNode.ReferenceInformationType;\n\t\tconst buffer = ColorNode.Colors.a;\n\t\tlet indexBuffer = [];\n\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\tindexBuffer = ColorNode.ColorIndex.a;\n\n\t\t}\n\n\t\tfor ( let i = 0, c = new Color(); i < buffer.length; i += 4 ) {\n\n\t\t\tc.fromArray( buffer, i ).convertSRGBToLinear().toArray( buffer, i );\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 4,\n\t\t\tbuffer: buffer,\n\t\t\tindices: indexBuffer,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Parse mapping and material data in FBXTree.Objects.Geometry.LayerElementMaterial if it exists\n\tparseMaterialIndices( MaterialNode ) {\n\n\t\tconst mappingType = MaterialNode.MappingInformationType;\n\t\tconst referenceType = MaterialNode.ReferenceInformationType;\n\n\t\tif ( mappingType === 'NoMappingInformation' ) {\n\n\t\t\treturn {\n\t\t\t\tdataSize: 1,\n\t\t\t\tbuffer: [ 0 ],\n\t\t\t\tindices: [ 0 ],\n\t\t\t\tmappingType: 'AllSame',\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t}\n\n\t\tconst materialIndexBuffer = MaterialNode.Materials.a;\n\n\t\t// Since materials are stored as indices, there's a bit of a mismatch between FBX and what\n\t\t// we expect.So we create an intermediate buffer that points to the index in the buffer,\n\t\t// for conforming with the other functions we've written for other data.\n\t\tconst materialIndices = [];\n\n\t\tfor ( let i = 0; i < materialIndexBuffer.length; ++ i ) {\n\n\t\t\tmaterialIndices.push( i );\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 1,\n\t\t\tbuffer: materialIndexBuffer,\n\t\t\tindices: materialIndices,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Generate a NurbGeometry from a node in FBXTree.Objects.Geometry\n\tparseNurbsGeometry( geoNode ) {\n\n\t\tconst order = parseInt( geoNode.Order );\n\n\t\tif ( isNaN( order ) ) {\n\n\t\t\tconsole.error( 'THREE.FBXLoader: Invalid Order %s given for geometry ID: %s', geoNode.Order, geoNode.id );\n\t\t\treturn new BufferGeometry();\n\n\t\t}\n\n\t\tconst degree = order - 1;\n\n\t\tconst knots = geoNode.KnotVector.a;\n\t\tconst controlPoints = [];\n\t\tconst pointsValues = geoNode.Points.a;\n\n\t\tfor ( let i = 0, l = pointsValues.length; i < l; i += 4 ) {\n\n\t\t\tcontrolPoints.push( new Vector4().fromArray( pointsValues, i ) );\n\n\t\t}\n\n\t\tlet startKnot, endKnot;\n\n\t\tif ( geoNode.Form === 'Closed' ) {\n\n\t\t\tcontrolPoints.push( controlPoints[ 0 ] );\n\n\t\t} else if ( geoNode.Form === 'Periodic' ) {\n\n\t\t\tstartKnot = degree;\n\t\t\tendKnot = knots.length - 1 - startKnot;\n\n\t\t\tfor ( let i = 0; i < degree; ++ i ) {\n\n\t\t\t\tcontrolPoints.push( controlPoints[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst curve = new NURBSCurve( degree, knots, controlPoints, startKnot, endKnot );\n\t\tconst points = curve.getPoints( controlPoints.length * 12 );\n\n\t\treturn new BufferGeometry().setFromPoints( points );\n\n\t}\n\n}\n\n// parse animation data from FBXTree\nclass AnimationParser {\n\n\t// take raw animation clips and turn them into three.js animation clips\n\tparse() {\n\n\t\tconst animationClips = [];\n\n\t\tconst rawClips = this.parseClips();\n\n\t\tif ( rawClips !== undefined ) {\n\n\t\t\tfor ( const key in rawClips ) {\n\n\t\t\t\tconst rawClip = rawClips[ key ];\n\n\t\t\t\tconst clip = this.addClip( rawClip );\n\n\t\t\t\tanimationClips.push( clip );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animationClips;\n\n\t}\n\n\tparseClips() {\n\n\t\t// since the actual transformation data is stored in FBXTree.Objects.AnimationCurve,\n\t\t// if this is undefined we can safely assume there are no animations\n\t\tif ( fbxTree.Objects.AnimationCurve === undefined ) return undefined;\n\n\t\tconst curveNodesMap = this.parseAnimationCurveNodes();\n\n\t\tthis.parseAnimationCurves( curveNodesMap );\n\n\t\tconst layersMap = this.parseAnimationLayers( curveNodesMap );\n\t\tconst rawClips = this.parseAnimStacks( layersMap );\n\n\t\treturn rawClips;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationCurveNode\n\t// each AnimationCurveNode holds data for an animation transform for a model (e.g. left arm rotation )\n\t// and is referenced by an AnimationLayer\n\tparseAnimationCurveNodes() {\n\n\t\tconst rawCurveNodes = fbxTree.Objects.AnimationCurveNode;\n\n\t\tconst curveNodesMap = new Map();\n\n\t\tfor ( const nodeID in rawCurveNodes ) {\n\n\t\t\tconst rawCurveNode = rawCurveNodes[ nodeID ];\n\n\t\t\tif ( rawCurveNode.attrName.match( /S|R|T|DeformPercent/ ) !== null ) {\n\n\t\t\t\tconst curveNode = {\n\n\t\t\t\t\tid: rawCurveNode.id,\n\t\t\t\t\tattr: rawCurveNode.attrName,\n\t\t\t\t\tcurves: {},\n\n\t\t\t\t};\n\n\t\t\t\tcurveNodesMap.set( curveNode.id, curveNode );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn curveNodesMap;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationCurve and connect them up to\n\t// previously parsed AnimationCurveNodes. Each AnimationCurve holds data for a single animated\n\t// axis ( e.g. times and values of x rotation)\n\tparseAnimationCurves( curveNodesMap ) {\n\n\t\tconst rawCurves = fbxTree.Objects.AnimationCurve;\n\n\t\t// TODO: Many values are identical up to roundoff error, but won't be optimised\n\t\t// e.g. position times: [0, 0.4, 0. 8]\n\t\t// position values: [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.235384487103147e-7, 93.67520904541016, -0.9982695579528809]\n\t\t// clearly, this should be optimised to\n\t\t// times: [0], positions [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809]\n\t\t// this shows up in nearly every FBX file, and generally time array is length > 100\n\n\t\tfor ( const nodeID in rawCurves ) {\n\n\t\t\tconst animationCurve = {\n\n\t\t\t\tid: rawCurves[ nodeID ].id,\n\t\t\t\ttimes: rawCurves[ nodeID ].KeyTime.a.map( convertFBXTimeToSeconds ),\n\t\t\t\tvalues: rawCurves[ nodeID ].KeyValueFloat.a,\n\n\t\t\t};\n\n\t\t\tconst relationships = connections.get( animationCurve.id );\n\n\t\t\tif ( relationships !== undefined ) {\n\n\t\t\t\tconst animationCurveID = relationships.parents[ 0 ].ID;\n\t\t\t\tconst animationCurveRelationship = relationships.parents[ 0 ].relationship;\n\n\t\t\t\tif ( animationCurveRelationship.match( /X/ ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'x' ] = animationCurve;\n\n\t\t\t\t} else if ( animationCurveRelationship.match( /Y/ ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'y' ] = animationCurve;\n\n\t\t\t\t} else if ( animationCurveRelationship.match( /Z/ ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'z' ] = animationCurve;\n\n\t\t\t\t} else if ( animationCurveRelationship.match( /DeformPercent/ ) && curveNodesMap.has( animationCurveID ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'morph' ] = animationCurve;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationLayer. Each layers holds references\n\t// to various AnimationCurveNodes and is referenced by an AnimationStack node\n\t// note: theoretically a stack can have multiple layers, however in practice there always seems to be one per stack\n\tparseAnimationLayers( curveNodesMap ) {\n\n\t\tconst rawLayers = fbxTree.Objects.AnimationLayer;\n\n\t\tconst layersMap = new Map();\n\n\t\tfor ( const nodeID in rawLayers ) {\n\n\t\t\tconst layerCurveNodes = [];\n\n\t\t\tconst connection = connections.get( parseInt( nodeID ) );\n\n\t\t\tif ( connection !== undefined ) {\n\n\t\t\t\t// all the animationCurveNodes used in the layer\n\t\t\t\tconst children = connection.children;\n\n\t\t\t\tchildren.forEach( function ( child, i ) {\n\n\t\t\t\t\tif ( curveNodesMap.has( child.ID ) ) {\n\n\t\t\t\t\t\tconst curveNode = curveNodesMap.get( child.ID );\n\n\t\t\t\t\t\t// check that the curves are defined for at least one axis, otherwise ignore the curveNode\n\t\t\t\t\t\tif ( curveNode.curves.x !== undefined || curveNode.curves.y !== undefined || curveNode.curves.z !== undefined ) {\n\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\tconst modelID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\tif ( modelID !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tconst rawModel = fbxTree.Objects.Model[ modelID.toString() ];\n\n\t\t\t\t\t\t\t\t\tif ( rawModel === undefined ) {\n\n\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered a unused curve.', child );\n\t\t\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst node = {\n\n\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\t\tID: rawModel.id,\n\t\t\t\t\t\t\t\t\t\tinitialPosition: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\tinitialRotation: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\tinitialScale: [ 1, 1, 1 ],\n\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tsceneGraph.traverse( function ( child ) {\n\n\t\t\t\t\t\t\t\t\t\tif ( child.ID === rawModel.id ) {\n\n\t\t\t\t\t\t\t\t\t\t\tnode.transform = child.matrix;\n\n\t\t\t\t\t\t\t\t\t\t\tif ( child.userData.transformData ) node.eulerOrder = child.userData.transformData.eulerOrder;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t\t\tif ( ! node.transform ) node.transform = new Matrix4();\n\n\t\t\t\t\t\t\t\t\t// if the animated model is pre rotated, we'll have to apply the pre rotations to every\n\t\t\t\t\t\t\t\t\t// animation value as well\n\t\t\t\t\t\t\t\t\tif ( 'PreRotation' in rawModel ) node.preRotation = rawModel.PreRotation.value;\n\t\t\t\t\t\t\t\t\tif ( 'PostRotation' in rawModel ) node.postRotation = rawModel.PostRotation.value;\n\n\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] ) layerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t} else if ( curveNode.curves.morph !== undefined ) {\n\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\tconst deformerID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\tconst morpherID = connections.get( deformerID ).parents[ 0 ].ID;\n\t\t\t\t\t\t\t\tconst geoID = connections.get( morpherID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t// assuming geometry is not used in more than one model\n\t\t\t\t\t\t\t\tconst modelID = connections.get( geoID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\tconst rawModel = fbxTree.Objects.Model[ modelID ];\n\n\t\t\t\t\t\t\t\tconst node = {\n\n\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\tmorphName: fbxTree.Objects.Deformer[ deformerID ].attrName,\n\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlayerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tlayersMap.set( parseInt( nodeID ), layerCurveNodes );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn layersMap;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationStack. These are the top level node in the animation\n\t// hierarchy. Each Stack node will be used to create a AnimationClip\n\tparseAnimStacks( layersMap ) {\n\n\t\tconst rawStacks = fbxTree.Objects.AnimationStack;\n\n\t\t// connect the stacks (clips) up to the layers\n\t\tconst rawClips = {};\n\n\t\tfor ( const nodeID in rawStacks ) {\n\n\t\t\tconst children = connections.get( parseInt( nodeID ) ).children;\n\n\t\t\tif ( children.length > 1 ) {\n\n\t\t\t\t// it seems like stacks will always be associated with a single layer. But just in case there are files\n\t\t\t\t// where there are multiple layers per stack, we'll display a warning\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.' );\n\n\t\t\t}\n\n\t\t\tconst layer = layersMap.get( children[ 0 ].ID );\n\n\t\t\trawClips[ nodeID ] = {\n\n\t\t\t\tname: rawStacks[ nodeID ].attrName,\n\t\t\t\tlayer: layer,\n\n\t\t\t};\n\n\t\t}\n\n\t\treturn rawClips;\n\n\t}\n\n\taddClip( rawClip ) {\n\n\t\tlet tracks = [];\n\n\t\tconst scope = this;\n\t\trawClip.layer.forEach( function ( rawTracks ) {\n\n\t\t\ttracks = tracks.concat( scope.generateTracks( rawTracks ) );\n\n\t\t} );\n\n\t\treturn new AnimationClip( rawClip.name, - 1, tracks );\n\n\t}\n\n\tgenerateTracks( rawTracks ) {\n\n\t\tconst tracks = [];\n\n\t\tlet initialPosition = new Vector3();\n\t\tlet initialScale = new Vector3();\n\n\t\tif ( rawTracks.transform ) rawTracks.transform.decompose( initialPosition, new Quaternion(), initialScale );\n\n\t\tinitialPosition = initialPosition.toArray();\n\t\tinitialScale = initialScale.toArray();\n\n\t\tif ( rawTracks.T !== undefined && Object.keys( rawTracks.T.curves ).length > 0 ) {\n\n\t\t\tconst positionTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.T.curves, initialPosition, 'position' );\n\t\t\tif ( positionTrack !== undefined ) tracks.push( positionTrack );\n\n\t\t}\n\n\t\tif ( rawTracks.R !== undefined && Object.keys( rawTracks.R.curves ).length > 0 ) {\n\n\t\t\tconst rotationTrack = this.generateRotationTrack( rawTracks.modelName, rawTracks.R.curves, rawTracks.preRotation, rawTracks.postRotation, rawTracks.eulerOrder );\n\t\t\tif ( rotationTrack !== undefined ) tracks.push( rotationTrack );\n\n\t\t}\n\n\t\tif ( rawTracks.S !== undefined && Object.keys( rawTracks.S.curves ).length > 0 ) {\n\n\t\t\tconst scaleTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.S.curves, initialScale, 'scale' );\n\t\t\tif ( scaleTrack !== undefined ) tracks.push( scaleTrack );\n\n\t\t}\n\n\t\tif ( rawTracks.DeformPercent !== undefined ) {\n\n\t\t\tconst morphTrack = this.generateMorphTrack( rawTracks );\n\t\t\tif ( morphTrack !== undefined ) tracks.push( morphTrack );\n\n\t\t}\n\n\t\treturn tracks;\n\n\t}\n\n\tgenerateVectorTrack( modelName, curves, initialValue, type ) {\n\n\t\tconst times = this.getTimesForAllAxes( curves );\n\t\tconst values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\treturn new VectorKeyframeTrack( modelName + '.' + type, times, values );\n\n\t}\n\n\tgenerateRotationTrack( modelName, curves, preRotation, postRotation, eulerOrder ) {\n\n\t\tlet times;\n\t\tlet values;\n\n\t\tif ( curves.x !== undefined && curves.y !== undefined && curves.z !== undefined ) {\n\n\t\t\tconst result = this.interpolateRotations( curves.x, curves.y, curves.z, eulerOrder );\n\n\t\t\ttimes = result[ 0 ];\n\t\t\tvalues = result[ 1 ];\n\n\t\t}\n\n\t\tif ( preRotation !== undefined ) {\n\n\t\t\tpreRotation = preRotation.map( MathUtils.degToRad );\n\t\t\tpreRotation.push( eulerOrder );\n\n\t\t\tpreRotation = new Euler().fromArray( preRotation );\n\t\t\tpreRotation = new Quaternion().setFromEuler( preRotation );\n\n\t\t}\n\n\t\tif ( postRotation !== undefined ) {\n\n\t\t\tpostRotation = postRotation.map( MathUtils.degToRad );\n\t\t\tpostRotation.push( eulerOrder );\n\n\t\t\tpostRotation = new Euler().fromArray( postRotation );\n\t\t\tpostRotation = new Quaternion().setFromEuler( postRotation ).invert();\n\n\t\t}\n\n\t\tconst quaternion = new Quaternion();\n\t\tconst euler = new Euler();\n\n\t\tconst quaternionValues = [];\n\n\t\tif ( ! values || ! times ) return new QuaternionKeyframeTrack( modelName + '.quaternion', [ 0 ], [ 0 ] );\n\n\t\tfor ( let i = 0; i < values.length; i += 3 ) {\n\n\t\t\teuler.set( values[ i ], values[ i + 1 ], values[ i + 2 ], eulerOrder );\n\t\t\tquaternion.setFromEuler( euler );\n\n\t\t\tif ( preRotation !== undefined ) quaternion.premultiply( preRotation );\n\t\t\tif ( postRotation !== undefined ) quaternion.multiply( postRotation );\n\n\t\t\t// Check unroll\n\t\t\tif ( i > 2 ) {\n\n\t\t\t\tconst prevQuat = new Quaternion().fromArray(\n\t\t\t\t\tquaternionValues,\n\t\t\t\t\t( ( i - 3 ) / 3 ) * 4\n\t\t\t\t);\n\n\t\t\t\tif ( prevQuat.dot( quaternion ) < 0 ) {\n\n\t\t\t\t\tquaternion.set( - quaternion.x, - quaternion.y, - quaternion.z, - quaternion.w );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tquaternion.toArray( quaternionValues, ( i / 3 ) * 4 );\n\n\t\t}\n\n\t\treturn new QuaternionKeyframeTrack( modelName + '.quaternion', times, quaternionValues );\n\n\t}\n\n\tgenerateMorphTrack( rawTracks ) {\n\n\t\tconst curves = rawTracks.DeformPercent.curves.morph;\n\t\tconst values = curves.values.map( function ( val ) {\n\n\t\t\treturn val / 100;\n\n\t\t} );\n\n\t\tconst morphNum = sceneGraph.getObjectByName( rawTracks.modelName ).morphTargetDictionary[ rawTracks.morphName ];\n\n\t\treturn new NumberKeyframeTrack( rawTracks.modelName + '.morphTargetInfluences[' + morphNum + ']', curves.times, values );\n\n\t}\n\n\t// For all animated objects, times are defined separately for each axis\n\t// Here we'll combine the times into one sorted array without duplicates\n\tgetTimesForAllAxes( curves ) {\n\n\t\tlet times = [];\n\n\t\t// first join together the times for each axis, if defined\n\t\tif ( curves.x !== undefined ) times = times.concat( curves.x.times );\n\t\tif ( curves.y !== undefined ) times = times.concat( curves.y.times );\n\t\tif ( curves.z !== undefined ) times = times.concat( curves.z.times );\n\n\t\t// then sort them\n\t\ttimes = times.sort( function ( a, b ) {\n\n\t\t\treturn a - b;\n\n\t\t} );\n\n\t\t// and remove duplicates\n\t\tif ( times.length > 1 ) {\n\n\t\t\tlet targetIndex = 1;\n\t\t\tlet lastValue = times[ 0 ];\n\t\t\tfor ( let i = 1; i < times.length; i ++ ) {\n\n\t\t\t\tconst currentValue = times[ i ];\n\t\t\t\tif ( currentValue !== lastValue ) {\n\n\t\t\t\t\ttimes[ targetIndex ] = currentValue;\n\t\t\t\t\tlastValue = currentValue;\n\t\t\t\t\ttargetIndex ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttimes = times.slice( 0, targetIndex );\n\n\t\t}\n\n\t\treturn times;\n\n\t}\n\n\tgetKeyframeTrackValues( times, curves, initialValue ) {\n\n\t\tconst prevValue = initialValue;\n\n\t\tconst values = [];\n\n\t\tlet xIndex = - 1;\n\t\tlet yIndex = - 1;\n\t\tlet zIndex = - 1;\n\n\t\ttimes.forEach( function ( time ) {\n\n\t\t\tif ( curves.x ) xIndex = curves.x.times.indexOf( time );\n\t\t\tif ( curves.y ) yIndex = curves.y.times.indexOf( time );\n\t\t\tif ( curves.z ) zIndex = curves.z.times.indexOf( time );\n\n\t\t\t// if there is an x value defined for this frame, use that\n\t\t\tif ( xIndex !== - 1 ) {\n\n\t\t\t\tconst xValue = curves.x.values[ xIndex ];\n\t\t\t\tvalues.push( xValue );\n\t\t\t\tprevValue[ 0 ] = xValue;\n\n\t\t\t} else {\n\n\t\t\t\t// otherwise use the x value from the previous frame\n\t\t\t\tvalues.push( prevValue[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( yIndex !== - 1 ) {\n\n\t\t\t\tconst yValue = curves.y.values[ yIndex ];\n\t\t\t\tvalues.push( yValue );\n\t\t\t\tprevValue[ 1 ] = yValue;\n\n\t\t\t} else {\n\n\t\t\t\tvalues.push( prevValue[ 1 ] );\n\n\t\t\t}\n\n\t\t\tif ( zIndex !== - 1 ) {\n\n\t\t\t\tconst zValue = curves.z.values[ zIndex ];\n\t\t\t\tvalues.push( zValue );\n\t\t\t\tprevValue[ 2 ] = zValue;\n\n\t\t\t} else {\n\n\t\t\t\tvalues.push( prevValue[ 2 ] );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn values;\n\n\t}\n\n\t// Rotations are defined as Euler angles which can have values  of any size\n\t// These will be converted to quaternions which don't support values greater than\n\t// PI, so we'll interpolate large rotations\n\tinterpolateRotations( curvex, curvey, curvez, eulerOrder ) {\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\t// Add first frame\n\t\ttimes.push( curvex.times[ 0 ] );\n\t\tvalues.push( MathUtils.degToRad( curvex.values[ 0 ] ) );\n\t\tvalues.push( MathUtils.degToRad( curvey.values[ 0 ] ) );\n\t\tvalues.push( MathUtils.degToRad( curvez.values[ 0 ] ) );\n\n\t\tfor ( let i = 1; i < curvex.values.length; i ++ ) {\n\n\t\t\tconst initialValue = [\n\t\t\t\tcurvex.values[ i - 1 ],\n\t\t\t\tcurvey.values[ i - 1 ],\n\t\t\t\tcurvez.values[ i - 1 ],\n\t\t\t];\n\n\t\t\tif ( isNaN( initialValue[ 0 ] ) || isNaN( initialValue[ 1 ] ) || isNaN( initialValue[ 2 ] ) ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst initialValueRad = initialValue.map( MathUtils.degToRad );\n\n\t\t\tconst currentValue = [\n\t\t\t\tcurvex.values[ i ],\n\t\t\t\tcurvey.values[ i ],\n\t\t\t\tcurvez.values[ i ],\n\t\t\t];\n\n\t\t\tif ( isNaN( currentValue[ 0 ] ) || isNaN( currentValue[ 1 ] ) || isNaN( currentValue[ 2 ] ) ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValueRad = currentValue.map( MathUtils.degToRad );\n\n\t\t\tconst valuesSpan = [\n\t\t\t\tcurrentValue[ 0 ] - initialValue[ 0 ],\n\t\t\t\tcurrentValue[ 1 ] - initialValue[ 1 ],\n\t\t\t\tcurrentValue[ 2 ] - initialValue[ 2 ],\n\t\t\t];\n\n\t\t\tconst absoluteSpan = [\n\t\t\t\tMath.abs( valuesSpan[ 0 ] ),\n\t\t\t\tMath.abs( valuesSpan[ 1 ] ),\n\t\t\t\tMath.abs( valuesSpan[ 2 ] ),\n\t\t\t];\n\n\t\t\tif ( absoluteSpan[ 0 ] >= 180 || absoluteSpan[ 1 ] >= 180 || absoluteSpan[ 2 ] >= 180 ) {\n\n\t\t\t\tconst maxAbsSpan = Math.max( ...absoluteSpan );\n\n\t\t\t\tconst numSubIntervals = maxAbsSpan / 180;\n\n\t\t\t\tconst E1 = new Euler( ...initialValueRad, eulerOrder );\n\t\t\t\tconst E2 = new Euler( ...currentValueRad, eulerOrder );\n\n\t\t\t\tconst Q1 = new Quaternion().setFromEuler( E1 );\n\t\t\t\tconst Q2 = new Quaternion().setFromEuler( E2 );\n\n\t\t\t\t// Check unroll\n\t\t\t\tif ( Q1.dot( Q2 ) ) {\n\n\t\t\t\t\tQ2.set( - Q2.x, - Q2.y, - Q2.z, - Q2.w );\n\n\t\t\t\t}\n\n\t\t\t\t// Interpolate\n\t\t\t\tconst initialTime = curvex.times[ i - 1 ];\n\t\t\t\tconst timeSpan = curvex.times[ i ] - initialTime;\n\n\t\t\t\tconst Q = new Quaternion();\n\t\t\t\tconst E = new Euler();\n\t\t\t\tfor ( let t = 0; t < 1; t += 1 / numSubIntervals ) {\n\n\t\t\t\t\tQ.copy( Q1.clone().slerp( Q2.clone(), t ) );\n\n\t\t\t\t\ttimes.push( initialTime + t * timeSpan );\n\t\t\t\t\tE.setFromQuaternion( Q, eulerOrder );\n\n\t\t\t\t\tvalues.push( E.x );\n\t\t\t\t\tvalues.push( E.y );\n\t\t\t\t\tvalues.push( E.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttimes.push( curvex.times[ i ] );\n\t\t\t\tvalues.push( MathUtils.degToRad( curvex.values[ i ] ) );\n\t\t\t\tvalues.push( MathUtils.degToRad( curvey.values[ i ] ) );\n\t\t\t\tvalues.push( MathUtils.degToRad( curvez.values[ i ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn [ times, values ];\n\n\t}\n\n}\n\n// parse an FBX file in ASCII format\nclass TextParser {\n\n\tgetPrevNode() {\n\n\t\treturn this.nodeStack[ this.currentIndent - 2 ];\n\n\t}\n\n\tgetCurrentNode() {\n\n\t\treturn this.nodeStack[ this.currentIndent - 1 ];\n\n\t}\n\n\tgetCurrentProp() {\n\n\t\treturn this.currentProp;\n\n\t}\n\n\tpushStack( node ) {\n\n\t\tthis.nodeStack.push( node );\n\t\tthis.currentIndent += 1;\n\n\t}\n\n\tpopStack() {\n\n\t\tthis.nodeStack.pop();\n\t\tthis.currentIndent -= 1;\n\n\t}\n\n\tsetCurrentProp( val, name ) {\n\n\t\tthis.currentProp = val;\n\t\tthis.currentPropName = name;\n\n\t}\n\n\tparse( text ) {\n\n\t\tthis.currentIndent = 0;\n\n\t\tthis.allNodes = new FBXTree();\n\t\tthis.nodeStack = [];\n\t\tthis.currentProp = [];\n\t\tthis.currentPropName = '';\n\n\t\tconst scope = this;\n\n\t\tconst split = text.split( /[\\r\\n]+/ );\n\n\t\tsplit.forEach( function ( line, i ) {\n\n\t\t\tconst matchComment = line.match( /^[\\s\\t]*;/ );\n\t\t\tconst matchEmpty = line.match( /^[\\s\\t]*$/ );\n\n\t\t\tif ( matchComment || matchEmpty ) return;\n\n\t\t\tconst matchBeginning = line.match( '^\\\\t{' + scope.currentIndent + '}(\\\\w+):(.*){', '' );\n\t\t\tconst matchProperty = line.match( '^\\\\t{' + ( scope.currentIndent ) + '}(\\\\w+):[\\\\s\\\\t\\\\r\\\\n](.*)' );\n\t\t\tconst matchEnd = line.match( '^\\\\t{' + ( scope.currentIndent - 1 ) + '}}' );\n\n\t\t\tif ( matchBeginning ) {\n\n\t\t\t\tscope.parseNodeBegin( line, matchBeginning );\n\n\t\t\t} else if ( matchProperty ) {\n\n\t\t\t\tscope.parseNodeProperty( line, matchProperty, split[ ++ i ] );\n\n\t\t\t} else if ( matchEnd ) {\n\n\t\t\t\tscope.popStack();\n\n\t\t\t} else if ( line.match( /^[^\\s\\t}]/ ) ) {\n\n\t\t\t\t// large arrays are split over multiple lines terminated with a ',' character\n\t\t\t\t// if this is encountered the line needs to be joined to the previous line\n\t\t\t\tscope.parseNodePropertyContinued( line );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn this.allNodes;\n\n\t}\n\n\tparseNodeBegin( line, property ) {\n\n\t\tconst nodeName = property[ 1 ].trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\tconst nodeAttrs = property[ 2 ].split( ',' ).map( function ( attr ) {\n\n\t\t\treturn attr.trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\t} );\n\n\t\tconst node = { name: nodeName };\n\t\tconst attrs = this.parseNodeAttr( nodeAttrs );\n\n\t\tconst currentNode = this.getCurrentNode();\n\n\t\t// a top node\n\t\tif ( this.currentIndent === 0 ) {\n\n\t\t\tthis.allNodes.add( nodeName, node );\n\n\t\t} else { // a subnode\n\n\t\t\t// if the subnode already exists, append it\n\t\t\tif ( nodeName in currentNode ) {\n\n\t\t\t\t// special case Pose needs PoseNodes as an array\n\t\t\t\tif ( nodeName === 'PoseNode' ) {\n\n\t\t\t\t\tcurrentNode.PoseNode.push( node );\n\n\t\t\t\t} else if ( currentNode[ nodeName ].id !== undefined ) {\n\n\t\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\t\tcurrentNode[ nodeName ][ currentNode[ nodeName ].id ] = currentNode[ nodeName ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( attrs.id !== '' ) currentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t} else if ( typeof attrs.id === 'number' ) {\n\n\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\tcurrentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t} else if ( nodeName !== 'Properties70' ) {\n\n\t\t\t\tif ( nodeName === 'PoseNode' )\tcurrentNode[ nodeName ] = [ node ];\n\t\t\t\telse currentNode[ nodeName ] = node;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( typeof attrs.id === 'number' ) node.id = attrs.id;\n\t\tif ( attrs.name !== '' ) node.attrName = attrs.name;\n\t\tif ( attrs.type !== '' ) node.attrType = attrs.type;\n\n\t\tthis.pushStack( node );\n\n\t}\n\n\tparseNodeAttr( attrs ) {\n\n\t\tlet id = attrs[ 0 ];\n\n\t\tif ( attrs[ 0 ] !== '' ) {\n\n\t\t\tid = parseInt( attrs[ 0 ] );\n\n\t\t\tif ( isNaN( id ) ) {\n\n\t\t\t\tid = attrs[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet name = '', type = '';\n\n\t\tif ( attrs.length > 1 ) {\n\n\t\t\tname = attrs[ 1 ].replace( /^(\\w+)::/, '' );\n\t\t\ttype = attrs[ 2 ];\n\n\t\t}\n\n\t\treturn { id: id, name: name, type: type };\n\n\t}\n\n\tparseNodeProperty( line, property, contentLine ) {\n\n\t\tlet propName = property[ 1 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\t\tlet propValue = property[ 2 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\n\t\t// for special case: base64 image data follows \"Content: ,\" line\n\t\t//\tContent: ,\n\t\t//\t \"/9j/4RDaRXhpZgAATU0A...\"\n\t\tif ( propName === 'Content' && propValue === ',' ) {\n\n\t\t\tpropValue = contentLine.replace( /\"/g, '' ).replace( /,$/, '' ).trim();\n\n\t\t}\n\n\t\tconst currentNode = this.getCurrentNode();\n\t\tconst parentName = currentNode.name;\n\n\t\tif ( parentName === 'Properties70' ) {\n\n\t\t\tthis.parseNodeSpecialProperty( line, propName, propValue );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Connections\n\t\tif ( propName === 'C' ) {\n\n\t\t\tconst connProps = propValue.split( ',' ).slice( 1 );\n\t\t\tconst from = parseInt( connProps[ 0 ] );\n\t\t\tconst to = parseInt( connProps[ 1 ] );\n\n\t\t\tlet rest = propValue.split( ',' ).slice( 3 );\n\n\t\t\trest = rest.map( function ( elem ) {\n\n\t\t\t\treturn elem.trim().replace( /^\"/, '' );\n\n\t\t\t} );\n\n\t\t\tpropName = 'connections';\n\t\t\tpropValue = [ from, to ];\n\t\t\tappend( propValue, rest );\n\n\t\t\tif ( currentNode[ propName ] === undefined ) {\n\n\t\t\t\tcurrentNode[ propName ] = [];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Node\n\t\tif ( propName === 'Node' ) currentNode.id = propValue;\n\n\t\t// connections\n\t\tif ( propName in currentNode && Array.isArray( currentNode[ propName ] ) ) {\n\n\t\t\tcurrentNode[ propName ].push( propValue );\n\n\t\t} else {\n\n\t\t\tif ( propName !== 'a' ) currentNode[ propName ] = propValue;\n\t\t\telse currentNode.a = propValue;\n\n\t\t}\n\n\t\tthis.setCurrentProp( currentNode, propName );\n\n\t\t// convert string to array, unless it ends in ',' in which case more will be added to it\n\t\tif ( propName === 'a' && propValue.slice( - 1 ) !== ',' ) {\n\n\t\t\tcurrentNode.a = parseNumberArray( propValue );\n\n\t\t}\n\n\t}\n\n\tparseNodePropertyContinued( line ) {\n\n\t\tconst currentNode = this.getCurrentNode();\n\n\t\tcurrentNode.a += line;\n\n\t\t// if the line doesn't end in ',' we have reached the end of the property value\n\t\t// so convert the string to an array\n\t\tif ( line.slice( - 1 ) !== ',' ) {\n\n\t\t\tcurrentNode.a = parseNumberArray( currentNode.a );\n\n\t\t}\n\n\t}\n\n\t// parse \"Property70\"\n\tparseNodeSpecialProperty( line, propName, propValue ) {\n\n\t\t// split this\n\t\t// P: \"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\",1,1,1\n\t\t// into array like below\n\t\t// [\"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\", \"1,1,1\" ]\n\t\tconst props = propValue.split( '\",' ).map( function ( prop ) {\n\n\t\t\treturn prop.trim().replace( /^\\\"/, '' ).replace( /\\s/, '_' );\n\n\t\t} );\n\n\t\tconst innerPropName = props[ 0 ];\n\t\tconst innerPropType1 = props[ 1 ];\n\t\tconst innerPropType2 = props[ 2 ];\n\t\tconst innerPropFlag = props[ 3 ];\n\t\tlet innerPropValue = props[ 4 ];\n\n\t\t// cast values where needed, otherwise leave as strings\n\t\tswitch ( innerPropType1 ) {\n\n\t\t\tcase 'int':\n\t\t\tcase 'enum':\n\t\t\tcase 'bool':\n\t\t\tcase 'ULongLong':\n\t\t\tcase 'double':\n\t\t\tcase 'Number':\n\t\t\tcase 'FieldOfView':\n\t\t\t\tinnerPropValue = parseFloat( innerPropValue );\n\t\t\t\tbreak;\n\n\t\t\tcase 'Color':\n\t\t\tcase 'ColorRGB':\n\t\t\tcase 'Vector3D':\n\t\t\tcase 'Lcl_Translation':\n\t\t\tcase 'Lcl_Rotation':\n\t\t\tcase 'Lcl_Scaling':\n\t\t\t\tinnerPropValue = parseNumberArray( innerPropValue );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// CAUTION: these props must append to parent's parent\n\t\tthis.getPrevNode()[ innerPropName ] = {\n\n\t\t\t'type': innerPropType1,\n\t\t\t'type2': innerPropType2,\n\t\t\t'flag': innerPropFlag,\n\t\t\t'value': innerPropValue\n\n\t\t};\n\n\t\tthis.setCurrentProp( this.getPrevNode(), innerPropName );\n\n\t}\n\n}\n\n// Parse an FBX file in Binary format\nclass BinaryParser {\n\n\tparse( buffer ) {\n\n\t\tconst reader = new BinaryReader( buffer );\n\t\treader.skip( 23 ); // skip magic 23 bytes\n\n\t\tconst version = reader.getUint32();\n\n\t\tif ( version < 6400 ) {\n\n\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + version );\n\n\t\t}\n\n\t\tconst allNodes = new FBXTree();\n\n\t\twhile ( ! this.endOfContent( reader ) ) {\n\n\t\t\tconst node = this.parseNode( reader, version );\n\t\t\tif ( node !== null ) allNodes.add( node.name, node );\n\n\t\t}\n\n\t\treturn allNodes;\n\n\t}\n\n\t// Check if reader has reached the end of content.\n\tendOfContent( reader ) {\n\n\t\t// footer size: 160bytes + 16-byte alignment padding\n\t\t// - 16bytes: magic\n\t\t// - padding til 16-byte alignment (at least 1byte?)\n\t\t//\t(seems like some exporters embed fixed 15 or 16bytes?)\n\t\t// - 4bytes: magic\n\t\t// - 4bytes: version\n\t\t// - 120bytes: zero\n\t\t// - 16bytes: magic\n\t\tif ( reader.size() % 16 === 0 ) {\n\n\t\t\treturn ( ( reader.getOffset() + 160 + 16 ) & ~ 0xf ) >= reader.size();\n\n\t\t} else {\n\n\t\t\treturn reader.getOffset() + 160 + 16 >= reader.size();\n\n\t\t}\n\n\t}\n\n\t// recursively parse nodes until the end of the file is reached\n\tparseNode( reader, version ) {\n\n\t\tconst node = {};\n\n\t\t// The first three data sizes depends on version.\n\t\tconst endOffset = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\t\tconst numProperties = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\n\t\t( version >= 7500 ) ? reader.getUint64() : reader.getUint32(); // the returned propertyListLen is not used\n\n\t\tconst nameLen = reader.getUint8();\n\t\tconst name = reader.getString( nameLen );\n\n\t\t// Regards this node as NULL-record if endOffset is zero\n\t\tif ( endOffset === 0 ) return null;\n\n\t\tconst propertyList = [];\n\n\t\tfor ( let i = 0; i < numProperties; i ++ ) {\n\n\t\t\tpropertyList.push( this.parseProperty( reader ) );\n\n\t\t}\n\n\t\t// Regards the first three elements in propertyList as id, attrName, and attrType\n\t\tconst id = propertyList.length > 0 ? propertyList[ 0 ] : '';\n\t\tconst attrName = propertyList.length > 1 ? propertyList[ 1 ] : '';\n\t\tconst attrType = propertyList.length > 2 ? propertyList[ 2 ] : '';\n\n\t\t// check if this node represents just a single property\n\t\t// like (name, 0) set or (name2, [0, 1, 2]) set of {name: 0, name2: [0, 1, 2]}\n\t\tnode.singleProperty = ( numProperties === 1 && reader.getOffset() === endOffset ) ? true : false;\n\n\t\twhile ( endOffset > reader.getOffset() ) {\n\n\t\t\tconst subNode = this.parseNode( reader, version );\n\n\t\t\tif ( subNode !== null ) this.parseSubNode( name, node, subNode );\n\n\t\t}\n\n\t\tnode.propertyList = propertyList; // raw property list used by parent\n\n\t\tif ( typeof id === 'number' ) node.id = id;\n\t\tif ( attrName !== '' ) node.attrName = attrName;\n\t\tif ( attrType !== '' ) node.attrType = attrType;\n\t\tif ( name !== '' ) node.name = name;\n\n\t\treturn node;\n\n\t}\n\n\tparseSubNode( name, node, subNode ) {\n\n\t\t// special case: child node is single property\n\t\tif ( subNode.singleProperty === true ) {\n\n\t\t\tconst value = subNode.propertyList[ 0 ];\n\n\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t\tsubNode.a = value;\n\n\t\t\t} else {\n\n\t\t\t\tnode[ subNode.name ] = value;\n\n\t\t\t}\n\n\t\t} else if ( name === 'Connections' && subNode.name === 'C' ) {\n\n\t\t\tconst array = [];\n\n\t\t\tsubNode.propertyList.forEach( function ( property, i ) {\n\n\t\t\t\t// first Connection is FBX type (OO, OP, etc.). We'll discard these\n\t\t\t\tif ( i !== 0 ) array.push( property );\n\n\t\t\t} );\n\n\t\t\tif ( node.connections === undefined ) {\n\n\t\t\t\tnode.connections = [];\n\n\t\t\t}\n\n\t\t\tnode.connections.push( array );\n\n\t\t} else if ( subNode.name === 'Properties70' ) {\n\n\t\t\tconst keys = Object.keys( subNode );\n\n\t\t\tkeys.forEach( function ( key ) {\n\n\t\t\t\tnode[ key ] = subNode[ key ];\n\n\t\t\t} );\n\n\t\t} else if ( name === 'Properties70' && subNode.name === 'P' ) {\n\n\t\t\tlet innerPropName = subNode.propertyList[ 0 ];\n\t\t\tlet innerPropType1 = subNode.propertyList[ 1 ];\n\t\t\tconst innerPropType2 = subNode.propertyList[ 2 ];\n\t\t\tconst innerPropFlag = subNode.propertyList[ 3 ];\n\t\t\tlet innerPropValue;\n\n\t\t\tif ( innerPropName.indexOf( 'Lcl ' ) === 0 ) innerPropName = innerPropName.replace( 'Lcl ', 'Lcl_' );\n\t\t\tif ( innerPropType1.indexOf( 'Lcl ' ) === 0 ) innerPropType1 = innerPropType1.replace( 'Lcl ', 'Lcl_' );\n\n\t\t\tif ( innerPropType1 === 'Color' || innerPropType1 === 'ColorRGB' || innerPropType1 === 'Vector' || innerPropType1 === 'Vector3D' || innerPropType1.indexOf( 'Lcl_' ) === 0 ) {\n\n\t\t\t\tinnerPropValue = [\n\t\t\t\t\tsubNode.propertyList[ 4 ],\n\t\t\t\t\tsubNode.propertyList[ 5 ],\n\t\t\t\t\tsubNode.propertyList[ 6 ]\n\t\t\t\t];\n\n\t\t\t} else {\n\n\t\t\t\tinnerPropValue = subNode.propertyList[ 4 ];\n\n\t\t\t}\n\n\t\t\t// this will be copied to parent, see above\n\t\t\tnode[ innerPropName ] = {\n\n\t\t\t\t'type': innerPropType1,\n\t\t\t\t'type2': innerPropType2,\n\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t'value': innerPropValue\n\n\t\t\t};\n\n\t\t} else if ( node[ subNode.name ] === undefined ) {\n\n\t\t\tif ( typeof subNode.id === 'number' ) {\n\n\t\t\t\tnode[ subNode.name ] = {};\n\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t} else {\n\n\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( subNode.name === 'PoseNode' ) {\n\n\t\t\t\tif ( ! Array.isArray( node[ subNode.name ] ) ) {\n\n\t\t\t\t\tnode[ subNode.name ] = [ node[ subNode.name ] ];\n\n\t\t\t\t}\n\n\t\t\t\tnode[ subNode.name ].push( subNode );\n\n\t\t\t} else if ( node[ subNode.name ][ subNode.id ] === undefined ) {\n\n\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tparseProperty( reader ) {\n\n\t\tconst type = reader.getString( 1 );\n\t\tlet length;\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 'C':\n\t\t\t\treturn reader.getBoolean();\n\n\t\t\tcase 'D':\n\t\t\t\treturn reader.getFloat64();\n\n\t\t\tcase 'F':\n\t\t\t\treturn reader.getFloat32();\n\n\t\t\tcase 'I':\n\t\t\t\treturn reader.getInt32();\n\n\t\t\tcase 'L':\n\t\t\t\treturn reader.getInt64();\n\n\t\t\tcase 'R':\n\t\t\t\tlength = reader.getUint32();\n\t\t\t\treturn reader.getArrayBuffer( length );\n\n\t\t\tcase 'S':\n\t\t\t\tlength = reader.getUint32();\n\t\t\t\treturn reader.getString( length );\n\n\t\t\tcase 'Y':\n\t\t\t\treturn reader.getInt16();\n\n\t\t\tcase 'b':\n\t\t\tcase 'c':\n\t\t\tcase 'd':\n\t\t\tcase 'f':\n\t\t\tcase 'i':\n\t\t\tcase 'l':\n\n\t\t\t\tconst arrayLength = reader.getUint32();\n\t\t\t\tconst encoding = reader.getUint32(); // 0: non-compressed, 1: compressed\n\t\t\t\tconst compressedLength = reader.getUint32();\n\n\t\t\t\tif ( encoding === 0 ) {\n\n\t\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\treturn reader.getBooleanArray( arrayLength );\n\n\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\treturn reader.getFloat64Array( arrayLength );\n\n\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\treturn reader.getFloat32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\treturn reader.getInt32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\treturn reader.getInt64Array( arrayLength );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst data = fflate.unzlibSync( new Uint8Array( reader.getArrayBuffer( compressedLength ) ) );\n\t\t\t\tconst reader2 = new BinaryReader( data.buffer );\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'b':\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\treturn reader2.getBooleanArray( arrayLength );\n\n\t\t\t\t\tcase 'd':\n\t\t\t\t\t\treturn reader2.getFloat64Array( arrayLength );\n\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\treturn reader2.getFloat32Array( arrayLength );\n\n\t\t\t\t\tcase 'i':\n\t\t\t\t\t\treturn reader2.getInt32Array( arrayLength );\n\n\t\t\t\t\tcase 'l':\n\t\t\t\t\t\treturn reader2.getInt64Array( arrayLength );\n\n\t\t\t\t}\n\n\t\t\t\tbreak; // cannot happen but is required by the DeepScan\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown property type ' + type );\n\n\t\t}\n\n\t}\n\n}\n\nclass BinaryReader {\n\n\tconstructor( buffer, littleEndian ) {\n\n\t\tthis.dv = new DataView( buffer );\n\t\tthis.offset = 0;\n\t\tthis.littleEndian = ( littleEndian !== undefined ) ? littleEndian : true;\n\t\tthis._textDecoder = new TextDecoder();\n\n\t}\n\n\tgetOffset() {\n\n\t\treturn this.offset;\n\n\t}\n\n\tsize() {\n\n\t\treturn this.dv.buffer.byteLength;\n\n\t}\n\n\tskip( length ) {\n\n\t\tthis.offset += length;\n\n\t}\n\n\t// seems like true/false representation depends on exporter.\n\t// true: 1 or 'Y'(=0x59), false: 0 or 'T'(=0x54)\n\t// then sees LSB.\n\tgetBoolean() {\n\n\t\treturn ( this.getUint8() & 1 ) === 1;\n\n\t}\n\n\tgetBooleanArray( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getBoolean() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetUint8() {\n\n\t\tconst value = this.dv.getUint8( this.offset );\n\t\tthis.offset += 1;\n\t\treturn value;\n\n\t}\n\n\tgetInt16() {\n\n\t\tconst value = this.dv.getInt16( this.offset, this.littleEndian );\n\t\tthis.offset += 2;\n\t\treturn value;\n\n\t}\n\n\tgetInt32() {\n\n\t\tconst value = this.dv.getInt32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t}\n\n\tgetInt32Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getInt32() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetUint32() {\n\n\t\tconst value = this.dv.getUint32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t}\n\n\t// JavaScript doesn't support 64-bit integer so calculate this here\n\t// 1 << 32 will return 1 so using multiply operation instead here.\n\t// There's a possibility that this method returns wrong value if the value\n\t// is out of the range between Number.MAX_SAFE_INTEGER and Number.MIN_SAFE_INTEGER.\n\t// TODO: safely handle 64-bit integer\n\tgetInt64() {\n\n\t\tlet low, high;\n\n\t\tif ( this.littleEndian ) {\n\n\t\t\tlow = this.getUint32();\n\t\t\thigh = this.getUint32();\n\n\t\t} else {\n\n\t\t\thigh = this.getUint32();\n\t\t\tlow = this.getUint32();\n\n\t\t}\n\n\t\t// calculate negative value\n\t\tif ( high & 0x80000000 ) {\n\n\t\t\thigh = ~ high & 0xFFFFFFFF;\n\t\t\tlow = ~ low & 0xFFFFFFFF;\n\n\t\t\tif ( low === 0xFFFFFFFF ) high = ( high + 1 ) & 0xFFFFFFFF;\n\n\t\t\tlow = ( low + 1 ) & 0xFFFFFFFF;\n\n\t\t\treturn - ( high * 0x100000000 + low );\n\n\t\t}\n\n\t\treturn high * 0x100000000 + low;\n\n\t}\n\n\tgetInt64Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getInt64() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\t// Note: see getInt64() comment\n\tgetUint64() {\n\n\t\tlet low, high;\n\n\t\tif ( this.littleEndian ) {\n\n\t\t\tlow = this.getUint32();\n\t\t\thigh = this.getUint32();\n\n\t\t} else {\n\n\t\t\thigh = this.getUint32();\n\t\t\tlow = this.getUint32();\n\n\t\t}\n\n\t\treturn high * 0x100000000 + low;\n\n\t}\n\n\tgetFloat32() {\n\n\t\tconst value = this.dv.getFloat32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t}\n\n\tgetFloat32Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getFloat32() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetFloat64() {\n\n\t\tconst value = this.dv.getFloat64( this.offset, this.littleEndian );\n\t\tthis.offset += 8;\n\t\treturn value;\n\n\t}\n\n\tgetFloat64Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getFloat64() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetArrayBuffer( size ) {\n\n\t\tconst value = this.dv.buffer.slice( this.offset, this.offset + size );\n\t\tthis.offset += size;\n\t\treturn value;\n\n\t}\n\n\tgetString( size ) {\n\n\t\tconst start = this.offset;\n\t\tlet a = new Uint8Array( this.dv.buffer, start, size );\n\n\t\tthis.skip( size );\n\n\t\tconst nullByte = a.indexOf( 0 );\n\t\tif ( nullByte >= 0 ) a = new Uint8Array( this.dv.buffer, start, nullByte );\n\n\t\treturn this._textDecoder.decode( a );\n\n\t}\n\n}\n\n// FBXTree holds a representation of the FBX data, returned by the TextParser ( FBX ASCII format)\n// and BinaryParser( FBX Binary format)\nclass FBXTree {\n\n\tadd( key, val ) {\n\n\t\tthis[ key ] = val;\n\n\t}\n\n}\n\n// ************** UTILITY FUNCTIONS **************\n\nfunction isFbxFormatBinary( buffer ) {\n\n\tconst CORRECT = 'Kaydara\\u0020FBX\\u0020Binary\\u0020\\u0020\\0';\n\n\treturn buffer.byteLength >= CORRECT.length && CORRECT === convertArrayBufferToString( buffer, 0, CORRECT.length );\n\n}\n\nfunction isFbxFormatASCII( text ) {\n\n\tconst CORRECT = [ 'K', 'a', 'y', 'd', 'a', 'r', 'a', '\\\\', 'F', 'B', 'X', '\\\\', 'B', 'i', 'n', 'a', 'r', 'y', '\\\\', '\\\\' ];\n\n\tlet cursor = 0;\n\n\tfunction read( offset ) {\n\n\t\tconst result = text[ offset - 1 ];\n\t\ttext = text.slice( cursor + offset );\n\t\tcursor ++;\n\t\treturn result;\n\n\t}\n\n\tfor ( let i = 0; i < CORRECT.length; ++ i ) {\n\n\t\tconst num = read( 1 );\n\t\tif ( num === CORRECT[ i ] ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nfunction getFbxVersion( text ) {\n\n\tconst versionRegExp = /FBXVersion: (\\d+)/;\n\tconst match = text.match( versionRegExp );\n\n\tif ( match ) {\n\n\t\tconst version = parseInt( match[ 1 ] );\n\t\treturn version;\n\n\t}\n\n\tthrow new Error( 'THREE.FBXLoader: Cannot find the version number for the file given.' );\n\n}\n\n// Converts FBX ticks into real time seconds.\nfunction convertFBXTimeToSeconds( time ) {\n\n\treturn time / 46186158000;\n\n}\n\nconst dataArray = [];\n\n// extracts the data from the correct position in the FBX array based on indexing type\nfunction getData( polygonVertexIndex, polygonIndex, vertexIndex, infoObject ) {\n\n\tlet index;\n\n\tswitch ( infoObject.mappingType ) {\n\n\t\tcase 'ByPolygonVertex' :\n\t\t\tindex = polygonVertexIndex;\n\t\t\tbreak;\n\t\tcase 'ByPolygon' :\n\t\t\tindex = polygonIndex;\n\t\t\tbreak;\n\t\tcase 'ByVertice' :\n\t\t\tindex = vertexIndex;\n\t\t\tbreak;\n\t\tcase 'AllSame' :\n\t\t\tindex = infoObject.indices[ 0 ];\n\t\t\tbreak;\n\t\tdefault :\n\t\t\tconsole.warn( 'THREE.FBXLoader: unknown attribute mapping type ' + infoObject.mappingType );\n\n\t}\n\n\tif ( infoObject.referenceType === 'IndexToDirect' ) index = infoObject.indices[ index ];\n\n\tconst from = index * infoObject.dataSize;\n\tconst to = from + infoObject.dataSize;\n\n\treturn slice( dataArray, infoObject.buffer, from, to );\n\n}\n\nconst tempEuler = new Euler();\nconst tempVec = new Vector3();\n\n// generate transformation from FBX transform data\n// ref: https://help.autodesk.com/view/FBX/2017/ENU/?guid=__files_GUID_10CDD63C_79C1_4F2D_BB28_AD2BE65A02ED_htm\n// ref: http://docs.autodesk.com/FBX/2014/ENU/FBX-SDK-Documentation/index.html?url=cpp_ref/_transformations_2main_8cxx-example.html,topicNumber=cpp_ref__transformations_2main_8cxx_example_htmlfc10a1e1-b18d-4e72-9dc0-70d0f1959f5e\nfunction generateTransform( transformData ) {\n\n\tconst lTranslationM = new Matrix4();\n\tconst lPreRotationM = new Matrix4();\n\tconst lRotationM = new Matrix4();\n\tconst lPostRotationM = new Matrix4();\n\n\tconst lScalingM = new Matrix4();\n\tconst lScalingPivotM = new Matrix4();\n\tconst lScalingOffsetM = new Matrix4();\n\tconst lRotationOffsetM = new Matrix4();\n\tconst lRotationPivotM = new Matrix4();\n\n\tconst lParentGX = new Matrix4();\n\tconst lParentLX = new Matrix4();\n\tconst lGlobalT = new Matrix4();\n\n\tconst inheritType = ( transformData.inheritType ) ? transformData.inheritType : 0;\n\n\tif ( transformData.translation ) lTranslationM.setPosition( tempVec.fromArray( transformData.translation ) );\n\n\tif ( transformData.preRotation ) {\n\n\t\tconst array = transformData.preRotation.map( MathUtils.degToRad );\n\t\tarray.push( transformData.eulerOrder || Euler.DEFAULT_ORDER );\n\t\tlPreRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t}\n\n\tif ( transformData.rotation ) {\n\n\t\tconst array = transformData.rotation.map( MathUtils.degToRad );\n\t\tarray.push( transformData.eulerOrder || Euler.DEFAULT_ORDER );\n\t\tlRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t}\n\n\tif ( transformData.postRotation ) {\n\n\t\tconst array = transformData.postRotation.map( MathUtils.degToRad );\n\t\tarray.push( transformData.eulerOrder || Euler.DEFAULT_ORDER );\n\t\tlPostRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\t\tlPostRotationM.invert();\n\n\t}\n\n\tif ( transformData.scale ) lScalingM.scale( tempVec.fromArray( transformData.scale ) );\n\n\t// Pivots and offsets\n\tif ( transformData.scalingOffset ) lScalingOffsetM.setPosition( tempVec.fromArray( transformData.scalingOffset ) );\n\tif ( transformData.scalingPivot ) lScalingPivotM.setPosition( tempVec.fromArray( transformData.scalingPivot ) );\n\tif ( transformData.rotationOffset ) lRotationOffsetM.setPosition( tempVec.fromArray( transformData.rotationOffset ) );\n\tif ( transformData.rotationPivot ) lRotationPivotM.setPosition( tempVec.fromArray( transformData.rotationPivot ) );\n\n\t// parent transform\n\tif ( transformData.parentMatrixWorld ) {\n\n\t\tlParentLX.copy( transformData.parentMatrix );\n\t\tlParentGX.copy( transformData.parentMatrixWorld );\n\n\t}\n\n\tconst lLRM = lPreRotationM.clone().multiply( lRotationM ).multiply( lPostRotationM );\n\t// Global Rotation\n\tconst lParentGRM = new Matrix4();\n\tlParentGRM.extractRotation( lParentGX );\n\n\t// Global Shear*Scaling\n\tconst lParentTM = new Matrix4();\n\tlParentTM.copyPosition( lParentGX );\n\n\tconst lParentGRSM = lParentTM.clone().invert().multiply( lParentGX );\n\tconst lParentGSM = lParentGRM.clone().invert().multiply( lParentGRSM );\n\tconst lLSM = lScalingM;\n\n\tconst lGlobalRS = new Matrix4();\n\n\tif ( inheritType === 0 ) {\n\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM ).multiply( lLSM );\n\n\t} else if ( inheritType === 1 ) {\n\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lParentGSM ).multiply( lLRM ).multiply( lLSM );\n\n\t} else {\n\n\t\tconst lParentLSM = new Matrix4().scale( new Vector3().setFromMatrixScale( lParentLX ) );\n\t\tconst lParentLSM_inv = lParentLSM.clone().invert();\n\t\tconst lParentGSM_noLocal = lParentGSM.clone().multiply( lParentLSM_inv );\n\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM_noLocal ).multiply( lLSM );\n\n\t}\n\n\tconst lRotationPivotM_inv = lRotationPivotM.clone().invert();\n\tconst lScalingPivotM_inv = lScalingPivotM.clone().invert();\n\t// Calculate the local transform matrix\n\tlet lTransform = lTranslationM.clone().multiply( lRotationOffsetM ).multiply( lRotationPivotM ).multiply( lPreRotationM ).multiply( lRotationM ).multiply( lPostRotationM ).multiply( lRotationPivotM_inv ).multiply( lScalingOffsetM ).multiply( lScalingPivotM ).multiply( lScalingM ).multiply( lScalingPivotM_inv );\n\n\tconst lLocalTWithAllPivotAndOffsetInfo = new Matrix4().copyPosition( lTransform );\n\n\tconst lGlobalTranslation = lParentGX.clone().multiply( lLocalTWithAllPivotAndOffsetInfo );\n\tlGlobalT.copyPosition( lGlobalTranslation );\n\n\tlTransform = lGlobalT.clone().multiply( lGlobalRS );\n\n\t// from global to local\n\tlTransform.premultiply( lParentGX.invert() );\n\n\treturn lTransform;\n\n}\n\n// Returns the three.js intrinsic Euler order corresponding to FBX extrinsic Euler order\n// ref: http://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_class_fbx_euler_html\nfunction getEulerOrder( order ) {\n\n\torder = order || 0;\n\n\tconst enums = [\n\t\t'ZYX', // -> XYZ extrinsic\n\t\t'YZX', // -> XZY extrinsic\n\t\t'XZY', // -> YZX extrinsic\n\t\t'ZXY', // -> YXZ extrinsic\n\t\t'YXZ', // -> ZXY extrinsic\n\t\t'XYZ', // -> ZYX extrinsic\n\t\t//'SphericXYZ', // not possible to support\n\t];\n\n\tif ( order === 6 ) {\n\n\t\tconsole.warn( 'THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect.' );\n\t\treturn enums[ 0 ];\n\n\t}\n\n\treturn enums[ order ];\n\n}\n\n// Parses comma separated list of numbers and returns them an array.\n// Used internally by the TextParser\nfunction parseNumberArray( value ) {\n\n\tconst array = value.split( ',' ).map( function ( val ) {\n\n\t\treturn parseFloat( val );\n\n\t} );\n\n\treturn array;\n\n}\n\nfunction convertArrayBufferToString( buffer, from, to ) {\n\n\tif ( from === undefined ) from = 0;\n\tif ( to === undefined ) to = buffer.byteLength;\n\n\treturn new TextDecoder().decode( new Uint8Array( buffer, from, to ) );\n\n}\n\nfunction append( a, b ) {\n\n\tfor ( let i = 0, j = a.length, l = b.length; i < l; i ++, j ++ ) {\n\n\t\ta[ j ] = b[ i ];\n\n\t}\n\n}\n\nfunction slice( a, b, from, to ) {\n\n\tfor ( let i = from, j = 0; i < to; i ++, j ++ ) {\n\n\t\ta[ j ] = b[ i ];\n\n\t}\n\n\treturn a;\n\n}\n\n\nexport { FBXLoader };\n", "import { FBXLoader } from 'three/addons/loaders/FBXLoader.js';\nTHREE.FBXLoader = FBXLoader;\n\n/**\n * fbx-model\n *\n * Loader for FBX format.\n */\nAFRAME.registerComponent('fbx-model', {\n  schema: {\n    src:         { type: 'asset' },\n    crossorigin: { default: '' }\n  },\n\n  init: function () {\n    this.model = null;\n  },\n\n  update: function () {\n    const data = this.data;\n    if (!data.src) return;\n\n    this.remove();\n    const loader = new THREE.FBXLoader();\n    if (data.crossorigin) loader.setCrossOrigin(data.crossorigin);\n    loader.load(data.src, this.load.bind(this));\n  },\n\n  load: function (model) {\n    this.model = model;\n    this.el.setObject3D('mesh', model);\n    this.el.emit('model-loaded', {format: 'fbx', model: model});\n  },\n\n  remove: function () {\n    if (this.model) this.el.removeObject3D('mesh');\n  }\n});\n", "/**\n * Source: https://github.com/Adobe-Marketing-Cloud/fetch-script\n */\n\nfunction getScriptId() {\n  return 'script_' + Date.now() + '_' + Math.ceil(Math.random() * 100000);\n}\n\nfunction createScript(url, id) {\n  var script = document.createElement('script');\n  script.type = 'text/javascript';\n  script.async = true;\n  script.id = id;\n  script.src = url;\n\n  return script;\n}\n\nfunction removeScript(id) {\n  const script = document.getElementById(id);\n  const parent = script.parentNode;\n\n  try {\n    parent && parent.removeChild(script);\n  } catch (e) {\n    // ignore\n  }\n}\n\nfunction appendScript(script) {\n  const firstScript = document.getElementsByTagName('script')[0];\n  firstScript.parentNode.insertBefore(script, firstScript);\n}\n\nfunction fetchScriptInternal(url, options, Promise) {\n  return new Promise(function(resolve, reject) {\n    const timeout = options.timeout || 5000;\n    const scriptId = getScriptId();\n    const script = createScript(url, scriptId);\n\n    const timeoutId = setTimeout(function() {\n      reject(new Error('Script request to ' + url + ' timed out'));\n\n      removeScript(scriptId);\n    }, timeout);\n\n    const disableTimeout = function(timeoutId) { clearTimeout(timeoutId); };\n\n    script.addEventListener('load', function(e) {\n      resolve({ok: true});\n\n      disableTimeout(timeoutId);\n      removeScript(scriptId);\n    });\n\n    script.addEventListener('error', function(e) {\n      reject(new Error('Script request to ' + url + ' failed ' + e));\n\n      disableTimeout(timeoutId);\n      removeScript(scriptId);\n    });\n\n    appendScript(script);\n  });\n}\n\nfunction fetchScript(settings) {\n  settings = settings || {};\n  return function (url, options) {\n    options = options || {};\n    return fetchScriptInternal(url, options, settings.Promise || Promise);\n  };\n}\n\nmodule.exports = fetchScript;\n", "const fetchScript = require('../../lib/fetch-script')();\n\nconst LOADER_SRC = 'https://cdn.jsdelivr.net/gh/mrdoob/three.js@r86/examples/js/loaders/GLTFLoader.js';\n\nconst loadLoader = (function () {\n  let promise;\n  return function () {\n    promise = promise || fetchScript(LOADER_SRC);\n    return promise;\n  };\n}());\n\n/**\n * Legacy loader for glTF 1.0 models.\n * Asynchronously loads THREE.GLTFLoader from jsdelivr.\n */\nmodule.exports = AFRAME.registerComponent('gltf-model-legacy', {\n  schema: {type: 'model'},\n\n  init: function () {\n    this.model = null;\n    this.loader = null;\n    this.loaderPromise = loadLoader().then(() => {\n      this.loader = new THREE.GLTFLoader();\n      this.loader.setCrossOrigin('Anonymous');\n    });\n  },\n\n  update: function () {\n    const self = this;\n    const el = this.el;\n    const src = this.data;\n\n    if (!src) { return; }\n\n    this.remove();\n\n    this.loaderPromise.then(() => {\n      this.loader.load(src, function gltfLoaded (gltfModel) {\n        self.model = gltfModel.scene;\n        self.model.animations = gltfModel.animations;\n        el.setObject3D('mesh', self.model);\n        el.emit('model-loaded', {format: 'gltf', model: self.model});\n      });\n    });\n  },\n\n  remove: function () {\n    if (!this.model) { return; }\n    this.el.removeObject3D('mesh');\n  }\n});\n", "/**\n * object-model\n *\n * Loader for THREE.js JSON format. Somewhat confusingly, there are two different THREE.js formats,\n * both having the .json extension. This loader supports only THREE.ObjectLoader, which typically\n * includes multiple meshes or an entire scene.\n *\n * Check the console for errors, if in doubt. You may need to use `json-model` or\n * `blend-character-model` for some .js and .json files.\n *\n * See: https://clara.io/learn/user-guide/data_exchange/threejs_export\n */\nmodule.exports = AFRAME.registerComponent('object-model', {\n  schema: {\n    src:         { type: 'asset' },\n    crossorigin: { default: '' }\n  },\n\n  init: function () {\n    this.model = null;\n  },\n\n  update: function () {\n    let loader;\n    const data = this.data;\n    if (!data.src) return;\n\n    this.remove();\n    loader = new THREE.ObjectLoader();\n    if (data.crossorigin) loader.setCrossOrigin(data.crossorigin);\n    loader.load(data.src, (object) => {\n\n      // Enable skinning, if applicable.\n      object.traverse((o) => {\n        if (o instanceof THREE.SkinnedMesh && o.material) {\n          o.material.skinning = !!((o.geometry && o.geometry.bones) || []).length;\n        }\n      });\n\n      this.load(object);\n    });\n  },\n\n  load: function (model) {\n    this.model = model;\n    this.el.setObject3D('mesh', model);\n    this.el.emit('model-loaded', {format: 'json', model: model});\n  },\n\n  remove: function () {\n    if (this.model) this.el.removeObject3D('mesh');\n  }\n});\n", "require('./animation-mixer');\nrequire('./collada-model-legacy');\nrequire('./fbx-model');\nrequire('./gltf-model-legacy');\nrequire('./object-model');\n", "module.exports = AFRAME.registerComponent('checkpoint', {\n  schema: {\n    offset: {default: {x: 0, y: 0, z: 0}, type: 'vec3'}\n  },\n\n  init: function () {\n    this.active = false;\n    this.targetEl = null;\n    this.fire = this.fire.bind(this);\n    this.offset = new THREE.Vector3();\n  },\n\n  update: function () {\n    this.offset.copy(this.data.offset);\n  },\n\n  play: function () { this.el.addEventListener('click', this.fire); },\n  pause: function () { this.el.removeEventListener('click', this.fire); },\n  remove: function () { this.pause(); },\n\n  fire: function () {\n    const targetEl = this.el.sceneEl.querySelector('[checkpoint-controls]');\n    if (!targetEl) {\n      throw new Error('No `checkpoint-controls` component found.');\n    }\n    targetEl.components['checkpoint-controls'].setCheckpoint(this.el);\n  },\n\n  getOffset: function () {\n    return this.offset.copy(this.data.offset);\n  }\n});\n", "/**\n * @param  {Array<THREE.Material>|THREE.Material} material\n * @return {Array<THREE.Material>}\n */\nfunction ensureMaterialArray (material) {\n  if (!material) {\n    return [];\n  } else if (Array.isArray(material)) {\n    return material;\n  } else if (material.materials) {\n    return material.materials;\n  } else {\n    return [material];\n  }\n}\n\n/**\n * @param  {THREE.Object3D} mesh\n * @param  {Array<string>} materialNames\n * @param  {THREE.Texture} envMap\n * @param  {number} reflectivity  [description]\n */\nfunction applyEnvMap (mesh, materialNames, envMap, reflectivity) {\n  if (!mesh) return;\n\n  materialNames = materialNames || [];\n\n  mesh.traverse((node) => {\n\n    if (!node.isMesh) return;\n\n    const meshMaterials = ensureMaterialArray(node.material);\n\n    meshMaterials.forEach((material) => {\n\n      if (material && !('envMap' in material)) return;\n      if (materialNames.length && materialNames.indexOf(material.name) === -1) return;\n\n      material.envMap = envMap;\n      material.reflectivity = reflectivity;\n      material.needsUpdate = true;\n\n    });\n\n  });\n}\n\n/**\n * Specifies an envMap on an entity, without replacing any existing material\n * properties.\n */\nmodule.exports = AFRAME.registerComponent('cube-env-map', {\n  multiple: true,\n\n  schema: {\n    path: {default: ''},\n    extension: {default: 'jpg', oneOf: ['jpg', 'png']},\n    enableBackground: {default: false},\n    reflectivity: {default: 1, min: 0, max: 1},\n    materials: {default: []}\n  },\n\n  init: function () {\n    const data = this.data;\n\n    this.texture = new THREE.CubeTextureLoader().load([\n      data.path + 'posx.' + data.extension, data.path + 'negx.' + data.extension,\n      data.path + 'posy.' + data.extension, data.path + 'negy.' + data.extension,\n      data.path + 'posz.' + data.extension, data.path + 'negz.' + data.extension\n    ]);\n    this.texture.format = THREE.RGBAFormat;\n\n    this.object3dsetHandler = () => {\n      const mesh = this.el.getObject3D('mesh');\n      const data = this.data;\n      applyEnvMap(mesh, data.materials, this.texture, data.reflectivity);\n    };\n\n    this.object3dsetHandler();\n    this.el.addEventListener('object3dset', this.object3dsetHandler);\n    \n  },\n\n  update: function (oldData) {\n    const data = this.data;\n    const mesh = this.el.getObject3D('mesh');\n\n    let addedMaterialNames = [];\n    let removedMaterialNames = [];\n\n    if (data.materials.length) {\n      if (oldData.materials) {\n        addedMaterialNames = data.materials.filter((name) => !oldData.materials.includes(name));\n        removedMaterialNames = oldData.materials.filter((name) => !data.materials.includes(name));\n      } else {\n        addedMaterialNames = data.materials;\n      }\n    }\n    if (addedMaterialNames.length) {\n      applyEnvMap(mesh, addedMaterialNames, this.texture, data.reflectivity);\n    }\n    if (removedMaterialNames.length) {\n      applyEnvMap(mesh, removedMaterialNames, null, 1);\n    }\n\n    if (oldData.materials && data.reflectivity !== oldData.reflectivity) {\n      const maintainedMaterialNames = data.materials\n        .filter((name) => oldData.materials.includes(name));\n      if (maintainedMaterialNames.length) {\n        applyEnvMap(mesh, maintainedMaterialNames, this.texture, data.reflectivity);\n      }\n    }\n\n    if (this.data.enableBackground && !oldData.enableBackground) {\n      this.setBackground(this.texture);\n    } else if (!this.data.enableBackground && oldData.enableBackground) {\n      this.setBackground(null);\n    }\n  },\n\n  remove: function () {\n    this.el.removeEventListener('object3dset', this.object3dsetHandler);\n    const mesh = this.el.getObject3D('mesh');\n    const data = this.data;\n\n    applyEnvMap(mesh, data.materials, null, 1);\n    if (data.enableBackground) this.setBackground(null);\n  },\n\n  setBackground: function (texture) {\n    this.el.sceneEl.object3D.background = texture;\n  }\n});", "/* global CANNON */\n\n/**\n * Based on aframe/examples/showcase/tracked-controls.\n *\n * Handles events coming from the hand-controls.\n * Determines if the entity is grabbed or released.\n * Updates its position to move along the controller.\n */\nmodule.exports = AFRAME.registerComponent('grab', {\n  init: function () {\n    this.system = this.el.sceneEl.systems.physics;\n\n    this.GRABBED_STATE = 'grabbed';\n\n    this.grabbing = false;\n    this.hitEl =      /** @type {AFRAME.Element}    */ null;\n    this.physics =    /** @type {AFRAME.System}     */ this.el.sceneEl.systems.physics;\n    this.constraint = /** @type {CANNON.Constraint} */ null;\n\n    // Bind event handlers\n    this.onHit = this.onHit.bind(this);\n    this.onGripOpen = this.onGripOpen.bind(this);\n    this.onGripClose = this.onGripClose.bind(this);\n  },\n\n  play: function () {\n    const el = this.el;\n    el.addEventListener('hit', this.onHit);\n    el.addEventListener('gripdown', this.onGripClose);\n    el.addEventListener('gripup', this.onGripOpen);\n    el.addEventListener('trackpaddown', this.onGripClose);\n    el.addEventListener('trackpadup', this.onGripOpen);\n    el.addEventListener('triggerdown', this.onGripClose);\n    el.addEventListener('triggerup', this.onGripOpen);\n  },\n\n  pause: function () {\n    const el = this.el;\n    el.removeEventListener('hit', this.onHit);\n    el.removeEventListener('gripdown', this.onGripClose);\n    el.removeEventListener('gripup', this.onGripOpen);\n    el.removeEventListener('trackpaddown', this.onGripClose);\n    el.removeEventListener('trackpadup', this.onGripOpen);\n    el.removeEventListener('triggerdown', this.onGripClose);\n    el.removeEventListener('triggerup', this.onGripOpen);\n  },\n\n  onGripClose: function () {\n    this.grabbing = true;\n  },\n\n  onGripOpen: function () {\n    const hitEl = this.hitEl;\n    this.grabbing = false;\n    if (!hitEl) { return; }\n    hitEl.removeState(this.GRABBED_STATE);\n    this.hitEl = undefined;\n    this.system.removeConstraint(this.constraint);\n    this.constraint = null;\n  },\n\n  onHit: function (evt) {\n    const hitEl = evt.detail.el;\n    // If the element is already grabbed (it could be grabbed by another controller).\n    // If the hand is not grabbing the element does not stick.\n    // If we're already grabbing something you can't grab again.\n    if (hitEl.is(this.GRABBED_STATE) || !this.grabbing || this.hitEl) { return; }\n    hitEl.addState(this.GRABBED_STATE);\n    this.hitEl = hitEl;\n    this.constraint = new CANNON.LockConstraint(this.el.body, hitEl.body);\n    this.system.addConstraint(this.constraint);\n  }\n});\n", "/**\n * Recursively applies a MeshNormalMaterial to the entity, such that\n * face colors are determined by their orientation. Helpful for\n * debugging geometry\n */\nmodule.exports = AFRAME.registerComponent('normal-material', {\n  init: function () {\n    this.material = new THREE.MeshNormalMaterial({flatShading: true});\n    this.applyMaterial = this.applyMaterial.bind(this);\n    this.el.addEventListener('object3dset', this.applyMaterial);\n    this.applyMaterial();\n  },\n\n  remove: function () {\n    this.el.removeEventListener('object3dset', this.applyMaterial);\n  },\n\n  applyMaterial: function () {\n    this.el.object3D.traverse((node) => {\n      if (node.isMesh) node.material = this.material;\n    });\n  }\n});\n", "/**\n * Based on aframe/examples/showcase/tracked-controls.\n *\n * Implement bounding sphere collision detection for entities with a mesh.\n * Sets the specified state on the intersected entities.\n *\n * @property {string} objects - Selector of the entities to test for collision.\n * @property {string} state - State to set on collided entities.\n *\n */\nmodule.exports = AFRAME.registerComponent('sphere-collider', {\n  schema: {\n    enabled: {default: true},\n    interval: {default: 80},\n    objects: {default: ''},\n    state: {default: 'collided'},\n    radius: {default: 0.05},\n    watch: {default: true}\n  },\n\n  init: function () {\n    /** @type {MutationObserver} */\n    this.observer = null;\n    /** @type {Array<Element>} Elements to watch for collisions. */\n    this.els = [];\n    /** @type {Array<Element>} Elements currently in collision state. */\n    this.collisions = [];\n    this.prevCheckTime = undefined;\n\n    this.eventDetail = {};\n    this.handleHit = this.handleHit.bind(this);\n    this.handleHitEnd = this.handleHitEnd.bind(this);\n  },\n\n  play: function () {\n    const sceneEl = this.el.sceneEl;\n\n    if (this.data.watch) {\n      this.observer = new MutationObserver(this.update.bind(this, null));\n      this.observer.observe(sceneEl, {childList: true, subtree: true});\n    }\n  },\n\n  pause: function () {\n    if (this.observer) {\n      this.observer.disconnect();\n      this.observer = null;\n    }\n  },\n\n  /**\n   * Update list of entities to test for collision.\n   */\n  update: function () {\n    const data = this.data;\n    let objectEls;\n\n    // Push entities into list of els to intersect.\n    if (data.objects) {\n      objectEls = this.el.sceneEl.querySelectorAll(data.objects);\n    } else {\n      // If objects not defined, intersect with everything.\n      objectEls = this.el.sceneEl.children;\n    }\n    // Convert from NodeList to Array\n    this.els = Array.prototype.slice.call(objectEls);\n  },\n\n  tick: (function () {\n    const position = new THREE.Vector3(),\n        meshPosition = new THREE.Vector3(),\n        colliderScale = new THREE.Vector3(),\n        size = new THREE.Vector3(),\n        box = new THREE.Box3(),\n        collisions = [],\n        distanceMap = new Map();\n    return function (time) {\n      if (!this.data.enabled) { return; }\n\n      // Only check for intersection if interval time has passed.\n      const prevCheckTime = this.prevCheckTime;\n      if (prevCheckTime && (time - prevCheckTime < this.data.interval)) { return; }\n      // Update check time.\n      this.prevCheckTime = time;\n\n      const el = this.el,\n          data = this.data,\n          mesh = el.getObject3D('mesh');\n      let colliderRadius;\n\n      if (!mesh) { return; }\n\n      collisions.length = 0;\n      distanceMap.clear();\n      el.object3D.getWorldPosition(position);\n      el.object3D.getWorldScale(colliderScale);\n      colliderRadius = data.radius * scaleFactor(colliderScale);\n      // Update collision list.\n      this.els.forEach(intersect);\n\n      // Emit events and add collision states, in order of distance.\n      collisions\n        .sort((a, b) => distanceMap.get(a) > distanceMap.get(b) ? 1 : -1)\n        .forEach(this.handleHit);\n\n      // Remove collision state from other elements.\n      this.collisions\n        .filter((el) => !distanceMap.has(el))\n        .forEach(this.handleHitEnd);\n\n      // Store new collisions\n      copyArray(this.collisions, collisions);\n\n      // Bounding sphere collision detection\n      function intersect (el) {\n        let radius, mesh, distance, extent;\n\n        if (!el.isEntity) { return; }\n\n        mesh = el.getObject3D('mesh');\n\n        if (!mesh) { return; }\n\n        box.setFromObject(mesh).getSize(size);\n        extent = Math.max(size.x, size.y, size.z) / 2;\n        radius = Math.sqrt(2 * extent * extent);\n        box.getCenter(meshPosition);\n\n        if (!radius) { return; }\n\n        distance = position.distanceTo(meshPosition);\n        if (distance < radius + colliderRadius) {\n          collisions.push(el);\n          distanceMap.set(el, distance);\n        }\n      }\n      // use max of scale factors to maintain bounding sphere collision\n      function scaleFactor (scaleVec) {\n        return Math.max(scaleVec.x, scaleVec.y, scaleVec.z);\n      }\n    };\n  })(),\n\n  handleHit: function (targetEl) {\n    targetEl.emit('hit');\n    targetEl.addState(this.data.state);\n    this.eventDetail.el = targetEl;\n    this.el.emit('hit', this.eventDetail);\n  },\n  handleHitEnd: function (targetEl) {\n    targetEl.emit('hitend');\n    targetEl.removeState(this.data.state);\n    this.eventDetail.el = targetEl;\n    this.el.emit('hitend', this.eventDetail);\n  }\n});\n\nfunction copyArray (dest, source) {\n  dest.length = 0;\n  for (let i = 0; i < source.length; i++) { dest[i] = source[i]; }\n}\n", "require('./checkpoint');\nrequire('./cube-env-map');\nrequire('./grab');\nrequire('./normal-material');\nrequire('./sphere-collider');\n", "/**\n * nav-mesh\n *\n * Waits for a mesh to be loaded on the current entity, then sets it as the\n * nav mesh in the pathfinding system.\n */\nmodule.exports = AFRAME.registerComponent('nav-mesh', {\n  schema: {\n    nodeName: {type: 'string'}\n  },\n\n  init: function () {\n    this.system = this.el.sceneEl.systems.nav;\n    this.hasLoadedNavMesh = false;\n    this.nodeName = this.data.nodeName;\n    this.el.addEventListener('object3dset', this.loadNavMesh.bind(this));\n  },\n\n  play: function () {\n    if (!this.hasLoadedNavMesh) this.loadNavMesh();\n  },\n\n  loadNavMesh: function () {\n    var self = this;\n    const object = this.el.getObject3D('mesh');\n    const scene = this.el.sceneEl.object3D;\n\n    if (!object) return;\n\n    let navMesh;\n    object.traverse((node) => {\n      if (node.isMesh &&\n          (!self.nodeName || node.name === self.nodeName)) navMesh = node;\n    });\n\n    if (!navMesh) return;\n\n    const navMeshGeometry = navMesh.geometry.clone();\n    navMesh.updateWorldMatrix(true, false);\n    navMeshGeometry.applyMatrix4(navMesh.matrixWorld);\n    this.system.setNavMeshGeometry(navMeshGeometry);\n    this.hasLoadedNavMesh = true;\n  }\n});\n", "module.exports = AFRAME.registerComponent('nav-agent', {\n  schema: {\n    destination: {type: 'vec3'},\n    active: {default: false},\n    speed: {default: 2}\n  },\n  init: function () {\n    this.system = this.el.sceneEl.systems.nav;\n    this.system.addAgent(this);\n    this.group = null;\n    this.path = [];\n    this.raycaster = new THREE.Raycaster();\n  },\n  remove: function () {\n    this.system.removeAgent(this);\n  },\n  update: function () {\n    this.path.length = 0;\n  },\n  updateNavLocation: function () {\n    this.group = null;\n    this.path = [];\n  },\n  tick: (function () {\n    const vDest = new THREE.Vector3();\n    const vDelta = new THREE.Vector3();\n    const vNext = new THREE.Vector3();\n\n    return function (t, dt) {\n      const el = this.el;\n      const data = this.data;\n      const raycaster = this.raycaster;\n      const speed = data.speed * dt / 1000;\n\n      if (!data.active) return;\n\n      // Use PatrolJS pathfinding system to get shortest path to target.\n      if (!this.path.length) {\n        const position = this.el.object3D.position;\n        this.group = this.group || this.system.getGroup(position);\n        this.path = this.system.getPath(position, vDest.copy(data.destination), this.group) || [];\n        el.emit('navigation-start');\n      }\n\n      // If no path is found, exit.\n      if (!this.path.length) {\n        console.warn('[nav] Unable to find path to %o.', data.destination);\n        this.el.setAttribute('nav-agent', {active: false});\n        el.emit('navigation-end');\n        return;\n      }\n\n      // Current segment is a vector from current position to next waypoint.\n      const vCurrent = el.object3D.position;\n      const vWaypoint = this.path[0];\n      vDelta.subVectors(vWaypoint, vCurrent);\n\n      const distance = vDelta.length();\n      let gazeTarget;\n\n      if (distance < speed) {\n        // If <1 step from current waypoint, discard it and move toward next.\n        this.path.shift();\n\n        // After discarding the last waypoint, exit pathfinding.\n        if (!this.path.length) {\n          this.el.setAttribute('nav-agent', {active: false});\n          el.emit('navigation-end');\n          return;\n        }\n\n        vNext.copy(vCurrent);\n        gazeTarget = this.path[0];\n      } else {\n        // If still far away from next waypoint, find next position for\n        // the current frame.\n        vNext.copy(vDelta.setLength(speed)).add(vCurrent);\n        gazeTarget = vWaypoint;\n      }\n\n      // Look at the next waypoint.\n      gazeTarget.y = vCurrent.y;\n      el.object3D.lookAt(gazeTarget);\n\n      // Raycast against the nav mesh, to keep the agent moving along the\n      // ground, not traveling in a straight line from higher to lower waypoints.\n      raycaster.ray.origin.copy(vNext);\n      raycaster.ray.origin.y += 1.5;\n      raycaster.ray.direction = {x:0, y:-1, z:0};\n      const intersections = raycaster.intersectObject(this.system.getNavMesh());\n\n      if (!intersections.length) {\n        // Raycasting failed. Step toward the waypoint and hope for the best.\n        vCurrent.copy(vNext);\n      } else {\n        // Re-project next position onto nav mesh.\n        vDelta.subVectors(intersections[0].point, vCurrent);\n        vCurrent.add(vDelta.setLength(speed));\n      }\n\n    };\n  }())\n});\n", "import { BufferAttribute, BufferGeometry } from 'three';\n\nclass Utils {\n\n  static roundNumber (value, decimals) {\n    const factor = Math.pow(10, decimals);\n    return Math.round(value * factor) / factor;\n  }\n\n  static sample (list) {\n    return list[Math.floor(Math.random() * list.length)];\n  }\n\n  static distanceToSquared (a, b) {\n\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;\n    var dz = a.z - b.z;\n\n    return dx * dx + dy * dy + dz * dz;\n\n  }\n\n  //+ Jonas Raoni Soares Silva\n  //@ http://jsfromhell.com/math/is-point-in-poly [rev. #0]\n  static isPointInPoly (poly, pt) {\n    for (var c = false, i = -1, l = poly.length, j = l - 1; ++i < l; j = i)\n      ((poly[i].z <= pt.z && pt.z < poly[j].z) || (poly[j].z <= pt.z && pt.z < poly[i].z)) && (pt.x < (poly[j].x - poly[i].x) * (pt.z - poly[i].z) / (poly[j].z - poly[i].z) + poly[i].x) && (c = !c);\n    return c;\n  }\n\n  static isVectorInPolygon (vector, polygon, vertices) {\n\n    // reference point will be the centroid of the polygon\n    // We need to rotate the vector as well as all the points which the polygon uses\n\n    var lowestPoint = 100000;\n    var highestPoint = -100000;\n\n    var polygonVertices = [];\n\n    polygon.vertexIds.forEach((vId) => {\n      lowestPoint = Math.min(vertices[vId].y, lowestPoint);\n      highestPoint = Math.max(vertices[vId].y, highestPoint);\n      polygonVertices.push(vertices[vId]);\n    });\n\n    if (vector.y < highestPoint + 0.5 && vector.y > lowestPoint - 0.5 &&\n      this.isPointInPoly(polygonVertices, vector)) {\n      return true;\n    }\n    return false;\n  }\n\n  static triarea2 (a, b, c) {\n    var ax = b.x - a.x;\n    var az = b.z - a.z;\n    var bx = c.x - a.x;\n    var bz = c.z - a.z;\n    return bx * az - ax * bz;\n  }\n\n  static vequal (a, b) {\n    return this.distanceToSquared(a, b) < 0.00001;\n  }\n\n  /**\n   * Modified version of BufferGeometryUtils.mergeVertices, ignoring vertex\n   * attributes other than position.\n   *\n   * @param {THREE.BufferGeometry} geometry\n   * @param {number} tolerance\n   * @return {THREE.BufferGeometry>}\n   */\n  static mergeVertices (geometry, tolerance = 1e-4) {\n\n    tolerance = Math.max( tolerance, Number.EPSILON );\n\n    // Generate an index buffer if the geometry doesn't have one, or optimize it\n    // if it's already available.\n    var hashToIndex = {};\n    var indices = geometry.getIndex();\n    var positions = geometry.getAttribute( 'position' );\n    var vertexCount = indices ? indices.count : positions.count;\n\n    // Next value for triangle indices.\n    var nextIndex = 0;\n\n    var newIndices = [];\n    var newPositions = [];\n\n    // Convert the error tolerance to an amount of decimal places to truncate to.\n    var decimalShift = Math.log10( 1 / tolerance );\n    var shiftMultiplier = Math.pow( 10, decimalShift );\n\n    for ( var i = 0; i < vertexCount; i ++ ) {\n\n      var index = indices ? indices.getX( i ) : i;\n\n      // Generate a hash for the vertex attributes at the current index 'i'.\n      var hash = '';\n\n      // Double tilde truncates the decimal value.\n      hash += `${ ~ ~ ( positions.getX( index ) * shiftMultiplier ) },`;\n      hash += `${ ~ ~ ( positions.getY( index ) * shiftMultiplier ) },`;\n      hash += `${ ~ ~ ( positions.getZ( index ) * shiftMultiplier ) },`;\n\n      // Add another reference to the vertex if it's already\n      // used by another index.\n      if ( hash in hashToIndex ) {\n\n        newIndices.push( hashToIndex[ hash ] );\n\n      } else {\n\n        newPositions.push( positions.getX( index ) );\n        newPositions.push( positions.getY( index ) );\n        newPositions.push( positions.getZ( index ) );\n\n        hashToIndex[ hash ] = nextIndex;\n        newIndices.push( nextIndex );\n        nextIndex ++;\n\n      }\n\n    }\n\n    // Construct merged BufferGeometry.\n\n    const positionAttribute = new BufferAttribute(\n      new Float32Array( newPositions ),\n      positions.itemSize,\n      positions.normalized\n    );\n\n    const result = new BufferGeometry();\n    result.setAttribute( 'position', positionAttribute );\n    result.setIndex( newIndices );\n\n    return result;\n\n  }\n}\n\nexport { Utils };\n", "// javascript-astar\n// http://github.com/bgrins/javascript-astar\n// Freely distributable under the MIT License.\n// Implements the astar search algorithm in javascript using a binary heap.\n\nclass BinaryHeap {\n  constructor (scoreFunction) {\n    this.content = [];\n    this.scoreFunction = scoreFunction;\n  }\n\n  push (element) {\n    // Add the new element to the end of the array.\n    this.content.push(element);\n\n    // Allow it to sink down.\n    this.sinkDown(this.content.length - 1);\n  }\n\n  pop () {\n    // Store the first element so we can return it later.\n    const result = this.content[0];\n    // Get the element at the end of the array.\n    const end = this.content.pop();\n    // If there are any elements left, put the end element at the\n    // start, and let it bubble up.\n    if (this.content.length > 0) {\n      this.content[0] = end;\n      this.bubbleUp(0);\n    }\n    return result;\n  }\n\n  remove (node) {\n    const i = this.content.indexOf(node);\n\n    // When it is found, the process seen in 'pop' is repeated\n    // to fill up the hole.\n    const end = this.content.pop();\n\n    if (i !== this.content.length - 1) {\n      this.content[i] = end;\n\n      if (this.scoreFunction(end) < this.scoreFunction(node)) {\n        this.sinkDown(i);\n      } else {\n        this.bubbleUp(i);\n      }\n    }\n  }\n\n  size () {\n    return this.content.length;\n  }\n\n  rescoreElement (node) {\n    this.sinkDown(this.content.indexOf(node));\n  }\n\n  sinkDown (n) {\n    // Fetch the element that has to be sunk.\n    const element = this.content[n];\n\n    // When at 0, an element can not sink any further.\n    while (n > 0) {\n      // Compute the parent element's index, and fetch it.\n      const parentN = ((n + 1) >> 1) - 1;\n      const parent = this.content[parentN];\n\n      if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n        // Swap the elements if the parent is greater.\n        this.content[parentN] = element;\n        this.content[n] = parent;\n        // Update 'n' to continue at the new position.\n        n = parentN;\n      } else {\n        // Found a parent that is less, no need to sink any further.\n        break;\n      }\n    }\n  }\n\n  bubbleUp (n) {\n    // Look up the target element and its score.\n    const length = this.content.length,\n      element = this.content[n],\n      elemScore = this.scoreFunction(element);\n\n    while (true) {\n      // Compute the indices of the child elements.\n      const child2N = (n + 1) << 1,\n        child1N = child2N - 1;\n      // This is used to store the new position of the element,\n      // if any.\n      let swap = null;\n      let child1Score;\n      // If the first child exists (is inside the array)...\n      if (child1N < length) {\n        // Look it up and compute its score.\n        const child1 = this.content[child1N];\n        child1Score = this.scoreFunction(child1);\n\n        // If the score is less than our element's, we need to swap.\n        if (child1Score < elemScore) {\n          swap = child1N;\n        }\n      }\n\n      // Do the same checks for the other child.\n      if (child2N < length) {\n        const child2 = this.content[child2N],\n          child2Score = this.scoreFunction(child2);\n        if (child2Score < (swap === null ? elemScore : child1Score)) {\n          swap = child2N;\n        }\n      }\n\n      // If the element needs to be moved, swap it, and continue.\n      if (swap !== null) {\n        this.content[n] = this.content[swap];\n        this.content[swap] = element;\n        n = swap;\n      }\n\n      // Otherwise, we are done.\n      else {\n        break;\n      }\n    }\n  }\n\n}\n\nexport { BinaryHeap };\n", "import { Utils } from './Utils';\n\nclass Channel {\n  constructor () {\n    this.portals = [];\n  }\n\n  push (p1, p2) {\n    if (p2 === undefined) p2 = p1;\n    this.portals.push({\n      left: p1,\n      right: p2\n    });\n  }\n\n  stringPull () {\n    const portals = this.portals;\n    const pts = [];\n    // Init scan state\n    let portalApex, portalLeft, portalRight;\n    let apexIndex = 0,\n      leftIndex = 0,\n      rightIndex = 0;\n\n    portalApex = portals[0].left;\n    portalLeft = portals[0].left;\n    portalRight = portals[0].right;\n\n    // Add start point.\n    pts.push(portalApex);\n\n    for (let i = 1; i < portals.length; i++) {\n      const left = portals[i].left;\n      const right = portals[i].right;\n\n      // Update right vertex.\n      if (Utils.triarea2(portalApex, portalRight, right) <= 0.0) {\n        if (Utils.vequal(portalApex, portalRight) || Utils.triarea2(portalApex, portalLeft, right) > 0.0) {\n          // Tighten the funnel.\n          portalRight = right;\n          rightIndex = i;\n        } else {\n          // Right over left, insert left to path and restart scan from portal left point.\n          pts.push(portalLeft);\n          // Make current left the new apex.\n          portalApex = portalLeft;\n          apexIndex = leftIndex;\n          // Reset portal\n          portalLeft = portalApex;\n          portalRight = portalApex;\n          leftIndex = apexIndex;\n          rightIndex = apexIndex;\n          // Restart scan\n          i = apexIndex;\n          continue;\n        }\n      }\n\n      // Update left vertex.\n      if (Utils.triarea2(portalApex, portalLeft, left) >= 0.0) {\n        if (Utils.vequal(portalApex, portalLeft) || Utils.triarea2(portalApex, portalRight, left) < 0.0) {\n          // Tighten the funnel.\n          portalLeft = left;\n          leftIndex = i;\n        } else {\n          // Left over right, insert right to path and restart scan from portal right point.\n          pts.push(portalRight);\n          // Make current right the new apex.\n          portalApex = portalRight;\n          apexIndex = rightIndex;\n          // Reset portal\n          portalLeft = portalApex;\n          portalRight = portalApex;\n          leftIndex = apexIndex;\n          rightIndex = apexIndex;\n          // Restart scan\n          i = apexIndex;\n          continue;\n        }\n      }\n    }\n\n    if ((pts.length === 0) || (!Utils.vequal(pts[pts.length - 1], portals[portals.length - 1].left))) {\n      // Append last point to path.\n      pts.push(portals[portals.length - 1].left);\n    }\n\n    this.path = pts;\n    return pts;\n  }\n}\n\nexport { Channel };\n", "import {\n\tVector3,\n\tPlane,\n\tTriangle,\n} from 'three';\n\nimport { Utils } from './Utils';\nimport { AStar } from './AStar';\nimport { Builder } from './Builder';\nimport { Channel } from './Channel';\n\n/**\n * Defines an instance of the pathfinding module, with one or more zones.\n */\nclass Pathfinding {\n\tconstructor () {\n\t\tthis.zones = {};\n\t}\n\n\t/**\n\t * (Static) Builds a zone/node set from navigation mesh geometry.\n\t * @param  {BufferGeometry} geometry\n\t * @param  {number} tolerance Vertex welding tolerance.\n\t * @return {Zone}\n\t */\n\tstatic createZone (geometry, tolerance = 1e-4) {\n\t\treturn Builder.buildZone(geometry, tolerance);\n\t}\n\n\t/**\n\t * Sets data for the given zone.\n\t * @param {string} zoneID\n\t * @param {Zone} zone\n\t */\n\tsetZoneData (zoneID, zone) {\n\t\tthis.zones[zoneID] = zone;\n\t}\n\n\t/**\n\t * Returns a random node within a given range of a given position.\n\t * @param  {string} zoneID\n\t * @param  {number} groupID\n\t * @param  {Vector3} nearPosition\n\t * @param  {number} nearRange\n\t * @return {Node}\n\t */\n\tgetRandomNode (zoneID, groupID, nearPosition, nearRange) {\n\n\t\tif (!this.zones[zoneID]) return new Vector3();\n\n\t\tnearPosition = nearPosition || null;\n\t\tnearRange = nearRange || 0;\n\n\t\tconst candidates = [];\n\t\tconst polygons = this.zones[zoneID].groups[groupID];\n\n\t\tpolygons.forEach((p) => {\n\t\t\tif (nearPosition && nearRange) {\n\t\t\t\tif (Utils.distanceToSquared(nearPosition, p.centroid) < nearRange * nearRange) {\n\t\t\t\t\tcandidates.push(p.centroid);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcandidates.push(p.centroid);\n\t\t\t}\n\t\t});\n\n\t\treturn Utils.sample(candidates) || new Vector3();\n\t}\n\n\t/**\n\t * Returns the closest node to the target position.\n\t * @param  {Vector3} position\n\t * @param  {string}  zoneID\n\t * @param  {number}  groupID\n\t * @param  {boolean} checkPolygon\n\t * @return {Node}\n\t */\n\tgetClosestNode (position, zoneID, groupID, checkPolygon = false) {\n\t\tconst nodes = this.zones[zoneID].groups[groupID];\n\t\tconst vertices = this.zones[zoneID].vertices;\n\t\tlet closestNode = null;\n\t\tlet closestDistance = Infinity;\n\n\t\tnodes.forEach((node) => {\n\t\t\tconst distance = Utils.distanceToSquared(node.centroid, position);\n\t\t\tif (distance < closestDistance\n\t\t\t\t\t&& (!checkPolygon || Utils.isVectorInPolygon(position, node, vertices))) {\n\t\t\t\tclosestNode = node;\n\t\t\t\tclosestDistance = distance;\n\t\t\t}\n\t\t});\n\n\t\treturn closestNode;\n\t}\n\n\t/**\n\t * Returns a path between given start and end points. If a complete path\n\t * cannot be found, will return the nearest endpoint available.\n\t *\n\t * @param  {Vector3} startPosition Start position.\n\t * @param  {Vector3} targetPosition Destination.\n\t * @param  {string} zoneID ID of current zone.\n\t * @param  {number} groupID Current group ID.\n\t * @return {Array<Vector3>} Array of points defining the path.\n\t */\n\tfindPath (startPosition, targetPosition, zoneID, groupID) {\n\t\tconst nodes = this.zones[zoneID].groups[groupID];\n\t\tconst vertices = this.zones[zoneID].vertices;\n\n\t\tconst closestNode = this.getClosestNode(startPosition, zoneID, groupID, true);\n\t\tconst farthestNode = this.getClosestNode(targetPosition, zoneID, groupID, true);\n\n\t\t// If we can't find any node, just go straight to the target\n\t\tif (!closestNode || !farthestNode) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst paths = AStar.search(nodes, closestNode, farthestNode);\n\n\t\tconst getPortalFromTo = function (a, b) {\n\t\t\tfor (var i = 0; i < a.neighbours.length; i++) {\n\t\t\t\tif (a.neighbours[i] === b.id) {\n\t\t\t\t\treturn a.portals[i];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// We have the corridor, now pull the rope.\n\t\tconst channel = new Channel();\n\t\tchannel.push(startPosition);\n\t\tfor (let i = 0; i < paths.length; i++) {\n\t\t\tconst polygon = paths[i];\n\t\t\tconst nextPolygon = paths[i + 1];\n\n\t\t\tif (nextPolygon) {\n\t\t\t\tconst portals = getPortalFromTo(polygon, nextPolygon);\n\t\t\t\tchannel.push(\n\t\t\t\t\tvertices[portals[0]],\n\t\t\t\t\tvertices[portals[1]]\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tchannel.push(targetPosition);\n\t\tchannel.stringPull();\n\n\t\t// Return the path, omitting first position (which is already known).\n\t\tconst path = channel.path.map((c) => new Vector3(c.x, c.y, c.z));\n\t\tpath.shift();\n\t\treturn path;\n\t}\n}\n\n/**\n * Returns closest node group ID for given position.\n * @param  {string} zoneID\n * @param  {Vector3} position\n * @return {number}\n */\nPathfinding.prototype.getGroup = (function() {\n\tconst plane = new Plane();\n\treturn function (zoneID, position, checkPolygon = false) {\n\t\tif (!this.zones[zoneID]) return null;\n\n\t\tlet closestNodeGroup = null;\n\t\tlet distance = Math.pow(50, 2);\n\t\tconst zone = this.zones[zoneID];\n\n\t\tfor (let i = 0; i < zone.groups.length; i++) {\n\t\t\tconst group = zone.groups[i];\n\t\t\tfor (const node of group) {\n\t\t\t\tif (checkPolygon) {\n\t\t\t\t\tplane.setFromCoplanarPoints(\n\t\t\t\t\t\tzone.vertices[node.vertexIds[0]],\n\t\t\t\t\t\tzone.vertices[node.vertexIds[1]],\n\t\t\t\t\t\tzone.vertices[node.vertexIds[2]]\n\t\t\t\t\t);\n\t\t\t\t\tif (Math.abs(plane.distanceToPoint(position)) < 0.01) {\n\t\t\t\t\t\tconst poly = [\n\t\t\t\t\t\t\tzone.vertices[node.vertexIds[0]],\n\t\t\t\t\t\t\tzone.vertices[node.vertexIds[1]],\n\t\t\t\t\t\t\tzone.vertices[node.vertexIds[2]]\n\t\t\t\t\t\t];\n\t\t\t\t\t\tif(Utils.isPointInPoly(poly, position)) {\n\t\t\t\t\t\t\treturn i;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst measuredDistance = Utils.distanceToSquared(node.centroid, position);\n\t\t\t\tif (measuredDistance < distance) {\n\t\t\t\t\tclosestNodeGroup = i;\n\t\t\t\t\tdistance = measuredDistance;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn closestNodeGroup;\n\t};\n}());\n\n/**\n * Clamps a step along the navmesh, given start and desired endpoint. May be\n * used to constrain first-person / WASD controls.\n *\n * @param  {Vector3} start\n * @param  {Vector3} end Desired endpoint.\n * @param  {Node} node\n * @param  {string} zoneID\n * @param  {number} groupID\n * @param  {Vector3} endTarget Updated endpoint.\n * @return {Node} Updated node.\n */\nPathfinding.prototype.clampStep = (function () {\n\tconst point = new Vector3();\n\tconst plane = new Plane();\n\tconst triangle = new Triangle();\n\n\tconst endPoint = new Vector3();\n\n\tlet closestNode;\n\tlet closestPoint = new Vector3();\n\tlet closestDistance;\n\n\treturn function (startRef, endRef, node, zoneID, groupID, endTarget) {\n\t\tconst vertices = this.zones[zoneID].vertices;\n\t\tconst nodes = this.zones[zoneID].groups[groupID];\n\n\t\tconst nodeQueue = [node];\n\t\tconst nodeDepth = {};\n\t\tnodeDepth[node.id] = 0;\n\n\t\tclosestNode = undefined;\n\t\tclosestPoint.set(0, 0, 0);\n\t\tclosestDistance = Infinity;\n\n\t\t// Project the step along the current node.\n\t\tplane.setFromCoplanarPoints(\n\t\t\tvertices[node.vertexIds[0]],\n\t\t\tvertices[node.vertexIds[1]],\n\t\t\tvertices[node.vertexIds[2]]\n\t\t);\n\t\tplane.projectPoint(endRef, point);\n\t\tendPoint.copy(point);\n\n\t\tfor (let currentNode = nodeQueue.pop(); currentNode; currentNode = nodeQueue.pop()) {\n\n\t\t\ttriangle.set(\n\t\t\t\tvertices[currentNode.vertexIds[0]],\n\t\t\t\tvertices[currentNode.vertexIds[1]],\n\t\t\t\tvertices[currentNode.vertexIds[2]]\n\t\t\t);\n\n\t\t\ttriangle.closestPointToPoint(endPoint, point);\n\n\t\t\tif (point.distanceToSquared(endPoint) < closestDistance) {\n\t\t\t\tclosestNode = currentNode;\n\t\t\t\tclosestPoint.copy(point);\n\t\t\t\tclosestDistance = point.distanceToSquared(endPoint);\n\t\t\t}\n\n\t\t\tconst depth = nodeDepth[currentNode.id];\n\t\t\tif (depth > 2) continue;\n\n\t\t\tfor (let i = 0; i < currentNode.neighbours.length; i++) {\n\t\t\t\tconst neighbour = nodes[currentNode.neighbours[i]];\n\t\t\t\tif (neighbour.id in nodeDepth) continue;\n\n\t\t\t\tnodeQueue.push(neighbour);\n\t\t\t\tnodeDepth[neighbour.id] = depth + 1;\n\t\t\t}\n\t\t}\n\n\t\tendTarget.copy(closestPoint);\n\t\treturn closestNode;\n\t};\n}());\n\n/**\n * Defines a zone of interconnected groups on a navigation mesh.\n *\n * @type {Object}\n * @property {Array<Group>} groups\n * @property {Array<Vector3>} vertices\n */\nconst Zone = {}; // jshint ignore:line\n\n/**\n * Defines a group within a navigation mesh.\n *\n * @type {Object}\n */\nconst Group = {}; // jshint ignore:line\n\n/**\n * Defines a node (or polygon) within a group.\n *\n * @type {Object}\n * @property {number} id\n * @property {Array<number>} neighbours IDs of neighboring nodes.\n * @property {Array<number>} vertexIds\n * @property {Vector3} centroid\n * @property {Array<Array<number>>} portals Array of portals, each defined by two vertex IDs.\n * @property {boolean} closed\n * @property {number} cost\n */\nconst Node = {}; // jshint ignore:line\n\nexport { Pathfinding };\n", "import { Vector3 } from 'three';\n\nimport { Utils } from './Utils';\n\nclass Builder {\n  /**\n   * Constructs groups from the given navigation mesh.\n   * @param  {BufferGeometry} geometry\n   * @param  {number} tolerance\n   * @return {Zone}\n   */\n  static buildZone (geometry, tolerance) {\n\n    const navMesh = this._buildNavigationMesh(geometry, tolerance);\n\n    const zone = {};\n\n    navMesh.vertices.forEach((v) => {\n      v.x = Utils.roundNumber(v.x, 2);\n      v.y = Utils.roundNumber(v.y, 2);\n      v.z = Utils.roundNumber(v.z, 2);\n    });\n\n    zone.vertices = navMesh.vertices;\n\n    const groups = this._buildPolygonGroups(navMesh);\n\n    // TODO: This block represents a large portion of navigation mesh construction time\n    // and could probably be optimized. For example, construct portals while\n    // determining the neighbor graph.\n    zone.groups = new Array(groups.length);\n    groups.forEach((group, groupIndex) => {\n\n      const indexByPolygon = new Map(); // { polygon: index in group }\n      group.forEach((poly, polyIndex) => { indexByPolygon.set(poly, polyIndex); });\n\n      const newGroup = new Array(group.length);\n      group.forEach((poly, polyIndex) => {\n\n        const neighbourIndices = [];\n        poly.neighbours.forEach((n) => neighbourIndices.push(indexByPolygon.get(n)));\n\n        // Build a portal list to each neighbour\n        const portals = [];\n        poly.neighbours.forEach((n) => portals.push(this._getSharedVerticesInOrder(poly, n)));\n\n        const centroid = new Vector3( 0, 0, 0 );\n        centroid.add( zone.vertices[ poly.vertexIds[0] ] );\n        centroid.add( zone.vertices[ poly.vertexIds[1] ] );\n        centroid.add( zone.vertices[ poly.vertexIds[2] ] );\n        centroid.divideScalar( 3 );\n        centroid.x = Utils.roundNumber(centroid.x, 2);\n        centroid.y = Utils.roundNumber(centroid.y, 2);\n        centroid.z = Utils.roundNumber(centroid.z, 2);\n\n        newGroup[polyIndex] = {\n          id: polyIndex,\n          neighbours: neighbourIndices,\n          vertexIds: poly.vertexIds,\n          centroid: centroid,\n          portals: portals\n        };\n      });\n\n      zone.groups[groupIndex] = newGroup;\n    });\n\n    return zone;\n  }\n\n  /**\n   * Constructs a navigation mesh from the given geometry.\n   * @param {BufferGeometry} geometry\n   * @return {Object}\n   */\n  static _buildNavigationMesh (geometry, tolerance) {\n    geometry = Utils.mergeVertices(geometry, tolerance);\n    return this._buildPolygonsFromGeometry(geometry);\n  }\n\n  /**\n   * Spreads the group ID of the given polygon to all connected polygons\n   * @param {Object} seed\n   */\n  static _spreadGroupId (seed) {\n    let nextBatch = new Set([seed]);\n\n    while(nextBatch.size > 0) {\n      const batch = nextBatch;\n      nextBatch = new Set();\n\n      batch.forEach((polygon) => {\n        polygon.group = seed.group;\n        polygon.neighbours.forEach((neighbour) => {\n          if(neighbour.group === undefined) {\n            nextBatch.add(neighbour);\n          }\n        });\n      });\n    }\n  }\n\n  static _buildPolygonGroups (navigationMesh) {\n\n    const polygons = navigationMesh.polygons;\n\n    const polygonGroups = [];\n\n    polygons.forEach((polygon) => {\n      if (polygon.group !== undefined) {\n        // this polygon is already part of a group\n        polygonGroups[polygon.group].push(polygon);\n      } else {\n        // we need to make a new group and spread its ID to neighbors\n        polygon.group = polygonGroups.length;\n        this._spreadGroupId(polygon);\n        polygonGroups.push([polygon]);\n      }\n    });\n\n    return polygonGroups;\n  }\n\n  static _buildPolygonNeighbours (polygon, vertexPolygonMap) {\n    const neighbours = new Set();\n\n    const groupA = vertexPolygonMap[polygon.vertexIds[0]];\n    const groupB = vertexPolygonMap[polygon.vertexIds[1]];\n    const groupC = vertexPolygonMap[polygon.vertexIds[2]];\n\n    // It's only necessary to iterate groups A and B. Polygons contained only\n    // in group C cannot share a >1 vertex with this polygon.\n    // IMPORTANT: Bublé cannot compile for-of loops.\n    groupA.forEach((candidate) => {\n      if (candidate === polygon) return;\n      if (groupB.includes(candidate) || groupC.includes(candidate)) {\n        neighbours.add(candidate);\n      }\n    });\n    groupB.forEach((candidate) => {\n      if (candidate === polygon) return;\n      if (groupC.includes(candidate)) {\n        neighbours.add(candidate);\n      }\n    });\n\n    return neighbours;\n  }\n\n  static _buildPolygonsFromGeometry (geometry) {\n\n    const polygons = [];\n    const vertices = [];\n\n    const position = geometry.attributes.position;\n    const index = geometry.index;\n\n    // Constructing the neighbor graph brute force is O(n²). To avoid that,\n    // create a map from vertices to the polygons that contain them, and use it\n    // while connecting polygons. This reduces complexity to O(n*m), where 'm'\n    // is related to connectivity of the mesh.\n\n    /** Array of polygon objects by vertex index. */\n    const vertexPolygonMap = [];\n\n    for (let i = 0; i < position.count; i++) {\n      vertices.push(new Vector3().fromBufferAttribute(position, i));\n      vertexPolygonMap[i] = [];\n    }\n\n    // Convert the faces into a custom format that supports more than 3 vertices\n    for (let i = 0; i < geometry.index.count; i += 3) {\n      const a = index.getX(i);\n      const b = index.getX(i + 1);\n      const c = index.getX(i + 2);\n      const poly = {vertexIds: [a, b, c], neighbours: null};\n      polygons.push(poly);\n      vertexPolygonMap[a].push(poly);\n      vertexPolygonMap[b].push(poly);\n      vertexPolygonMap[c].push(poly);\n    }\n\n    // Build a list of adjacent polygons\n    polygons.forEach((polygon) => {\n      polygon.neighbours = this._buildPolygonNeighbours(polygon, vertexPolygonMap);\n    });\n\n    return {\n      polygons: polygons,\n      vertices: vertices\n    };\n  }\n\n  static _getSharedVerticesInOrder (a, b) {\n\n    const aList = a.vertexIds;\n    const a0 = aList[0], a1 = aList[1], a2 = aList[2];\n\n    const bList = b.vertexIds;\n    const shared0 = bList.includes(a0);\n    const shared1 = bList.includes(a1);\n    const shared2 = bList.includes(a2);\n\n    // it seems that we shouldn't have an a and b with <2 shared vertices here unless there's a bug\n    // in the neighbor identification code, or perhaps a malformed input geometry; 3 shared vertices\n    // is a kind of embarrassing but possible geometry we should handle\n    if (shared0 && shared1 && shared2) {\n      return Array.from(aList);\n    } else if (shared0 && shared1) {\n      return [a0, a1];\n    } else if (shared1 && shared2) {\n      return [a1, a2];\n    } else if (shared0 && shared2) {\n      return [a2, a0]; // this ordering will affect the string pull algorithm later, not clear if significant\n    } else {\n      console.warn(\"Error processing navigation mesh neighbors; neighbors with <2 shared vertices found.\");\n      return [];\n    }\n  }\n}\n\nexport { Builder };\n", "import { BinaryHeap } from './BinaryHeap';\nimport { Utils } from './Utils.js';\n\nclass AStar {\n  static init (graph) {\n    for (let x = 0; x < graph.length; x++) {\n      //for(var x in graph) {\n      const node = graph[x];\n      node.f = 0;\n      node.g = 0;\n      node.h = 0;\n      node.cost = 1.0;\n      node.visited = false;\n      node.closed = false;\n      node.parent = null;\n    }\n  }\n\n  static cleanUp (graph) {\n    for (let x = 0; x < graph.length; x++) {\n      const node = graph[x];\n      delete node.f;\n      delete node.g;\n      delete node.h;\n      delete node.cost;\n      delete node.visited;\n      delete node.closed;\n      delete node.parent;\n    }\n  }\n\n  static heap () {\n    return new BinaryHeap(function (node) {\n      return node.f;\n    });\n  }\n\n  static search (graph, start, end) {\n    this.init(graph);\n    //heuristic = heuristic || astar.manhattan;\n\n\n    const openHeap = this.heap();\n\n    openHeap.push(start);\n\n    while (openHeap.size() > 0) {\n\n      // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n      const currentNode = openHeap.pop();\n\n      // End case -- result has been found, return the traced path.\n      if (currentNode === end) {\n        let curr = currentNode;\n        const ret = [];\n        while (curr.parent) {\n          ret.push(curr);\n          curr = curr.parent;\n        }\n        this.cleanUp(ret);\n        return ret.reverse();\n      }\n\n      // Normal case -- move currentNode from open to closed, process each of its neighbours.\n      currentNode.closed = true;\n\n      // Find all neighbours for the current node. Optionally find diagonal neighbours as well (false by default).\n      const neighbours = this.neighbours(graph, currentNode);\n\n      for (let i = 0, il = neighbours.length; i < il; i++) {\n        const neighbour = neighbours[i];\n\n        if (neighbour.closed) {\n          // Not a valid node to process, skip to next neighbour.\n          continue;\n        }\n\n        // The g score is the shortest distance from start to current node.\n        // We need to check if the path we have arrived at this neighbour is the shortest one we have seen yet.\n        const gScore = currentNode.g + neighbour.cost;\n        const beenVisited = neighbour.visited;\n\n        if (!beenVisited || gScore < neighbour.g) {\n\n          // Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n          neighbour.visited = true;\n          neighbour.parent = currentNode;\n          if (!neighbour.centroid || !end.centroid) throw new Error('Unexpected state');\n          neighbour.h = neighbour.h || this.heuristic(neighbour.centroid, end.centroid);\n          neighbour.g = gScore;\n          neighbour.f = neighbour.g + neighbour.h;\n\n          if (!beenVisited) {\n            // Pushing to heap will put it in proper place based on the 'f' value.\n            openHeap.push(neighbour);\n          } else {\n            // Already seen the node, but since it has been rescored we need to reorder it in the heap\n            openHeap.rescoreElement(neighbour);\n          }\n        }\n      }\n    }\n\n    // No result was found - empty array signifies failure to find path.\n    return [];\n  }\n\n  static heuristic (pos1, pos2) {\n    return Utils.distanceToSquared(pos1, pos2);\n  }\n\n  static neighbours (graph, node) {\n    const ret = [];\n\n    for (let e = 0; e < node.neighbours.length; e++) {\n      ret.push(graph[node.neighbours[e]]);\n    }\n\n    return ret;\n  }\n}\n\nexport { AStar };\n", "import {\n  BoxGeometry,\n  SphereGeometry,\n  BufferAttribute,\n  BufferGeometry,\n  Line,\n  LineBasicMaterial,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Vector3,\n} from 'three';\n\nconst colors = {\n  PLAYER: 0xEE836F,\n  TARGET: 0xDCCB18,\n  PATH: 0x00A3AF,\n  WAYPOINT: 0x00A3AF,\n  CLAMPED_STEP: 0xDCD3B2,\n  CLOSEST_NODE: 0x43676B,\n};\n\nconst OFFSET = 0.2;\n\n/**\n * Helper for debugging pathfinding behavior.\n */\nclass PathfindingHelper extends Object3D {\n  constructor () {\n    super();\n\n    this._playerMarker = new Mesh(\n      new SphereGeometry( 0.25, 32, 32 ),\n      new MeshBasicMaterial( { color: colors.PLAYER } )\n    );\n\n    this._targetMarker = new Mesh(\n      new BoxGeometry( 0.3, 0.3, 0.3 ),\n      new MeshBasicMaterial( { color: colors.TARGET } )\n    );\n\n\n    this._nodeMarker = new Mesh(\n      new BoxGeometry( 0.1, 0.8, 0.1 ),\n      new MeshBasicMaterial( { color: colors.CLOSEST_NODE } )\n    );\n\n\n    this._stepMarker = new Mesh(\n      new BoxGeometry( 0.1, 1, 0.1 ),\n      new MeshBasicMaterial( { color: colors.CLAMPED_STEP } )\n    );\n\n    this._pathMarker = new Object3D();\n\n    this._pathLineMaterial = new LineBasicMaterial( { color: colors.PATH, linewidth: 2 } ) ;\n    this._pathPointMaterial = new MeshBasicMaterial( { color: colors.WAYPOINT } );\n    this._pathPointGeometry = new SphereGeometry( 0.08 );\n\n    this._markers = [\n      this._playerMarker,\n      this._targetMarker,\n      this._nodeMarker,\n      this._stepMarker,\n      this._pathMarker,\n    ];\n\n    this._markers.forEach( ( marker ) => {\n\n      marker.visible = false;\n\n      this.add( marker );\n\n    } );\n\n  }\n\n  /**\n   * @param {Array<Vector3>} path\n   * @return {this}\n   */\n  setPath ( path ) {\n\n    while ( this._pathMarker.children.length ) {\n\n      this._pathMarker.children[ 0 ].visible = false;\n      this._pathMarker.remove( this._pathMarker.children[ 0 ] );\n\n    }\n\n    path = [ this._playerMarker.position ].concat( path );\n\n    // Draw debug lines\n    const geometry = new BufferGeometry();\n    geometry.setAttribute('position', new BufferAttribute(new Float32Array(path.length * 3), 3));\n    for (let i = 0; i < path.length; i++) {\n      geometry.attributes.position.setXYZ(i, path[ i ].x, path[ i ].y + OFFSET, path[ i ].z);\n    }\n    this._pathMarker.add( new Line( geometry, this._pathLineMaterial ) );\n\n    for ( let i = 0; i < path.length - 1; i++ ) {\n\n      const node = new Mesh( this._pathPointGeometry, this._pathPointMaterial );\n      node.position.copy( path[ i ] );\n      node.position.y += OFFSET;\n      this._pathMarker.add( node );\n\n    }\n\n    this._pathMarker.visible = true;\n\n    return this;\n\n  }\n\n  /**\n   * @param {Vector3} position\n   * @return {this}\n   */\n  setPlayerPosition( position ) {\n\n    this._playerMarker.position.copy( position );\n    this._playerMarker.visible = true;\n    return this;\n\n  }\n\n  /**\n   * @param {Vector3} position\n   * @return {this}\n   */\n  setTargetPosition( position ) {\n\n    this._targetMarker.position.copy( position );\n    this._targetMarker.visible = true;\n    return this;\n\n  }\n\n  /**\n   * @param {Vector3} position\n   * @return {this}\n   */\n  setNodePosition( position ) {\n\n    this._nodeMarker.position.copy( position );\n    this._nodeMarker.visible = true;\n    return this;\n\n  }\n\n  /**\n   * @param {Vector3} position\n   * @return {this}\n   */\n  setStepPosition( position ) {\n\n    this._stepMarker.position.copy( position );\n    this._stepMarker.visible = true;\n    return this;\n\n  }\n\n  /**\n   * Hides all markers.\n   * @return {this}\n   */\n  reset () {\n\n    while ( this._pathMarker.children.length ) {\n\n      this._pathMarker.children[ 0 ].visible = false;\n      this._pathMarker.remove( this._pathMarker.children[ 0 ] );\n\n    }\n\n    this._markers.forEach( ( marker ) => {\n\n      marker.visible = false;\n\n    } );\n\n    return this;\n\n  }\n\n}\n\nexport { PathfindingHelper };\n", "const { Pathfinding } = require('three-pathfinding');\n\nconst pathfinder = new Pathfinding();\nconst ZONE = 'level';\n\n/**\n * nav\n *\n * Pathfinding system, using PatrolJS.\n */\nmodule.exports = AFRAME.registerSystem('nav', {\n  init: function () {\n    this.navMesh = null;\n    this.agents = new Set();\n  },\n\n  /**\n   * @param {THREE.Geometry} geometry\n   */\n  setNavMeshGeometry: function (geometry) {\n    this.navMesh = new THREE.Mesh(geometry);\n    pathfinder.setZoneData(ZONE, Pathfinding.createZone(geometry));\n    Array.from(this.agents).forEach((agent) => agent.updateNavLocation());\n  },\n\n  /**\n   * @return {THREE.Mesh}\n   */\n  getNavMesh: function () {\n    return this.navMesh;\n  },\n\n  /**\n   * @param {NavAgent} ctrl\n   */\n  addAgent: function (ctrl) {\n    this.agents.add(ctrl);\n  },\n\n  /**\n   * @param {NavAgent} ctrl\n   */\n  removeAgent: function (ctrl) {\n    this.agents.delete(ctrl);\n  },\n\n  /**\n   * @param  {THREE.Vector3} start\n   * @param  {THREE.Vector3} end\n   * @param  {number} groupID\n   * @return {Array<THREE.Vector3>}\n   */\n  getPath: function (start, end, groupID) {\n    return this.navMesh\n      ? pathfinder.findPath(start, end, ZONE, groupID)\n      : null;\n  },\n\n  /**\n   * @param {THREE.Vector3} position\n   * @return {number}\n   */\n  getGroup: function (position) {\n    return this.navMesh\n      ? pathfinder.getGroup(ZONE, position)\n      : null;\n  },\n\n  /**\n   * @param  {THREE.Vector3} position\n   * @param  {number} groupID\n   * @return {Node}\n   */\n  getNode: function (position, groupID) {\n    return this.navMesh\n      ? pathfinder.getClosestNode(position, ZONE, groupID, true)\n      : null;\n  },\n\n  /**\n   * @param  {THREE.Vector3} start Starting position.\n   * @param  {THREE.Vector3} end Desired ending position.\n   * @param  {number} groupID\n   * @param  {Node} node\n   * @param  {THREE.Vector3} endTarget (Output) Adjusted step end position.\n   * @return {Node} Current node, after step is taken.\n   */\n  clampStep: function (start, end, groupID, node, endTarget) {\n    if (!this.navMesh) {\n      endTarget.copy(end);\n      return null;\n    } else if (!node) {\n      endTarget.copy(end);\n      return this.getNode(end, groupID);\n    }\n    return pathfinder.clampStep(start, end, node, ZONE, groupID, endTarget);\n  }\n});\n", "require('./nav-mesh');\nrequire('./nav-agent');\nrequire('./system');\n", "/**\n * Flat grid.\n *\n * Defaults to 75x75.\n */\nmodule.exports = AFRAME.registerPrimitive('a-grid', {\n  defaultComponents: {\n    geometry: {\n      primitive: 'plane',\n      width: 75,\n      height: 75\n    },\n    rotation: {x: -90, y: 0, z: 0},\n    material: {\n      src: 'url(https://cdn.jsdelivr.net/gh/donmccurdy/aframe-extras@v1.16.3/assets/grid.png)',\n      repeat: '75 75'\n    }\n  },\n  mappings: {\n    width: 'geometry.width',\n    height: 'geometry.height',\n    src: 'material.src'\n  }\n});\n", "/**\n * Flat-shaded ocean primitive.\n *\n * Based on a Codrops tutorial:\n * http://tympanus.net/codrops/2016/04/26/the-aviator-animating-basic-3d-scene-threejs/\n */\nmodule.exports.Primitive = AFRAME.registerPrimitive('a-ocean', {\n  defaultComponents: {\n    ocean: {},\n    rotation: {x: -90, y: 0, z: 0}\n  },\n  mappings: {\n    width: 'ocean.width',\n    depth: 'ocean.depth',\n    density: 'ocean.density',\n    amplitude: 'ocean.amplitude',\n    amplitudeVariance: 'ocean.amplitudeVariance',\n    speed: 'ocean.speed',\n    speedVariance: 'ocean.speedVariance',\n    color: 'ocean.color',\n    opacity: 'ocean.opacity'\n  }\n});\n\nmodule.exports.Component = AFRAME.registerComponent('ocean', {\n  schema: {\n    // Dimensions of the ocean area.\n    width: {default: 10, min: 0},\n    depth: {default: 10, min: 0},\n\n    // Density of waves.\n    density: {default: 10},\n\n    // Wave amplitude and variance.\n    amplitude: {default: 0.1},\n    amplitudeVariance: {default: 0.3},\n\n    // Wave speed and variance.\n    speed: {default: 1},\n    speedVariance: {default: 2},\n\n    // Material.\n    color: {default: '#7AD2F7', type: 'color'},\n    opacity: {default: 0.8}\n  },\n\n  /**\n   * Use play() instead of init(), because component mappings – unavailable as dependencies – are\n   * not guaranteed to have parsed when this component is initialized.\n   */\n  play: function () {\n    const el = this.el;\n    const data = this.data;\n    let material = el.components.material;\n\n    const geometry = new THREE.PlaneGeometry(data.width, data.depth, data.density, data.density);\n    this.waves = [];\n    const posAttribute = geometry.getAttribute('position');\n    for (let i = 0; i < posAttribute.count; i++) {\n      this.waves.push({\n        z: posAttribute.getZ(i),\n        ang: Math.random() * Math.PI * 2,\n        amp: data.amplitude + Math.random() * data.amplitudeVariance,\n        speed: (data.speed + Math.random() * data.speedVariance) / 1000 // radians / frame\n      });\n    }\n\n    if (!material) {\n      material = {};\n      material.material = new THREE.MeshPhongMaterial({\n        color: data.color,\n        transparent: data.opacity < 1,\n        opacity: data.opacity,\n        flatShading: true,\n      });\n    }\n\n    this.mesh = new THREE.Mesh(geometry, material.material);\n    el.setObject3D('mesh', this.mesh);\n  },\n\n  remove: function () {\n    this.el.removeObject3D('mesh');\n  },\n\n  tick: function (t, dt) {\n    if (!dt) return;\n\n    const posAttribute = this.mesh.geometry.getAttribute('position');\n    for (let i = 0; i < posAttribute.count; i++){\n      const vprops = this.waves[i];\n      const value = vprops.z + Math.sin(vprops.ang) * vprops.amp;\n      posAttribute.setZ(i, value);\n      vprops.ang += vprops.speed * dt;\n    }\n    posAttribute.needsUpdate = true;\n  }\n});\n", "/**\n * Tube following a custom path.\n *\n * Usage:\n *\n * ```html\n * <a-tube path=\"5 0 5, 5 0 -5, -5 0 -5\" radius=\"0.5\"></a-tube>\n * ```\n */\nmodule.exports.Primitive = AFRAME.registerPrimitive('a-tube', {\n  defaultComponents: {\n    tube:           {},\n  },\n  mappings: {\n    path:           'tube.path',\n    segments:       'tube.segments',\n    radius:         'tube.radius',\n    'radial-segments': 'tube.radialSegments',\n    closed:         'tube.closed'\n  }\n});\n\nmodule.exports.Component = AFRAME.registerComponent('tube', {\n  schema: {\n    path:           {default: []},\n    segments:       {default: 64},\n    radius:         {default: 1},\n    radialSegments: {default: 8},\n    closed:         {default: false}\n  },\n\n  init: function () {\n    const el = this.el,\n        data = this.data;\n    let material = el.components.material;\n\n    if (!data.path.length) {\n      console.error('[a-tube] `path` property expected but not found.');\n      return;\n    }\n\n    const curve = new THREE.CatmullRomCurve3(data.path.map(function (point) {\n      point = point.split(' ');\n      return new THREE.Vector3(Number(point[0]), Number(point[1]), Number(point[2]));\n    }));\n    const geometry = new THREE.TubeGeometry(\n      curve, data.segments, data.radius, data.radialSegments, data.closed\n    );\n\n    if (!material) {\n      material = {};\n      material.material = new THREE.MeshPhongMaterial();\n    }\n\n    this.mesh = new THREE.Mesh(geometry, material.material);\n    this.el.setObject3D('mesh', this.mesh);\n  },\n\n  update: function (prevData) {\n    if (!Object.keys(prevData).length) return;\n\n    this.remove();\n    this.init();\n  },\n\n  remove: function () {\n    if (this.mesh) this.el.removeObject3D('mesh');\n  }\n});\n", "require('./a-grid');\nrequire('./a-ocean');\nrequire('./a-tube');\n", "require('./src/controls');\nrequire('./src/loaders');\nrequire('./src/misc');\nrequire('./src/pathfinding');\nrequire('./src/primitives');\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,QAAM,MAAM;AAEZ,WAAO,UAAU,OAAO,kBAAkB,uBAAuB;AAAA,MAC/D,QAAQ;AAAA,QACN,SAAS,EAAC,SAAS,KAAI;AAAA,QACvB,MAAM,EAAC,SAAS,YAAY,OAAO,CAAC,YAAY,SAAS,EAAC;AAAA,QAC1D,cAAc,EAAC,SAAS,EAAG;AAAA,MAC7B;AAAA,MAEA,MAAM,WAAY;AAChB,aAAK,SAAS;AACd,aAAK,aAAa;AAElB,aAAK,uBAAuB;AAE5B,aAAK,SAAS,IAAI,MAAM,QAAQ;AAChC,aAAK,WAAW,IAAI,MAAM,QAAQ;AAClC,aAAK,iBAAiB,IAAI,MAAM,QAAQ;AAAA,MAC1C;AAAA,MAEA,MAAM,WAAY;AAAE,aAAK,SAAS;AAAA,MAAM;AAAA,MACxC,OAAO,WAAY;AAAE,aAAK,SAAS;AAAA,MAAO;AAAA,MAE1C,eAAe,SAAU,YAAY;AACnC,cAAM,KAAK,KAAK;AAEhB,YAAI,CAAC,KAAK,OAAQ;AAClB,YAAI,KAAK,eAAe,WAAY;AAEpC,YAAI,KAAK,YAAY;AACnB,aAAG,KAAK,kBAAkB,EAAC,YAAY,KAAK,WAAU,CAAC;AAAA,QACzD;AAEA,aAAK,aAAa;AAClB,aAAK,KAAK;AAGV,YAAI,KAAK,SAAS,WAAW,KAAK,cAAc,IAAI,KAAK;AACvD,eAAK,aAAa;AAClB;AAAA,QACF;AAEA,WAAG,KAAK,oBAAoB,EAAC,WAAsB,CAAC;AAEpD,YAAI,KAAK,KAAK,SAAS,YAAY;AACjC,eAAK,GAAG,aAAa,YAAY,KAAK,cAAc;AACpD,eAAK,aAAa;AAClB,aAAG,KAAK,kBAAkB,EAAC,WAAsB,CAAC;AAClD,aAAG,WAAW,mBAAmB,EAAE,kBAAkB;AAAA,QACvD;AAAA,MACF;AAAA,MAEA,kBAAkB,WAAY;AAC5B,eAAO,CAAC,EAAE,KAAK,UAAU,KAAK;AAAA,MAChC;AAAA,MAEA,aAAa,WAAY;AACvB,YAAI,CAAC,KAAK,OAAQ;AAElB,cAAM,OAAO,KAAK;AAClB,cAAM,SAAS,KAAK;AACpB,cAAM,WAAW,KAAK;AACtB,cAAM,iBAAiB,KAAK;AAC5B,cAAM,aAAa,KAAK;AAExB,aAAK,KAAK;AACV,YAAI,SAAS,WAAW,cAAc,IAAI,KAAK;AAC7C,eAAK,aAAa;AAClB,eAAK,GAAG,KAAK,kBAAkB,EAAC,WAAsB,CAAC;AACvD,iBAAO,OAAO,IAAI,GAAG,GAAG,CAAC;AAAA,QAC3B;AACA,eAAO,UAAU,KAAK,YAAY;AAClC,eAAO;AAAA,MACT;AAAA,MAEA,MAAM,WAAY;AAChB,cAAM,SAAS,KAAK;AACpB,cAAM,WAAW,KAAK;AACtB,cAAM,iBAAiB,KAAK;AAE5B,iBAAS,KAAK,KAAK,GAAG,aAAa,UAAU,CAAC;AAC9C,aAAK,WAAW,SAAS,iBAAiB,cAAc;AACxD,uBAAe,IAAI,KAAK,WAAW,WAAW,WAAW,UAAU,CAAC;AACpE,eAAO,KAAK,cAAc,EAAE,IAAI,QAAQ;AAAA,MAC1C;AAAA,IACF,CAAC;AAAA;AAAA;;;ACrFD;AAAA;AAAA,WAAO,UAAU,OAAO,OAAO,SAAS,gBAAiB;AAAA,IAAC,GAAG;AAAA,MAC5D,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MAER,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MACd,cAAc;AAAA,MAEd,QAAQ;AAAA,MACR,OAAO;AAAA,MAEP,SAAS;AAAA,MACT,WAAW;AAAA,MACX,WAAW;AAAA,MACX,YAAY;AAAA,MAEZ,QAAQ;AAAA,IACT,CAAC;AAAA;AAAA;;;ACpBD;AAAA;AAAA,aAAS,mBAAoB,MAAM,OAAO,SAAS;AACjD,WAAK,OAAO;AACZ,WAAK,QAAQ;AACb,WAAK,UAAU,QAAQ;AACvB,WAAK,QAAQ,QAAQ;AAAA,IACvB;AAEA,WAAO,UAAU;AAAA;AAAA;;;ACPjB;AAAA;AASA,QAAM,gBAAgB;AAAtB,QACI,qBAAqB;AAEzB,QAAM,eAAe;AAErB,QAAM,OAAO;AAAA,MACX,MAAM;AAAA,MACN,OAAO;AAAA,IACT;AAEA,QAAM,WAAW;AAAA,MACf,UAAU;AAAA,MACV,UAAU;AAAA,IACZ;AAEA,WAAO,UAAU,OAAO,kBAAkB,oBAAoB;AAAA;AAAA;AAAA;AAAA,MAM5D;AAAA;AAAA;AAAA;AAAA,MAMA,QAAQ;AAAA;AAAA,QAEN,SAAS,EAAE,SAAS,KAAK;AAAA;AAAA,QAGzB,qBAAqB,EAAE,SAAS,EAAI;AAAA,MACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASA,MAAM,WAAY;AAChB,cAAM,UAAU,KAAK,GAAG;AAExB,aAAK,SAAS,QAAQ,QAAQ,wBAAwB,KAAK,EAAC,aAAa,CAAC,EAAC;AAE3E,aAAK,WAAW,OAAO,YAAY,IAAI;AAGvC,aAAK,UAAU,CAAC;AAGhB,cAAM,WAAW,KAAK,GAAG,SAAS;AAClC,aAAK,QAAQ,IAAI,MAAM,SAAS;AAChC,aAAK,MAAM,SAAS,IAAI,SAAS;AACjC,aAAK,MAAM,IAAI,MAAM,SAAS;AAC9B,aAAK,IAAI,SAAS,IAAI;AACtB,aAAK,IAAI,SAAS,IAAI,SAAS;AAC/B,aAAK,IAAI,IAAI,KAAK,KAAK;AAEvB,aAAK,cAAc,IAAI,MAAM,QAAQ;AACrC,aAAK,cAAc,IAAI,MAAM,QAAQ;AACrC,aAAK,cAAc,IAAI,MAAM,QAAQ;AAErC,gBAAQ,YAAY,IAAI;AAAA,MAC1B;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,QAAQ,WAAY;AAAE,aAAK,KAAK;AAAA,MAAG;AAAA;AAAA;AAAA;AAAA,MAKnC,MAAM,SAAU,GAAG,IAAI;AACrB,aAAK,kBAAkB;AACvB,aAAK,eAAe,EAAE;AAAA,MACxB;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,QAAQ,WAAY;AAAA,MAAE;AAAA;AAAA;AAAA;AAAA,MAMtB,kBAAkB,WAAY;AAC5B,YAAI,CAAC,KAAK,KAAK,WAAW,CAAC,KAAK,YAAY,EAAG,QAAO;AAEtD,cAAM,OAAO,KAAK;AAClB,cAAM,WAAW,KAAK;AAEtB,aAAK,QAAQ,IAAI;AACjB,aAAK,YAAY,SAAS,UAAU,QAAQ;AAE5C,cAAM,SAAS,KAAK,KAAK,SAAS;AAClC,cAAM,SAAS,KAAK,KAAK,SAAS;AAElC,eAAO,KAAK,IAAI,MAAM,IAAI,gBAAgB,KAAK,IAAI,MAAM,IAAI;AAAA,MAC/D;AAAA,MAEA,kBAAkB,WAAY;AAC5B,cAAM,OAAO,KAAK;AAClB,cAAM,WAAW,KAAK;AAEtB,aAAK,QAAQ,IAAI;AACjB,aAAK,YAAY,SAAS,UAAU,QAAQ;AAE5C,cAAM,SAAS,KAAK,KAAK,SAAS;AAClC,cAAM,SAAS,KAAK,KAAK,SAAS;AAClC,cAAM,YAAY,IAAI,MAAM,QAAQ;AAEpC,YAAI,KAAK,IAAI,MAAM,IAAI,cAAc;AACnC,oBAAU,KAAK;AAAA,QACjB;AACA,YAAI,KAAK,IAAI,MAAM,IAAI,cAAc;AACnC,oBAAU,KAAK;AAAA,QACjB;AAEA,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA,MAMA,kBAAkB,WAAY;AAC5B,YAAI,CAAC,KAAK,KAAK,WAAW,CAAC,KAAK,YAAY,EAAG,QAAO;AAEtD,cAAM,WAAW,KAAK;AAEtB,aAAK,YAAY,SAAS,UAAU,QAAQ;AAE5C,eAAO,KAAK,IAAI,SAAS,CAAC,IAAI,gBAAgB,KAAK,IAAI,SAAS,CAAC,IAAI;AAAA,MACvE;AAAA,MAEA,gBAAgB,SAAU,IAAI;AAC5B,YAAI,CAAC,KAAK,iBAAiB,EAAG;AAE9B,cAAM,OAAO,KAAK;AAClB,cAAM,MAAM,KAAK;AACjB,cAAM,QAAQ,KAAK;AAInB,YAAI,SAAS,IAAI,KAAK,GAAG,SAAS,SAAS;AAC3C,cAAM,SAAS,IAAI,KAAK,GAAG,SAAS,SAAS;AAE7C,cAAM,aAAa,KAAK;AAExB,aAAK,YAAY,SAAS,UAAU,UAAU;AAE9C,YAAI,KAAK,IAAI,WAAW,CAAC,KAAK,aAAc,YAAW,IAAI;AAC3D,YAAI,KAAK,IAAI,WAAW,CAAC,KAAK,aAAc,YAAW,IAAI;AAE3D,mBAAW,eAAe,KAAK,sBAAsB,KAAK,GAAI;AAC9D,YAAI,SAAS,KAAK,WAAW;AAC7B,cAAM,SAAS,KAAK,WAAW;AAC/B,cAAM,SAAS,IAAI,KAAK,IAAI,CAAE,KAAK,KAAK,GAAG,KAAK,IAAI,KAAK,KAAK,GAAG,MAAM,SAAS,CAAC,CAAC;AAClF,aAAK,GAAG,SAAS,SAAS,IAAI,MAAM,SAAS,GAAG,IAAI,SAAS,GAAG,CAAC;AAAA,MACnE;AAAA;AAAA;AAAA;AAAA,MAMA,mBAAmB,WAAY;AAC7B,cAAM,UAAU,KAAK,WAAW,KAAK,KAAK;AAC1C,YAAI,KAAK,KAAK,WAAW,SAAS;AAGhC,mBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,QAAQ,KAAK;AAC/C,gBAAI,QAAQ,QAAQ,CAAC,EAAE,WAAW,CAAC,KAAK,QAAQ,CAAC,GAAG;AAClD,mBAAK,KAAK,IAAI,mBAAmB,qBAAqB,GAAG,QAAQ,QAAQ,CAAC,CAAC,CAAC;AAAA,YAC9E,WAAW,CAAC,QAAQ,QAAQ,CAAC,EAAE,WAAW,KAAK,QAAQ,CAAC,GAAG;AACzD,mBAAK,KAAK,IAAI,mBAAmB,mBAAmB,GAAG,QAAQ,QAAQ,CAAC,CAAC,CAAC;AAAA,YAC5E;AACA,iBAAK,QAAQ,CAAC,IAAI,QAAQ,QAAQ,CAAC,EAAE;AAAA,UACvC;AAAA,QAEF,WAAW,OAAO,KAAK,KAAK,OAAO,GAAG;AAEpC,eAAK,UAAU,CAAC;AAAA,QAClB;AAAA,MACF;AAAA,MAEA,MAAM,SAAU,OAAO;AAErB,aAAK,GAAG,KAAK,MAAM,MAAM,KAAK;AAG9B,aAAK,GAAG;AAAA,UACN,MAAM,OAAO,MAAM,MAAM;AAAA,UACzB,IAAI,mBAAmB,MAAM,MAAM,MAAM,OAAO,KAAK;AAAA,QACvD;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAcA,YAAa,2BAAY;AACvB,cAAM,cAAc,CAAC;AACrB,cAAM,SAAS,CAAC;AAEhB,eAAO,SAAU,gBAAgB;AAE/B,gBAAM,gBAAgB,KAAK,GAAG,QAAQ,WAAW,gBAAgB;AACjE,gBAAM,eAAe,iBAAiB,cAAc,YAAY,KAC3D,cAAc,WAAW,CAAC;AAC/B,cAAI,aAAc,QAAO;AAGzB,sBAAY,SAAS;AACrB,mBAAS,IAAI,GAAG,IAAI,KAAK,OAAO,YAAY,QAAQ,KAAK;AACvD,kBAAM,eAAe,KAAK,OAAO,YAAY,CAAC;AAC9C,kBAAM,YAAY,eAAe,aAAa,UAAU;AACxD,wBAAY,KAAK,SAAS;AAC1B,gBAAI,aAAa,aAAa,eAAe,eAAgB,QAAO;AAAA,UACtE;AAGA,gBAAM,cAAc,UAAU,cAAc,UAAU,YAAY,IAAI;AACtE,mBAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC3C,kBAAM,aAAa,YAAY,CAAC;AAChC,gBAAI,cAAc,WAAW,SAAS,eAAgB,QAAO;AAAA,UAC/D;AAEA,iBAAO,YAAY,CAAC,KAAK,YAAY,CAAC;AAAA,QACxC;AAAA,MACF,EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOH,WAAW,SAAU,OAAO;AAC1B,eAAO,KAAK,WAAW,KAAK,KAAK,EAAE,QAAQ,KAAK;AAAA,MAClD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,SAAS,SAAU,OAAO;AACxB,eAAO,KAAK,WAAW,QAAQ,IAAI,KAAK,QAAQ,KAAK,IAAI,EAAE,KAAK,KAAK;AAAA,MACvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,aAAa,SAAU,OAAO,QAAQ;AACpC,cAAM,UAAU,KAAK,WAAW,UAAU,SAAS,WAAW,KAAK,OAAO,KAAK,KAAK;AAGpF,YAAI,CAAC,SAAS;AACZ,iBAAO,OAAO,IAAI,GAAG,CAAC;AAAA,QACxB;AACA,YAAI,QAAQ,YAAY,eAAe;AAErC,kBAAQ,OAAO;AAAA,YACb,KAAK,SAAS;AAAU,qBAAO,OAAO,IAAI,QAAQ,KAAK,CAAC,GAAG,QAAQ,KAAK,CAAC,CAAC;AAAA,YAC1E,KAAK,SAAS;AAAU,qBAAO,OAAO,IAAI,QAAQ,KAAK,CAAC,GAAG,CAAC;AAAA,UAC9D;AAAA,QACF,OAAO;AACL,kBAAQ,OAAO;AAAA,YACb,KAAK,SAAS;AAAU,qBAAO,OAAO,IAAI,QAAQ,KAAK,CAAC,GAAG,QAAQ,KAAK,CAAC,CAAC;AAAA,YAC1E,KAAK,SAAS;AAAU,qBAAO,OAAO,IAAI,QAAQ,KAAK,CAAC,GAAG,QAAQ,KAAK,CAAC,CAAC;AAAA,UAC5E;AAAA,QACF;AACA,cAAM,IAAI,MAAM,mCAAmC,KAAK;AAAA,MAC1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,SAAS,SAAU,QAAQ;AACzB,cAAM,UAAU,KAAK,WAAW,KAAK,IAAI;AACzC,YAAI,CAAC,SAAS;AACZ,iBAAO,OAAO,IAAI,GAAG,CAAC;AAAA,QACxB;AACA,YAAI,CAAC,QAAQ,QAAQ,cAAc,UAAU,GAAG;AAC9C,iBAAO,OAAO,IAAI,GAAG,CAAC;AAAA,QACxB;AACA,eAAO,OAAO;AAAA,WACX,QAAQ,QAAQ,cAAc,UAAU,EAAE,UAAU,IAAI,MACtD,QAAQ,QAAQ,cAAc,SAAS,EAAE,UAAU,KAAK;AAAA,WAC1D,QAAQ,QAAQ,cAAc,OAAO,EAAE,UAAU,KAAK,MACpD,QAAQ,QAAQ,cAAc,SAAS,EAAE,UAAU,IAAI;AAAA,QAC5D;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,aAAa,WAAY;AACvB,cAAM,UAAU,KAAK,WAAW,KAAK,IAAI;AACzC,eAAO,CAAC,EAAE,WAAW,QAAQ;AAAA,MAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,OAAO,WAAY;AACjB,eAAO,KAAK,WAAW,KAAK,IAAI,EAAE;AAAA,MACpC;AAAA,IACF,CAAC;AAAA;AAAA;;;ACpVD;AAAA;AAMA,KAAC,SAAS,QAAQ;AAChB,UAAI,sBAAuB,mBAAmB;AAC9C,UAAI,CAAC;AACH,eAAO,gBAAgB,SAASA,iBAAgB;AAAE,gBAAM,UAAU,qBAAqB;AAAA,QAAG;AAE5F,UAAI,EAAE,+BAA+B,OAAO,eAAgB,QAAO,cAAc,4BAA4B;AAC7G,UAAI,EAAE,2BAA2B,OAAO,eAAgB,QAAO,cAAc,wBAAiC;AAC9G,UAAI,EAAE,4BAA4B,OAAO,eAAgB,QAAO,cAAc,yBAAiC;AAC/G,UAAI,EAAE,6BAA6B,OAAO,eAAgB,QAAO,cAAc,0BAAiC;AAEhH,UAAI,WAAW,OAAO,cAAc,2BAChC,OAAO,OAAO,cAAc,uBAC5B,QAAQ,OAAO,cAAc,wBAC7B,SAAS,OAAO,cAAc;AAQlC,eAAS,SAAS,GAAG,IAAI;AAAE,eAAO,OAAO,CAAC,EAAE,QAAQ,EAAE,MAAM;AAAA,MAAI;AAEhE,UAAI,KAAM,WAAW;AACnB,YAAI,SAAS,UAAU,UAAU,KAAK,GAAG;AAAE,iBAAO;AAAA,QAAO;AACzD,YAAI,SAAS,UAAU,UAAU,KAAK,GAAG;AAAE,iBAAO;AAAA,QAAO;AACzD,YAAI,SAAS,UAAU,UAAU,MAAM,GAAG;AAAE,iBAAO;AAAA,QAAQ;AAC3D,YAAI,SAAS,UAAU,UAAU,OAAO,GAAG;AAAE,iBAAO;AAAA,QAAS;AAC7D,YAAI,SAAS,UAAU,WAAW,MAAM,KAAK,SAAS,UAAU,UAAU,MAAM,KAAK,SAAS,UAAU,UAAU,QAAQ,GAAG;AAAE,iBAAO;AAAA,QAAO;AAC7I,eAAO;AAAA,MACT,EAAG;AAEH,UAAI,UAAW,WAAW;AACxB,YAAI,SAAS,UAAU,WAAW,SAAS,GAAG;AAAE,iBAAO;AAAA,QAAU;AACjE,YAAI,SAAS,UAAU,QAAQ,OAAO,GAAG;AAAE,iBAAO;AAAA,QAAU;AAC5D,YAAI,SAAS,UAAU,WAAW,MAAM,GAAG;AAAE,iBAAO;AAAA,QAAM;AAC1D,YAAI,SAAS,UAAU,WAAW,QAAQ,GAAG;AAAE,iBAAO;AAAA,QAAO;AAC7D,YAAI,SAAS,UAAU,WAAW,QAAQ,GAAG;AAAE,iBAAO;AAAA,QAAS;AAC/D,eAAO;AAAA,MACT,EAAG;AAEH,UAAI,aAAa,UAAU,MAAM;AAEjC,eAAS,QAAQ,WAAW,QAAQ,OAAO;AACzC,YAAI,eAAe,UAAU,YAAY,UAAU,OAAO,QAAQ;AAChE,iBAAO,KAAK,KAAK,EAAE,QAAQ,SAAS,SAAS;AAC3C,sBAAU,OAAO,IAAI,MAAM,OAAO;AAAA,UACpC,CAAC;AAAA,QACH;AAAA,MACF;AAEA,eAAS,MAAM,GAAG,KAAK;AACrB,YAAI,IAAI,CAAC;AACT,eAAO,KAAK,CAAC,EAAE,QAAQ,SAAS,GAAG;AACjC,cAAI,OAAO,EAAE,CAAC;AACd,cAAI,OAAO,MAAM;AACf,cAAE,KAAK,GAAG,CAAC,IAAI;AAAA,UACjB;AAAA,QACF,CAAC;AACD,eAAO;AAAA,MACT;AAEA,eAAS,OAAO,GAAG;AACjB,YAAI,IAAI,CAAC;AACT,eAAO,KAAK,CAAC,EAAE,QAAQ,SAAS,GAAG;AACjC,YAAE,EAAE,CAAC,CAAC,IAAI;AAAA,QACZ,CAAC;AACD,eAAO;AAAA,MACT;AAgBA,UAAI,qBAAqB;AAAA;AAAA;AAAA,QAGvB,GAAM,EAAE,MAAM,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,QAIvB,GAAM,EAAE,MAAM,OAAO;AAAA;AAAA;AAAA,QAErB,GAAM,EAAE,MAAM,YAAY;AAAA;AAAA,QAC1B,GAAM,EAAE,MAAM,MAAM;AAAA;AAAA;AAAA,QAEpB,IAAM,EAAE,MAAM,QAAQ;AAAA;AAAA,QACtB,IAAM,EAAE,MAAM,QAAQ;AAAA;AAAA;AAAA,QAGtB,IAAM,EAAE,MAAM,QAAQ;AAAA,QACtB,IAAM,EAAE,MAAM,UAAU;AAAA,QACxB,IAAM,EAAE,MAAM,MAAM;AAAA,QACpB,IAAM,EAAE,MAAM,QAAQ;AAAA;AAAA,QACtB,IAAM,EAAE,MAAM,WAAW;AAAA;AAAA,QACzB,IAAM,EAAE,MAAM,WAAW;AAAA;AAAA,QACzB,IAAM,EAAE,MAAM,aAAa;AAAA;AAAA,QAC3B,IAAM,EAAE,MAAM,YAAY;AAAA;AAAA,QAC1B,IAAM,EAAE,MAAM,YAAY;AAAA;AAAA,QAC1B,IAAM,EAAE,MAAM,YAAY;AAAA;AAAA;AAAA,QAE1B,IAAM,EAAE,MAAM,SAAS;AAAA;AAAA,QACvB,IAAM,EAAE,MAAM,UAAU;AAAA;AAAA,QACxB,IAAM,EAAE,MAAM,aAAa;AAAA;AAAA,QAC3B,IAAM,EAAE,MAAM,SAAS;AAAA;AAAA,QACvB,IAAM,EAAE,MAAM,aAAa;AAAA;AAAA,QAE3B,IAAM,EAAE,MAAM,QAAQ;AAAA;AAAA,QACtB,IAAM,EAAE,MAAM,SAAS;AAAA;AAAA,QACvB,IAAM,EAAE,MAAM,WAAW;AAAA;AAAA,QACzB,IAAM,EAAE,MAAM,MAAM;AAAA;AAAA,QACpB,IAAM,EAAE,MAAM,OAAO;AAAA;AAAA,QACrB,IAAM,EAAE,MAAM,YAAY;AAAA;AAAA,QAC1B,IAAM,EAAE,MAAM,UAAU;AAAA;AAAA,QACxB,IAAM,EAAE,MAAM,aAAa;AAAA;AAAA,QAC3B,IAAM,EAAE,MAAM,YAAY;AAAA;AAAA,QAC1B,IAAM,EAAE,MAAM,SAAS;AAAA;AAAA,QACvB,IAAM,EAAE,MAAM,QAAQ;AAAA;AAAA,QACtB,IAAM,EAAE,MAAM,UAAU;AAAA;AAAA,QACxB,IAAM,EAAE,MAAM,cAAc;AAAA;AAAA,QAC5B,IAAM,EAAE,MAAM,SAAS;AAAA;AAAA,QACvB,IAAM,EAAE,MAAM,SAAS;AAAA;AAAA,QACvB,IAAM,EAAE,MAAM,OAAO;AAAA;AAAA,QAErB,IAAM,EAAE,MAAM,UAAU,QAAQ,IAAI;AAAA;AAAA,QACpC,IAAM,EAAE,MAAM,UAAU,QAAQ,IAAI;AAAA;AAAA,QACpC,IAAM,EAAE,MAAM,UAAU,QAAQ,IAAI;AAAA;AAAA,QACpC,IAAM,EAAE,MAAM,UAAU,QAAQ,IAAI;AAAA;AAAA,QACpC,IAAM,EAAE,MAAM,UAAU,QAAQ,IAAI;AAAA;AAAA,QACpC,IAAM,EAAE,MAAM,UAAU,QAAQ,IAAI;AAAA;AAAA,QACpC,IAAM,EAAE,MAAM,UAAU,QAAQ,IAAI;AAAA;AAAA,QACpC,IAAM,EAAE,MAAM,UAAU,QAAQ,IAAI;AAAA;AAAA,QACpC,IAAM,EAAE,MAAM,UAAU,QAAQ,IAAI;AAAA;AAAA,QACpC,IAAM,EAAE,MAAM,UAAU,QAAQ,IAAI;AAAA;AAAA;AAAA,QAGpC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAClC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAClC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAClC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAClC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAClC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAClC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAClC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAClC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAClC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAClC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAClC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAClC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAClC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAClC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAElC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAClC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAClC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAClC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAClC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAClC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAClC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAClC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAClC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAClC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAClC,IAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QAClC,IAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA;AAAA,QACvC,IAAM,EAAE,MAAM,WAAW,UAAU,MAAM;AAAA;AAAA,QACzC,IAAM,EAAE,MAAM,cAAc;AAAA;AAAA;AAAA,QAE5B,IAAM,EAAE,MAAM,UAAU;AAAA;AAAA,QAExB,IAAM,EAAE,MAAM,WAAW,QAAQ,KAAK,UAAU,OAAO;AAAA;AAAA,QACvD,IAAM,EAAE,MAAM,WAAW,QAAQ,KAAK,UAAU,OAAO;AAAA;AAAA,QACvD,IAAM,EAAE,MAAM,WAAW,QAAQ,KAAK,UAAU,OAAO;AAAA;AAAA,QACvD,IAAM,EAAE,MAAM,WAAW,QAAQ,KAAK,UAAU,OAAO;AAAA;AAAA,QACvD,KAAM,EAAE,MAAM,WAAW,QAAQ,KAAK,UAAU,OAAO;AAAA;AAAA,QACvD,KAAM,EAAE,MAAM,WAAW,QAAQ,KAAK,UAAU,OAAO;AAAA;AAAA,QACvD,KAAM,EAAE,MAAM,WAAW,QAAQ,KAAK,UAAU,OAAO;AAAA;AAAA,QACvD,KAAM,EAAE,MAAM,WAAW,QAAQ,KAAK,UAAU,OAAO;AAAA;AAAA,QACvD,KAAM,EAAE,MAAM,WAAW,QAAQ,KAAK,UAAU,OAAO;AAAA;AAAA,QACvD,KAAM,EAAE,MAAM,WAAW,QAAQ,KAAK,UAAU,OAAO;AAAA;AAAA,QACvD,KAAM,EAAE,MAAM,kBAAkB,QAAQ,KAAK,UAAU,OAAO;AAAA;AAAA,QAC9D,KAAM,EAAE,MAAM,aAAa,QAAQ,KAAK,UAAU,OAAO;AAAA;AAAA,QACzD,KAAM,EAAE,MAAM,eAAe,QAAQ,KAAK,UAAU,OAAO;AAAA;AAAA,QAC3D,KAAM,EAAE,MAAM,kBAAkB,QAAQ,KAAK,UAAU,OAAO;AAAA;AAAA,QAC9D,KAAM,EAAE,MAAM,iBAAiB,QAAQ,KAAK,UAAU,OAAO;AAAA;AAAA,QAC7D,KAAM,EAAE,MAAM,gBAAgB,QAAQ,KAAK,UAAU,OAAO;AAAA;AAAA,QAE5D,KAAM,EAAE,MAAM,KAAK;AAAA;AAAA,QACnB,KAAM,EAAE,MAAM,KAAK;AAAA;AAAA,QACnB,KAAM,EAAE,MAAM,KAAK;AAAA;AAAA,QACnB,KAAM,EAAE,MAAM,KAAK;AAAA;AAAA,QACnB,KAAM,EAAE,MAAM,KAAK;AAAA;AAAA,QACnB,KAAM,EAAE,MAAM,KAAK;AAAA;AAAA,QACnB,KAAM,EAAE,MAAM,KAAK;AAAA;AAAA,QACnB,KAAM,EAAE,MAAM,KAAK;AAAA;AAAA,QACnB,KAAM,EAAE,MAAM,KAAK;AAAA;AAAA,QACnB,KAAM,EAAE,MAAM,MAAM;AAAA;AAAA,QACpB,KAAM,EAAE,MAAM,MAAM;AAAA;AAAA,QACpB,KAAM,EAAE,MAAM,MAAM;AAAA;AAAA,QACpB,KAAM,EAAE,MAAM,MAAM;AAAA;AAAA,QACpB,KAAM,EAAE,MAAM,MAAM;AAAA;AAAA,QACpB,KAAM,EAAE,MAAM,MAAM;AAAA;AAAA,QACpB,KAAM,EAAE,MAAM,MAAM;AAAA;AAAA,QAEpB,KAAM,EAAE,MAAM,MAAM;AAAA;AAAA,QACpB,KAAM,EAAE,MAAM,MAAM;AAAA;AAAA,QACpB,KAAM,EAAE,MAAM,MAAM;AAAA;AAAA,QACpB,KAAM,EAAE,MAAM,MAAM;AAAA;AAAA,QACpB,KAAM,EAAE,MAAM,MAAM;AAAA;AAAA,QACpB,KAAM,EAAE,MAAM,MAAM;AAAA;AAAA,QACpB,KAAM,EAAE,MAAM,MAAM;AAAA;AAAA,QACpB,KAAM,EAAE,MAAM,MAAM;AAAA;AAAA;AAAA,QAGpB,KAAM,EAAE,MAAM,WAAW,UAAU,OAAO;AAAA;AAAA,QAC1C,KAAM,EAAE,MAAM,aAAa;AAAA;AAAA;AAAA;AAAA;AAAA,QAK3B,KAAM,EAAE,MAAM,aAAa,UAAU,KAAK;AAAA;AAAA,QAC1C,KAAM,EAAE,MAAM,cAAc,UAAU,MAAM;AAAA;AAAA,QAC5C,KAAM,EAAE,MAAM,eAAe,UAAU,KAAK;AAAA;AAAA,QAC5C,KAAM,EAAE,MAAM,gBAAgB,UAAU,MAAM;AAAA;AAAA,QAC9C,KAAM,EAAE,MAAM,WAAW,UAAU,KAAK;AAAA;AAAA,QACxC,KAAM,EAAE,MAAM,YAAY,UAAU,MAAM;AAAA;AAAA,QAE1C,KAAM,EAAE,MAAM,cAAc;AAAA;AAAA,QAC5B,KAAM,EAAE,MAAM,iBAAiB;AAAA;AAAA,QAC/B,KAAM,EAAE,MAAM,iBAAiB;AAAA;AAAA,QAC/B,KAAM,EAAE,MAAM,cAAc;AAAA;AAAA,QAC5B,KAAM,EAAE,MAAM,gBAAgB;AAAA;AAAA,QAC9B,KAAM,EAAE,MAAM,mBAAmB;AAAA;AAAA,QACjC,KAAM,EAAE,MAAM,cAAc;AAAA;AAAA,QAC5B,KAAM,EAAE,MAAM,aAAa;AAAA;AAAA,QAC3B,KAAM,EAAE,MAAM,aAAa;AAAA;AAAA,QAC3B,KAAM,EAAE,MAAM,WAAW;AAAA;AAAA,QAEzB,KAAM,EAAE,MAAM,iBAAiB;AAAA;AAAA,QAC/B,KAAM,EAAE,MAAM,qBAAqB;AAAA;AAAA,QACnC,KAAM,EAAE,MAAM,YAAY;AAAA;AAAA,QAC1B,KAAM,EAAE,MAAM,iBAAiB;AAAA;AAAA,QAC/B,KAAM,EAAE,MAAM,aAAa;AAAA;AAAA,QAC3B,KAAM,EAAE,MAAM,cAAc;AAAA,QAC5B,KAAM,EAAE,MAAM,aAAa;AAAA,QAC3B,KAAM,EAAE,MAAM,aAAa;AAAA;AAAA,QAE3B,KAAM,EAAE,MAAM,aAAc,QAAQ,IAAI;AAAA;AAAA,QACxC,KAAM,EAAE,MAAM,SAAS,QAAQ,IAAI;AAAA;AAAA,QACnC,KAAM,EAAE,MAAM,SAAS,QAAQ,IAAI;AAAA;AAAA,QACnC,KAAM,EAAE,MAAM,SAAS,QAAQ,IAAI;AAAA;AAAA,QACnC,KAAM,EAAE,MAAM,UAAU,QAAQ,IAAI;AAAA;AAAA,QACpC,KAAM,EAAE,MAAM,SAAS,QAAQ,IAAI;AAAA;AAAA,QAEnC,KAAM,EAAE,MAAM,aAAa,QAAQ,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,QAKvC,KAAM,EAAE,MAAM,eAAe,QAAQ,IAAI;AAAA;AAAA,QACzC,KAAM,EAAE,MAAM,aAAc,QAAQ,KAAK;AAAA;AAAA,QACzC,KAAM,EAAE,MAAM,gBAAgB,QAAQ,IAAI;AAAA;AAAA,QAC1C,KAAM,EAAE,MAAM,SAAS,QAAQ,IAAK;AAAA;AAAA;AAAA;AAAA;AAAA,QAKpC,KAAM,EAAE,MAAM,iBAAkB,QAAQ,KAAK;AAAA;AAAA;AAAA,QAE7C,KAAM,EAAE,MAAM,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOxB,KAAM,EAAE,MAAM,OAAO;AAAA;AAAA,QACrB,KAAM,EAAE,MAAM,QAAQ;AAAA;AAAA,QACtB,KAAM,EAAE,MAAM,QAAQ;AAAA;AAAA,QACtB,KAAM,EAAE,MAAM,WAAW;AAAA;AAAA,QACzB,KAAM,EAAE,MAAM,OAAO;AAAA;AAAA,QACrB,KAAM,EAAE,MAAM,aAAa;AAAA;AAAA;AAAA;AAAA,QAG3B,KAAM,EAAE,MAAM,QAAQ;AAAA;AAAA,MACxB;AAyBA;AAAA,QAAQ;AAAA,QACA;AAAA,QAAO;AAAA,UACL,IAAM,EAAE,MAAM,aAAa,QAAQ,IAAI;AAAA;AAAA,UACvC,IAAM,EAAE,MAAM,SAAS,QAAQ,IAAI;AAAA;AAAA,UACnC,KAAM,EAAE,MAAM,SAAS,QAAQ,IAAI;AAAA;AAAA,UACnC,KAAM,EAAE,MAAM,SAAS,QAAQ,IAAI;AAAA;AAAA,UACnC,KAAM,EAAE,MAAM,aAAa,QAAQ,KAAK,UAAU,OAAO;AAAA;AAAA,UACzD,KAAM,EAAE,MAAM,kBAAkB,QAAQ,KAAK,UAAU,OAAO;AAAA;AAAA,QAChE;AAAA,MAAC;AAET;AAAA,QAAQ;AAAA,QACA;AAAA,QAAW;AAAA,UACT,IAAM,EAAE,MAAM,WAAW,UAAU,OAAO;AAAA;AAAA,UAC1C,KAAM,EAAE,MAAM,SAAS,QAAQ,IAAI;AAAA;AAAA,QACrC;AAAA,MAAC;AAET;AAAA,QAAQ;AAAA,QACA;AAAA,QAAW;AAAA,UACT,KAAM,EAAE,MAAM,SAAS,QAAQ,IAAI;AAAA;AAAA,QACrC;AAAA,MAAC;AAET;AAAA,QAAQ;AAAA,QACA;AAAA,QAAc;AAAA,UACZ,IAAM,EAAE,MAAM,WAAW,UAAU,MAAM;AAAA;AAAA,QAC3C;AAAA,MAAC;AAGT,UAAI,GAAG;AACL;AAAA,UAAQ;AAAA,UACA;AAAA,UAAc;AAAA,YACZ,KAAM,EAAE,MAAM,SAAS,QAAQ,IAAK;AAAA;AAAA,YACpC,KAAM,EAAE,MAAM,aAAc,QAAQ,KAAK;AAAA;AAAA,YACzC,KAAM,EAAE,MAAM,aAAa,QAAQ,IAAI;AAAA;AAAA,UACzC;AAAA,QAAC;AAET;AAAA,UAAQ;AAAA,UACA;AAAA,UAAM;AAAA,YACJ,KAAM,EAAE,MAAM,SAAS,QAAQ,IAAK;AAAA;AAAA,YACpC,KAAM,EAAE,MAAM,aAAc,QAAQ,KAAK;AAAA;AAAA,YACzC,KAAM,EAAE,MAAM,aAAa,QAAQ,IAAI;AAAA;AAAA,UACzC;AAAA,QAAC;AAAA,MACX;AAEA;AAAA,QAAQ;AAAA,QACA;AAAA,QAAU;AAAA,UACR,GAAM,EAAE,MAAM,QAAQ;AAAA;AAAA,UACtB,IAAM,EAAE,MAAM,MAAM;AAAA;AAAA,QACtB;AAAA,MAAC;AAET;AAAA,QAAQ;AAAA,QACA;AAAA,QAAO;AAAA,UACL,IAAM,EAAE,MAAM,SAAS,UAAU,SAAS;AAAA;AAAA,QAC5C;AAAA,MAAC;AAET;AAAA,QAAQ;AAAA,QACA;AAAA,QAAc;AAAA,UACZ,IAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA;AAAA,UACvC,IAAM,EAAE,MAAM,WAAW,UAAU,MAAM;AAAA;AAAA,UACzC,KAAM,EAAE,MAAM,QAAQ,QAAQ,IAAI;AAAA;AAAA,QACpC;AAAA,MAAC;AAaT,UAAI,qBAAqB,CAAC;AAC1B,UAAI,WAAW,IAAI;AACjB,2BAAmB,QAAQ,IAAI,EAAE,MAAM,aAAa,UAAU,KAAK;AACnE,2BAAmB,QAAQ,IAAI,EAAE,MAAM,cAAc,UAAU,MAAM;AACrE,2BAAmB,QAAQ,IAAI,EAAE,MAAM,eAAe,UAAU,KAAK;AACrE,2BAAmB,QAAQ,IAAI,EAAE,MAAM,gBAAgB,UAAU,MAAM;AACvE,2BAAmB,QAAQ,IAAI,EAAE,MAAM,WAAW,UAAU,KAAK;AACjE,2BAAmB,QAAQ,IAAI,EAAE,MAAM,YAAY,UAAU,MAAM;AAAA,MACrE;AACA,UAAI,iBAAiB,YAAY;AAC/B,2BAAmB,QAAQ,IAAI,EAAE,MAAM,cAAc;AAAA,MACvD;AACA,UAAI,iBAAiB,YAAY;AAC/B,2BAAmB,QAAQ,IAAI,EAAE,MAAM,cAAc;AAAA,MACvD;AACA,UAAI,UAAU,IAAI;AAEhB,2BAAmB,QAAQ,IAAI,EAAE,MAAM,WAAW;AAElD,2BAAmB,QAAQ,IAAI,EAAE,MAAM,YAAY;AACnD,2BAAmB,QAAQ,IAAI,EAAE,MAAM,aAAa;AACpD,2BAAmB,QAAQ,IAAI,EAAE,MAAM,UAAU;AACjD,2BAAmB,QAAQ,IAAI,EAAE,MAAM,YAAY;AAEnD,2BAAmB,QAAQ,IAAI,EAAE,MAAM,OAAO;AAC9C,2BAAmB,QAAQ,IAAI,EAAE,MAAM,MAAM;AAC7C,2BAAmB,QAAQ,IAAI,EAAE,MAAM,SAAS;AAChD,2BAAmB,QAAQ,IAAI,EAAE,MAAM,WAAW;AAAA,MACpD;AAYA,UAAI,gBAAgB,CAAC;AACrB,oBAAc,IAAI,IAAI;AAAA,QACpB,IAAM,EAAE,MAAM,aAAa,UAAU,KAAK;AAAA;AAAA,QAC1C,IAAM,EAAE,MAAM,eAAe,UAAU,KAAK;AAAA;AAAA,QAC5C,IAAM,EAAE,MAAM,WAAW,UAAU,KAAK;AAAA;AAAA,MAC1C;AACA,oBAAc,KAAK,IAAI;AAAA,QACrB,IAAM,EAAE,MAAM,cAAc,UAAU,MAAM;AAAA;AAAA,QAC5C,IAAM,EAAE,MAAM,gBAAgB,UAAU,MAAM;AAAA;AAAA,QAC9C,IAAM,EAAE,MAAM,YAAY,UAAU,MAAM;AAAA;AAAA,MAC5C;AACA,oBAAc,MAAM,IAAI;AAAA,QACtB,IAAM,EAAE,MAAM,eAAe,UAAU,OAAO;AAAA;AAAA,MAChD;AAEA,cAAQ,cAAc,MAAM,GAAG,OAAO;AAAA,QACpC,KAAM,EAAE,MAAM,kBAAkB,UAAU,OAAO;AAAA;AAAA,QACjD,KAAM,EAAE,MAAM,aAAa,UAAU,OAAO;AAAA;AAAA,MAC9C,CAAC;AACD,cAAQ,cAAc,IAAI,GAAG,WAAW;AAAA,QACtC,KAAM,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA;AAAA,MACzC,CAAC;AACD,cAAQ,cAAc,KAAK,GAAG,WAAW;AAAA,QACvC,KAAM,EAAE,MAAM,WAAW,UAAU,MAAM;AAAA;AAAA,MAC3C,CAAC;AACD,cAAQ,cAAc,KAAK,GAAG,WAAW;AAAA,QACvC,IAAM,EAAE,MAAM,WAAW,UAAU,MAAM;AAAA;AAAA,MAC3C,CAAC;AAGD,cAAQ,cAAc,KAAK,GAAG,OAAO;AAAA,QACnC,IAAM,EAAE,MAAM,WAAW,UAAU,MAAM;AAAA;AAAA,MAC3C,CAAC;AAED,cAAQ,cAAc,MAAM,GAAG,cAAc;AAAA,QAC3C,IAAM,EAAE,MAAM,WAAW,UAAU,OAAO;AAAA;AAAA,MAC5C,CAAC;AAED,cAAQ,cAAc,MAAM,GAAG,cAAc;AAAA,QAC3C,IAAM,EAAE,MAAM,WAAW,UAAU,OAAO;AAAA;AAAA,QAC1C,KAAM,EAAE,MAAM,aAAa,UAAU,OAAO;AAAA;AAAA,QAC5C,KAAM,EAAE,MAAM,kBAAkB,UAAU,OAAO;AAAA;AAAA,QACjD,KAAM,EAAE,MAAM,iBAAiB,UAAU,OAAO;AAAA;AAAA,QAChD,KAAM,EAAE,MAAM,gBAAgB,UAAU,OAAO;AAAA;AAAA,MACjD,CAAC;AAeD,UAAI,iBAAiB;AAAA;AAAA,QAEnB,WAAW,EAAE,KAAK,QAAQ;AAAA,QAC1B,YAAY,EAAE,KAAK,QAAQ;AAAA,QAC3B,aAAa,EAAE,KAAK,UAAU;AAAA,QAC9B,cAAc,EAAE,KAAK,UAAU;AAAA,QAC/B,SAAS,EAAE,KAAK,MAAM;AAAA,QACtB,UAAU,EAAE,KAAK,MAAM;AAAA,QACvB,QAAQ,EAAE,KAAK,KAAK;AAAA,QACpB,SAAS,EAAE,KAAK,KAAK;AAAA;AAAA,QAGrB,aAAa,EAAE,KAAK,QAAQ;AAAA,QAC5B,OAAO,EAAE,KAAK,IAAI;AAAA;AAAA,QAGlB,QAAQ,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAClC,QAAQ,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAClC,QAAQ,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAClC,QAAQ,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAClC,QAAQ,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAClC,QAAQ,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAClC,QAAQ,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAClC,QAAQ,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAClC,QAAQ,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAClC,QAAQ,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAClC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,MAAM,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAChC,SAAS,EAAE,KAAK,IAAI;AAAA,QACpB,SAAS,EAAE,KAAK,IAAI;AAAA,QACpB,SAAS,EAAE,KAAK,IAAI;AAAA,QACpB,SAAS,EAAE,KAAK,IAAI;AAAA,QACpB,SAAS,EAAE,KAAK,IAAI;AAAA,QACpB,SAAS,EAAE,KAAK,IAAI;AAAA,QACpB,SAAS,EAAE,KAAK,IAAI;AAAA,QACpB,SAAS,EAAE,KAAK,IAAI;AAAA,QACpB,SAAS,EAAE,KAAK,IAAI;AAAA,QACpB,SAAS,EAAE,KAAK,IAAI;AAAA,QACpB,gBAAgB,EAAE,KAAK,IAAI;AAAA,QAC3B,WAAW,EAAE,KAAK,IAAI;AAAA,QACtB,aAAa,EAAE,KAAK,IAAI;AAAA,QACxB,gBAAgB,EAAE,KAAK,IAAI;AAAA,QAC3B,eAAe,EAAE,KAAK,IAAI;AAAA,QAC1B,cAAc,EAAE,KAAK,IAAI;AAAA,QACzB,WAAW,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QACrC,OAAO,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QACjC,OAAO,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QACjC,OAAO,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QACjC,QAAQ,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QAClC,OAAO,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QACjC,WAAW,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QACrC,aAAa,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QACvC,WAAW,EAAE,KAAK,MAAM,UAAU,IAAI;AAAA,QACtC,cAAc,EAAE,KAAK,KAAK,UAAU,IAAI;AAAA,QACxC,OAAO,EAAE,KAAK,KAAM,UAAU,IAAI;AAAA,QAClC,eAAe,EAAE,KAAK,MAAM,UAAU,IAAI;AAAA,MAC5C;AAEA,cAAQ,gBAAgB,OAAO;AAAA,QAC7B,QAAQ,EAAE,KAAK,OAAO;AAAA,QACtB,SAAS,EAAE,KAAK,OAAO;AAAA,MACzB,CAAC;AAID,UAAI,cAAc;AAAA,QAChB,KAAK;AAAA,QACL,YAAY;AAAA,QACZ,MAAM;AAAA,QACN,IAAI;AAAA,QACJ,OAAO;AAAA,QACP,MAAM;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,QACN,gBAAgB;AAAA,QAChB,oBAAoB;AAAA,QACpB,aAAa;AAAA,QACb,WAAW;AAAA,QACX,WAAW;AAAA,QACX,iBAAiB;AAAA,QACjB,OAAO;AAAA,QACP,OAAO;AAAA,QACP,MAAM;AAAA,MACR;AASA,UAAI,YAAY,MAAM,oBAAoB,MAAM;AAEhD,UAAI;AACF,YAAI,iBAAiB,uBAAwB,cAAc,IAAI,cAAc,EAAE;AAAA,MACjF,SAAS,GAAG;AAAA,MAAC;AAEb,eAAS,gBAAgB,OAAO;AAC9B,YAAI,UAAU,aAAa,QAAQ,MAAM,UAAU,WAAW,QAAQ,MAAM,QAAQ;AAEpF,YAAI,UAAW,WAAU;AACvB,cAAI,kBAAkB,iBAAiB,OAAO;AAC5C,gBAAI,WAAW,iBAAiB,MAAM,WAAW,MAAM;AACvD,gBAAI,YAAY,WAAW,cAAc,QAAQ,GAAG;AAClD,qBAAO,cAAc,QAAQ,EAAE,OAAO;AAAA,YACxC;AAAA,UACF;AACA,cAAI,mBAAmB,SAAS,MAAM,iBAAiB,oBAAoB;AACzE,mBAAO,mBAAmB,MAAM,aAAa;AAAA,UAC/C;AACA,cAAI,WAAW,oBAAoB;AACjC,mBAAO,mBAAmB,OAAO;AAAA,UACnC;AACA,iBAAO;AAAA,QACT,EAAE;AAGF,YAAI,GAAG;AAIL,kBAAQ,MAAM,eAAe;AAAA,YAC7B,KAAK;AAAU,wBAAU,EAAE,MAAM,WAAW;AAAG;AAAA,YAC/C,KAAK;AAAU,wBAAU,EAAE,MAAM,YAAY;AAAG;AAAA,YAChD,KAAK;AAAU,wBAAU,EAAE,MAAM,aAAa;AAAG;AAAA,YACjD,KAAK;AAAU,wBAAU,EAAE,MAAM,UAAU;AAAG;AAAA,YAC9C,KAAK;AAAU,wBAAU,EAAE,MAAM,YAAY;AAAG;AAAA,UAChD;AAAA,QACF;AAEA,YAAI,CAAC;AACH,iBAAO;AAET,YAAI,MAAO,WAAW;AACpB,cAAI,QAAQ,eAAe,QAAQ,IAAI;AACvC,cAAI,CAAC,MAAO,QAAO,QAAQ;AAC3B,iBAAQ,MAAM,YAAY,cAAc,QAAS,MAAM,WAAW,MAAM;AAAA,QAC1E,EAAE;AAEF,eAAO;AAAA,UACL,MAAM,QAAQ;AAAA,UACd;AAAA,UACA,UAAU,QAAQ;AAAA,UAClB,QAAQ,QAAQ;AAAA,QAClB;AAAA,MACF;AAEA,eAAS,YAAY,MAAM,QAAQ;AACjC,eAAO,OAAO,IAAI;AAClB,YAAI,CAAC,UAAU,eAAe,IAAI,EAAG,QAAO;AAC5C,YAAI,UAAU,OAAO,MAAM,EAAE,YAAY,MAAM,QAAS,OAAM,MAAM,oBAAoB;AACxF,YAAI,UAAU,UAAU,IAAI;AAC5B,eAAO,QAAQ,UAAU,QAAQ,QAAQ;AAAA,MAC3C;AAEA,UAAI,mBAAmB,UAAU,oBAAoB,QAAQ;AAC3D,SAAC,WAAW;AACV,mBAAS,OAAO,GAAGC,IAAGC,IAAG;AACvB,gBAAID,MAAK,EAAG;AACZ,mBAAO,eAAe,GAAGA,IAAGC,EAAC;AAAA,UAC/B;AAEA,iBAAO,cAAc,WAAW,QAAQ,EAAE,KAAK,WAAW;AACxD,gBAAI,UAAU,gBAAgB,IAAI;AAClC,mBAAO,UAAU,QAAQ,OAAO;AAAA,UAClC,EAAC,CAAC;AAGF,cAAI,SAAS,cAAc,WAAW;AACpC,gBAAI,OAAO,OAAO,yBAAyB,cAAc,WAAW,KAAK;AACzE,mBAAO,eAAe,cAAc,WAAW,OAAO,EAAE,KAAK,WAAW;AACtE,kBAAI,MAAM,KAAK,IAAI,KAAK,IAAI;AAC5B,qBAAO,YAAY,eAAe,GAAG,IAAI,YAAY,GAAG,IAAI;AAAA,YAC9D,EAAC,CAAC;AAAA,UACJ;AAEA,iBAAO,cAAc,WAAW,OAAO,EAAE,KAAK,WAAW;AACvD,gBAAI,UAAU,gBAAgB,IAAI;AAClC,mBAAQ,WAAW,SAAS,UAAW,QAAQ,MAAM;AAAA,UACvD,EAAC,CAAC;AAEF,iBAAO,cAAc,WAAW,YAAY,EAAE,KAAK,WAAW;AAC5D,gBAAI,UAAU,gBAAgB,IAAI;AAClC,mBAAQ,WAAW,cAAc,UAAW,QAAQ,WAAW;AAAA,UACjE,EAAC,CAAC;AAEF,iBAAO,cAAc,WAAW,UAAU,EAAE,KAAK,WAAW;AAC1D,mBAAO;AAAA,UACT,EAAC,CAAC;AAAA,QACJ,GAAE;AAAA,MACJ;AAEA,UAAI,EAAE,iBAAiB,OAAO;AAC5B,eAAO,cAAc,cAAc;AAGrC,aAAO,cAAc,SAAS,OAAO;AACnC,YAAI,UAAU;AACZ;AAEF,YAAI,UAAU,gBAAgB,KAAK;AACnC,cAAM,OAAO,UAAU,QAAQ,OAAO;AACtC,cAAM,MAAO,WAAW,SAAS,UAAW,QAAQ,MAAM;AAC1D,cAAM,WAAY,cAAc,QAAS,MAAM,WAC5C,iBAAiB,QAAS,MAAM,cAChC,WAAW,cAAc,UAAW,QAAQ,WAAW;AAC1D,cAAM,SAAS;AAAA,MACjB;AAAA,IAEF,GAAG,MAAM;AAAA;AAAA;;;AC1tBT;AAAA;AAEA;AAEA,QAAM,aAAa;AAEnB,QAAMC,iBAAgB,OAAO;AAsB7B,WAAO,UAAU,OAAO,kBAAkB,qBAAqB;AAAA,MAC7D,QAAQ;AAAA,QACN,SAAmB,EAAE,SAAS,KAAK;AAAA,QACnC,OAAmB,EAAE,SAAS,MAAM;AAAA,MACtC;AAAA,MAEA,MAAM,WAAY;AAChB,aAAK,YAAY,IAAI,MAAM,QAAQ;AACnC,aAAK,YAAY,CAAC;AAClB,aAAK,YAAY;AAAA,UACf,SAAS,KAAK,UAAU,KAAK,IAAI;AAAA,UACjC,OAAO,KAAK,QAAQ,KAAK,IAAI;AAAA,UAC7B,MAAM,KAAK,OAAO,KAAK,IAAI;AAAA,UAC3B,eAAe,KAAK,cAAc,KAAK,IAAI;AAAA,QAC7C;AAAA,MACF;AAAA;AAAA;AAAA;AAAA,MAMA,kBAAkB,WAAY;AAC5B,eAAO,KAAK,KAAK,WAAW,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,EAAE;AAAA,MAC5D;AAAA,MAEA,kBAAkB,WAAY;AAC5B,cAAM,OAAO,KAAK;AAClB,cAAM,OAAO,KAAK,QAAQ;AAE1B,aAAK,UAAU,IAAI,GAAG,GAAG,CAAC;AAC1B,YAAI,KAAK,SAAS;AAChB,cAAI,KAAK,QAAQ,KAAK,SAAY;AAAE,iBAAK,UAAU,KAAK;AAAA,UAAG;AAC3D,cAAI,KAAK,QAAQ,KAAK,WAAY;AAAE,iBAAK,UAAU,KAAK;AAAA,UAAG;AAC3D,cAAI,KAAK,QAAQ,KAAK,WAAY;AAAE,iBAAK,UAAU,KAAK;AAAA,UAAG;AAC3D,cAAI,KAAK,QAAQ,KAAK,YAAY;AAAE,iBAAK,UAAU,KAAK;AAAA,UAAG;AAG3D,cAAI,KAAK,WAAW;AAAE,iBAAK,YAAY,KAAK,UAAU,eAAe,CAAC;AAAA,UAAG;AAAA,QAC3E;AAEA,eAAO,KAAK,UAAU,MAAM;AAAA,MAC9B;AAAA;AAAA;AAAA;AAAA,MAMA,MAAM,WAAY;AAChB,aAAK,qBAAqB;AAAA,MAC5B;AAAA,MAEA,OAAO,WAAY;AACjB,aAAK,qBAAqB;AAAA,MAC5B;AAAA,MAEA,sBAAsB,WAAY;AAChC,eAAO,iBAAiB,eAAe,KAAK,UAAU,eAAe,KAAK;AAC1E,eAAO,iBAAiB,WAAW,KAAK,UAAU,SAAS,KAAK;AAChE,eAAO,iBAAiB,SAAS,KAAK,UAAU,OAAO,KAAK;AAC5D,eAAO,iBAAiB,QAAQ,KAAK,UAAU,MAAM,KAAK;AAAA,MAC5D;AAAA,MAEA,eAAe,WAAY;AACzB,mBAAW,QAAQ,KAAK,WAAW;AACjC,cAAI,KAAK,UAAU,eAAe,IAAI,GAAG;AACvC,mBAAO,KAAK,UAAU,IAAI;AAAA,UAC5B;AAAA,QACF;AAAA,MACF;AAAA,MAEA,sBAAsB,WAAY;AAChC,eAAO,oBAAoB,WAAW,KAAK,UAAU,OAAO;AAC5D,eAAO,oBAAoB,SAAS,KAAK,UAAU,KAAK;AACxD,eAAO,oBAAoB,QAAQ,KAAK,UAAU,IAAI;AAAA,MACxD;AAAA,MAEA,WAAW,SAAU,OAAO;AAC1B,YAAI,OAAO,MAAM,sBAAsB,KAAK,GAAG;AAC7C,eAAK,UAAU,MAAM,IAAI,IAAI;AAC7B,eAAK,KAAK,KAAK;AAAA,QACjB;AAAA,MACF;AAAA,MAEA,SAAS,SAAU,OAAO;AACxB,YAAI,OAAO,MAAM,sBAAsB,KAAK,GAAG;AAC7C,iBAAO,KAAK,UAAU,MAAM,IAAI;AAChC,eAAK,KAAK,KAAK;AAAA,QACjB;AAAA,MACF;AAAA,MAEA,QAAQ,WAAY;AAClB,mBAAW,QAAQ,KAAK,WAAW;AACjC,cAAI,KAAK,UAAU,eAAe,IAAI,GAAG;AACvC,mBAAO,KAAK,UAAU,IAAI;AAAA,UAC5B;AAAA,QACF;AAAA,MACF;AAAA,MAEA,MAAM,SAAU,OAAO;AAKrB,YAAI,cAAc,OAAO;AAEvB,eAAK,GAAG,KAAK,MAAM,MAAM,KAAK;AAAA,QAChC;AAGA,aAAK,GAAG,KAAK,MAAM,OAAO,MAAM,MAAM,MAAM,IAAIA,eAAc,MAAM,MAAM,KAAK,CAAC;AAChF,YAAI,KAAK,KAAK,MAAO,SAAQ,IAAI,MAAM,OAAO,MAAM,MAAM,IAAI;AAAA,MAChE;AAAA;AAAA;AAAA;AAAA,MAMA,WAAW,SAAU,MAAM;AACzB,eAAO,QAAQ,KAAK,QAAQ;AAAA,MAC9B;AAAA,MAEA,SAAS,WAAY;AACnB,YAAI,KAAK,UAAU,GAAG;AACpB,iBAAO,KAAK,GAAG,QAAQ,WAAW,gBAAgB,EAAE,YAAY;AAAA,QAClE;AACA,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,WAAW,WAAY;AACrB,cAAM,gBAAgB,KAAK,GAAG,QAAQ,WAAW,gBAAgB;AACjE,eAAO,iBAAiB,cAAc,YAAY;AAAA,MACpD;AAAA,IAEF,CAAC;AAAA;AAAA;;;ACjKD;AAAA;AAGA,WAAO,UAAU,OAAO,kBAAkB,kBAAkB;AAAA,MAC1D,QAAQ;AAAA,QACN,SAAS,EAAE,SAAS,KAAK;AAAA,QACzB,gBAAgB,EAAE,SAAS,KAAK;AAAA,MAClC;AAAA,MAEA,MAAM,WAAY;AAChB,aAAK,YAAY,IAAI,MAAM,QAAQ;AACnC,aAAK,YAAY;AACjB,aAAK,YAAY;AAAA,MACnB;AAAA,MAEA,MAAM,WAAY;AAChB,aAAK,kBAAkB;AAAA,MACzB;AAAA,MAEA,OAAO,WAAY;AACjB,aAAK,qBAAqB;AAC1B,aAAK,UAAU,IAAI,GAAG,GAAG,CAAC;AAAA,MAC5B;AAAA,MAEA,QAAQ,WAAY;AAClB,aAAK,MAAM;AAAA,MACb;AAAA,MAEA,mBAAmB,WAAY;AAC7B,cAAM,UAAU,KAAK,GAAG;AACxB,cAAM,WAAW,QAAQ;AAEzB,YAAI,CAAC,UAAU;AACb,kBAAQ,iBAAiB,wBAAwB,KAAK,kBAAkB,KAAK,IAAI,CAAC;AAClF;AAAA,QACF;AAEA,iBAAS,iBAAiB,cAAc,KAAK,YAAY;AACzD,iBAAS,iBAAiB,YAAY,KAAK,UAAU;AACrD,cAAM,WAAW,QAAQ,aAAa,YAAY;AAClD,YAAI,YAAY,SAAS,sBAAsB;AAC7C,kBAAQ,iBAAiB,YAAY,KAAK,SAAS;AAAA,QACrD;AAAA,MACF;AAAA,MAEA,sBAAsB,WAAY;AAChC,cAAM,WAAW,KAAK,GAAG,WAAW,KAAK,GAAG,QAAQ;AACpD,YAAI,CAAC,UAAU;AAAE;AAAA,QAAQ;AAEzB,iBAAS,oBAAoB,cAAc,KAAK,YAAY;AAC5D,iBAAS,oBAAoB,YAAY,KAAK,UAAU;AACxD,aAAK,GAAG,QAAQ,oBAAoB,YAAY,KAAK,SAAS;AAAA,MAChE;AAAA,MAEA,kBAAkB,WAAY;AAC5B,eAAO,KAAK,KAAK,WAAW,CAAC,CAAC,KAAK;AAAA,MACrC;AAAA,MAEA,kBAAkB,WAAY;AAC5B,aAAK,UAAU,IAAI,KAAK;AACxB,eAAO,KAAK,UAAU,MAAM;AAAA,MAC9B;AAAA,MAEA,aAAa,WAAY;AACvB,aAAK,eAAe,KAAK,aAAa,KAAK,IAAI;AAC/C,aAAK,aAAa,KAAK,WAAW,KAAK,IAAI;AAC3C,aAAK,YAAY,KAAK,UAAU,KAAK,IAAI;AAAA,MAC3C;AAAA,MAEA,cAAc,SAAU,GAAG;AACzB,aAAK,YAAY;AACjB,YAAI,KAAK,KAAK,kBAAkB,EAAE,WAAW,EAAE,QAAQ,WAAW,GAAG;AACnE,eAAK,YAAY;AAAA,QACnB;AACA,UAAE,eAAe;AAAA,MACnB;AAAA,MAEA,YAAY,SAAU,GAAG;AACvB,aAAK,YAAY;AACjB,UAAE,eAAe;AAAA,MACnB;AAAA,MAEA,WAAW,WAAY;AAErB,cAAM,YAAY,KAAK,GAAG,QAAQ;AAClC,YAAI,CAAC,WAAW;AAAE;AAAA,QAAQ;AAC1B,kBAAU,iBAAiB,eAAe,KAAK,YAAY;AAC3D,kBAAU,iBAAiB,aAAa,KAAK,UAAU;AAAA,MACzD;AAAA,IACF,CAAC;AAAA;AAAA;;;ACzFD;AAAA;AAMA,QAAM,mBAAmB;AACzB,QAAM,YAAY;AAClB,QAAM,MAAM;AACZ,QAAM,QAAQ;AAEd,WAAO,UAAU,OAAO,kBAAkB,qBAAqB;AAAA;AAAA;AAAA;AAAA,MAM7D,cAAc,CAAC,UAAU;AAAA,MAEzB,QAAQ;AAAA,QACN,SAAoB,EAAE,SAAS,KAAK;AAAA,QACpC,UAAoB,EAAE,SAAS,CAAC,WAAW,YAAY,YAAY,OAAO,EAAE;AAAA,QAC5E,OAAoB,EAAE,SAAS,KAAK,KAAK,EAAE;AAAA,QAC3C,KAAoB,EAAE,SAAS,MAAM;AAAA,QACrC,oBAAoB,EAAE,SAAS,MAAM;AAAA,QACrC,QAAoB,EAAE,SAAS,gCAAgC,MAAM,WAAW;AAAA,MAClF;AAAA;AAAA;AAAA;AAAA,MAMA,MAAM,WAAY;AAChB,cAAM,KAAK,KAAK;AAChB,YAAI,CAAC,KAAK,KAAK,QAAQ;AACrB,eAAK,KAAK,SAAS,GAAG,cAAc,UAAU;AAAA,QAChD;AACA,aAAK,eAAe;AAEpB,aAAK,WAAW,IAAI,MAAM,QAAQ;AAClC,aAAK,UAAU,IAAI,MAAM,WAAW;AACpC,aAAK,cAAc,CAAC;AAGpB,aAAK,WAAW;AAChB,aAAK,UAAU;AAEf,YAAI,GAAG,QAAQ,WAAW;AACxB,eAAK,eAAe;AAAA,QACtB,OAAO;AACL,aAAG,QAAQ,iBAAiB,UAAU,KAAK,eAAe,KAAK,IAAI,CAAC;AAAA,QACtE;AAAA,MACF;AAAA,MAEA,QAAQ,SAAU,UAAU;AAC1B,cAAM,KAAK,KAAK;AAChB,cAAM,OAAO,KAAK;AAClB,cAAM,MAAM,GAAG,QAAQ,QAAQ;AAC/B,YAAI,GAAG,QAAQ,WAAW;AACxB,eAAK,eAAe;AAAA,QACtB;AACA,YAAI,OAAO,KAAK,uBAAuB,SAAS,oBAAoB;AAClE,eAAK,qBACD,IAAI,SAAS,IAAI,IACjB,IAAI,YAAY,IAAI;AAAA,QAC1B;AACA,YAAI,KAAK,YAAY,SAAS,SAAS;AAErC,mBAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC7C,kBAAM,OAAO,KAAK,SAAS,CAAC,IAAI;AAChC,iBAAK,GAAG,aAAa,MAAM,EAAE,SAAS,KAAK,KAAK,QAAQ,CAAC;AAAA,UAC3D;AAAA,QACF;AAAA,MACF;AAAA,MAEA,gBAAgB,WAAY;AAC1B,cAAM,OAAO,KAAK;AAElB,iBAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,KAAK;AAC7C,gBAAM,OAAO,KAAK,SAAS,CAAC,IAAI;AAChC,eAAK,GAAG,aAAa,MAAM,EAAE,SAAS,KAAK,KAAK,QAAQ,CAAC;AAAA,QAC3D;AAAA,MACF;AAAA,MAEA,mBAAmB,WAAY;AAC7B,aAAK,WAAW;AAChB,aAAK,UAAU;AAAA,MACjB;AAAA;AAAA;AAAA;AAAA,MAMA,MAAO,WAAY;AACjB,cAAM,QAAQ,IAAI,MAAM,QAAQ;AAChC,cAAM,MAAM,IAAI,MAAM,QAAQ;AAC9B,cAAM,aAAa,IAAI,MAAM,QAAQ;AAErC,eAAO,SAAU,GAAG,IAAI;AACtB,cAAI,CAAC,GAAI;AAET,gBAAM,KAAK,KAAK;AAChB,gBAAM,OAAO,KAAK;AAElB,cAAI,CAAC,KAAK,QAAS;AAEnB,eAAK,mBAAmB;AACxB,gBAAM,eAAe,KAAK;AAC1B,gBAAM,WAAW,KAAK;AAEtB,cAAI,CAAC,aAAc;AAGnB,cAAI,KAAK,MAAO,WAAW;AACzB,qBAAS,IAAI,GAAG,GAAG,CAAC;AAAA,UACtB,OAAO;AACL,iBAAK,eAAe,EAAE;AAAA,UACxB;AAEA,cAAI,KAAK,sBACF,aAAa,yBAAyB,OAAO;AAElD,gBAAI,SAAS,SAAS,IAAI,IAAK;AAE/B,kBAAM,KAAK,GAAG,SAAS,QAAQ;AAC/B,gBACG,KAAK,QAAQ,EACb,eAAe,KAAK,GAAI,EACxB,IAAI,KAAK;AAEZ,kBAAM,MAAM,GAAG,QAAQ,QAAQ;AAC/B,iBAAK,WAAW,KAAK,aAAa,OAAO,IAAI,SAAS,KAAK,IAAI,KAAK;AACpE,iBAAK,UAAU,KAAK,WAAW,IAAI,QAAQ,OAAO,KAAK,QAAQ;AAC/D,iBAAK,UAAU,IAAI,UAAU,OAAO,KAAK,KAAK,UAAU,KAAK,SAAS,UAAU;AAChF,eAAG,SAAS,SAAS,KAAK,UAAU;AAAA,UACtC,WAAW,GAAG,aAAa,UAAU,GAAG;AACtC,eAAG,aAAa,YAAY,QAAQ;AAAA,UACtC,OAAO;AACL,eAAG,SAAS,SAAS,KAAK,SAAS,IAAI,KAAK;AAC5C,eAAG,SAAS,SAAS,KAAK,SAAS,IAAI,KAAK;AAC5C,eAAG,SAAS,SAAS,KAAK,SAAS,IAAI,KAAK;AAAA,UAC9C;AAAA,QAEF;AAAA,MACF,EAAE;AAAA;AAAA;AAAA;AAAA,MAMF,oBAAoB,WAAY;AAC9B,cAAM,OAAO,KAAK;AAClB,YAAI,KAAK,SAAS;AAChB,mBAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,IAAI,GAAG,KAAK;AACpD,kBAAM,UAAU,KAAK,GAAG,WAAW,KAAK,SAAS,CAAC,IAAI,gBAAgB;AACtE,gBAAI,WAAW,QAAQ,iBAAiB,GAAG;AACzC,mBAAK,eAAe;AACpB;AAAA,YACF;AAAA,UACF;AACA,eAAK,eAAe;AAAA,QACtB;AAAA,MACF;AAAA,MAEA,gBAAiB,WAAY;AAC3B,cAAM,UAAU,IAAI,MAAM,QAAQ;AAClC,cAAM,aAAa,IAAI,MAAM,WAAW;AAExC,eAAO,SAAU,IAAI;AACnB,cAAI;AACJ,gBAAM,KAAK,KAAK;AAChB,gBAAM,UAAU,KAAK;AACrB,gBAAM,WAAW,KAAK;AACtB,gBAAM,OAAO,KAAK;AAElB,cAAI,SAAS;AACX,gBAAI,QAAQ,kBAAkB;AAC5B,0BAAY,QAAQ,iBAAiB,EAAE;AAAA,YACzC,WAAW,QAAQ,aAAa;AAC9B,uBAAS,KAAK,QAAQ,YAAY,CAAC;AACnC;AAAA,YACF,WAAW,QAAQ,kBAAkB;AACnC,uBAAS,KAAK,QAAQ,iBAAiB,EAAE,EAAE,eAAe,MAAO,EAAE,CAAC;AACpE;AAAA,YACF,OAAO;AACL,oBAAM,IAAI,MAAM,oCAAoC,OAAO;AAAA,YAC7D;AAAA,UACF;AAEA,cAAI,GAAG,aAAa,UAAU,KAAK,CAAC,KAAK,oBAAoB;AAC3D,qBAAS,KAAK,KAAK,GAAG,aAAa,UAAU,CAAC;AAAA,UAChD;AAEA,cAAI,aAAa,KAAK,SAAS;AAC7B,kBAAM,WAAW,KAAK;AAGtB,uBAAW,KAAK,SAAS,SAAS,UAAU;AAC5C,uBAAW,YAAY,GAAG,SAAS,UAAU;AAC7C,sBAAU,gBAAgB,UAAU;AAEpC,kBAAM,SAAS,UAAU,OAAO;AAChC,gBAAI,KAAK,KAAK;AACZ,uBAAS,KAAK,SAAS;AACvB,uBAAS,eAAe,KAAK,KAAK,QAAQ,QAAQ;AAAA,YACpD,OAAO;AACL,sBAAQ,IAAI,UAAU,GAAG,UAAU,CAAC;AACpC,sBAAQ,UAAU,SAAS,KAAK,KAAK,QAAQ,QAAQ;AACrD,uBAAS,IAAI,QAAQ;AACrB,uBAAS,IAAI;AACb,uBAAS,IAAI,QAAQ;AAAA,YACvB;AACA,gBAAI,SAAS,MAAM,KAAK,SAAS,MAAM,KAAK,SAAS,MAAM,GAAG;AAC5D,mBAAK,YAAY,WAAW;AAC5B,mBAAK,GAAG,KAAK,OAAO,KAAK,WAAW;AAAA,YACtC;AAAA,UACF;AAAA,QACF;AAAA,MAEF,EAAE;AAAA,IACJ,CAAC;AAAA;AAAA;;;AC5ND;AAAA;AAGA,WAAO,UAAU,OAAO,kBAAkB,qBAAqB;AAAA,MAC7D,QAAQ;AAAA,QACN,SAAS,EAAE,SAAS,KAAK;AAAA,QACzB,YAAY,EAAE,SAAS,KAAK;AAAA,QAC5B,YAAY,EAAE,SAAS,KAAK;AAAA,QAC5B,YAAY,EAAE,SAAS,KAAK;AAAA,QAC5B,YAAY,EAAE,SAAS,KAAK;AAAA,QAC5B,MAAM,EAAE,SAAS,SAAS,OAAO,CAAC,SAAS,SAAS,OAAO,EAAE;AAAA,MAE/D;AAAA,MAEA,MAAM,WAAY;AAChB,aAAK,YAAY,IAAI,MAAM,QAAQ;AACnC,aAAK,OAAY;AACjB,aAAK,OAAY;AACjB,aAAK,YAAY;AAAA,MACnB;AAAA,MAEA,MAAM,WAAY;AAChB,aAAK,kBAAkB;AAAA,MACzB;AAAA,MAEA,OAAO,WAAY;AACjB,aAAK,qBAAqB;AAC1B,aAAK,UAAU,IAAI,GAAG,GAAG,CAAC;AAAA,MAC5B;AAAA,MAEA,QAAQ,WAAY;AAClB,aAAK,MAAM;AAAA,MACb;AAAA,MAEA,mBAAmB,WAAY;AAC7B,cAAM,OAAO,KAAK;AAClB,cAAM,UAAU,KAAK,GAAG;AAExB,gBAAQ,iBAAiB,YAAY,KAAK,UAAU;AAEpD,gBAAQ,KAAK,MAAM;AAAA,UACjB,KAAK;AAAA,UACL,KAAK;AACH,oBAAQ,iBAAiB,sBAAsB,KAAK,YAAY;AAChE,oBAAQ,iBAAiB,oBAAoB,KAAK,UAAU;AAC5D;AAAA,UAEF,KAAK;AACH,oBAAQ,iBAAiB,gBAAgB,KAAK,YAAY;AAC1D,oBAAQ,iBAAiB,cAAc,KAAK,UAAU;AACtD;AAAA,QACJ;AAAA,MAEF;AAAA,MAEA,sBAAsB,WAAY;AAChC,cAAM,UAAU,KAAK,GAAG;AAExB,gBAAQ,oBAAoB,YAAY,KAAK,UAAU;AACvD,gBAAQ,oBAAoB,sBAAsB,KAAK,YAAY;AACnE,gBAAQ,oBAAoB,oBAAoB,KAAK,UAAU;AAC/D,gBAAQ,oBAAoB,gBAAgB,KAAK,YAAY;AAC7D,gBAAQ,oBAAoB,cAAc,KAAK,UAAU;AAAA,MAC3D;AAAA,MAEA,kBAAkB,WAAY;AAC5B,eAAO,KAAK,KAAK,WAAW,KAAK;AAAA,MACnC;AAAA,MAEA,kBAAkB,WAAY;AAC5B,aAAK,UAAU,IAAI,KAAK,WAAW,CAAC,KAAK,OAAO;AAChD,aAAK,UAAU,IAAI,KAAK,WAAW,KAAK,OAAO;AAC/C,eAAO,KAAK,UAAU,MAAM;AAAA,MAC9B;AAAA,MAEA,aAAa,WAAY;AACvB,aAAK,eAAe,KAAK,aAAa,KAAK,IAAI;AAC/C,aAAK,aAAa,KAAK,WAAW,KAAK,IAAI;AAC3C,aAAK,aAAa,KAAK,WAAW,KAAK,IAAI;AAAA,MAC7C;AAAA,MAEA,cAAc,SAAU,GAAG;AACzB,gBAAO,KAAK,KAAK,MAAK;AAAA,UACpB,KAAK;AACH,iBAAK,gBAAgB;AACrB,iBAAK,mBAAmB,CAAC;AACzB;AAAA,UACF,KAAK;AACH,iBAAK,WAAW;AAChB;AAAA,UACF,KAAK;AACH,iBAAK,WAAW;AAChB;AAAA,QACJ;AAEA,UAAE,eAAe;AAAA,MACnB;AAAA,MAEA,YAAY,SAAU,GAAG;AACvB,YAAG,KAAK,KAAK,QAAQ,SAAS;AAC1B,eAAK,mBAAmB,CAAC;AAAA,QAC7B;AAEA,aAAK,WAAW;AAChB,UAAE,eAAe;AAAA,MACnB;AAAA,MAEA,YAAY,SAAS,GAAE;AACrB,gBAAQ,KAAK,KAAK,MAAM;AAAA,UACtB,KAAK;AACH,mBAAO,KAAK,gBAAgB,CAAC;AAAA,UAC/B,KAAK;AAAA,UACL,KAAK;AACH,mBAAO,KAAK,gBAAgB,CAAC;AAAA,QACjC;AAAA,MACF;AAAA,MAEA,iBAAiB,SAAS,GAAG;AAC3B,cAAM,OAAO,KAAK;AAClB,cAAM,WAAW,EAAE,OAAO;AAE1B,YAAG,KAAK,iBAAiB,WAAW,KAAK,KAAK,eAAc;AAC1D,eAAK,gBAAgB;AACrB,eAAK,iBAAiB,CAAC,IAAI,SAAS,CAAC;AACrC,eAAK,iBAAiB,CAAC,IAAI,SAAS,CAAC;AAAA,QACvC;AAEA,YAAG,KAAK,iBAAiB,SAAS,GAAE;AAClC,cAAI,OAAO;AACX,cAAI,OAAO;AAEX,cAAI,KAAK,cAAc,SAAS,CAAC,IAAI,KAAK,iBAAiB,CAAC,GAAG;AAC7D,mBAAO;AAAA,UACT;AAEA,cAAI,KAAK,cAAc,SAAS,CAAC,IAAI,KAAK,iBAAiB,CAAC,GAAG;AAC7D,mBAAO;AAAA,UACT;AAEA,cAAI,KAAK,cAAc,SAAS,CAAC,IAAI,KAAK,iBAAiB,CAAC,GAAG;AAC7D,mBAAO;AAAA,UACT;AAEA,cAAI,KAAK,cAAc,SAAS,CAAC,IAAI,KAAK,iBAAiB,CAAC,GAAG;AAC7D,mBAAO;AAAA,UACT;AAEA,gBAAM,aAAc,KAAK,IAAI,KAAK,iBAAiB,CAAC,IAAI,SAAS,CAAC,CAAC;AACnE,gBAAM,aAAc,KAAK,IAAI,KAAK,iBAAiB,CAAC,IAAI,SAAS,CAAC,CAAC;AAEnE,cAAI,aAAa,YAAY;AAC3B,iBAAK,OAAO;AACZ,iBAAK,OAAO;AACZ,iBAAK,WAAW;AAAA,UAClB,OAAO;AACL,iBAAK,OAAO;AACZ,iBAAK,OAAO;AACZ,iBAAK,WAAW;AAAA,UAClB;AAAA,QAEF;AAAA,MACF;AAAA,MAEA,iBAAiB,SAAS,GAAG;AAC3B,cAAM,OAAO,KAAK;AAClB,cAAM,WAAW,EAAE,OAAO;AAE1B,YAAI,OAAO;AACX,YAAI,OAAO;AAEX,YAAI,KAAK,cAAc,SAAS,CAAC,IAAI,GAAG;AACtC,iBAAO;AAAA,QACT;AAEA,YAAI,KAAK,cAAc,SAAS,CAAC,IAAI,GAAG;AACtC,iBAAO;AAAA,QACT;AAEA,YAAI,KAAK,cAAc,SAAS,CAAC,IAAI,GAAG;AACtC,iBAAO;AAAA,QACT;AAEA,YAAI,KAAK,cAAc,SAAS,CAAC,IAAI,GAAG;AACtC,iBAAO;AAAA,QACT;AAEA,YAAI,KAAK,IAAI,SAAS,CAAC,CAAC,IAAI,KAAK,IAAI,SAAS,CAAC,CAAC,GAAG;AACjD,eAAK,OAAO;AACZ,eAAK,OAAO;AAAA,QACd,OAAO;AACL,eAAK,OAAO;AACZ,eAAK,OAAO;AAAA,QACd;AAAA,MAEF;AAAA,IAEF,CAAC;AAAA;AAAA;;;ACpMD,IAIa,UAOA,OAOA,WAQA,SAIA,SAIA,WAOP,QACO,UAOA,SAaA,WAkBA,cAKA,WAgBA,eAYA,oBAkBA,gBAUA,2BAUA,QAUA,YAaA,KAWA;AAzLb;AAAA;AAIO,IAAM,WAAW,CAAC,IAAI,OAAO;AAChC,YAAM,KAAK,GAAG,IAAI,GAAG;AACrB,YAAM,KAAK,GAAG,IAAI,GAAG;AAErB,aAAO,KAAK,KAAM,KAAK,KAAO,KAAK,EAAG;AAAA,IAC1C;AAEO,IAAM,QAAQ,CAAC,IAAI,OAAO;AAC7B,YAAM,KAAK,GAAG,IAAI,GAAG;AACrB,YAAM,KAAK,GAAG,IAAI,GAAG;AAErB,aAAO,QAAQ,KAAK,MAAM,IAAI,EAAE,CAAC;AAAA,IACrC;AAEO,IAAM,YAAY,CAACC,IAAGC,IAAG,MAAM;AAClC,YAAM,IAAI,EAAC,GAAG,GAAG,GAAG,EAAC;AACrB,UAAI,QAAQ,CAAC;AACb,QAAE,IAAID,GAAE,IAAIC,KAAI,KAAK,IAAI,CAAC;AAC1B,QAAE,IAAID,GAAE,IAAIC,KAAI,KAAK,IAAI,CAAC;AAC1B,aAAO;AAAA,IACX;AAEO,IAAM,UAAU,CAAC,MAAM;AAC1B,aAAO,KAAK,KAAK,KAAK;AAAA,IAC1B;AAEO,IAAM,UAAU,CAAC,MAAM;AAC1B,aAAO,KAAK,MAAM,KAAK;AAAA,IAC3B;AAEO,IAAM,YAAY,CAAC,QAAQ;AAC9B,UAAI,MAAM,IAAI,OAAO,GAAG;AACpB,eAAO,IAAI,aAAa;AAAA,MAC5B;AACA,aAAO,IAAI,YAAY;AAAA,IAC3B;AAEA,IAAM,SAAS,oBAAI,IAAI;AAChB,IAAM,WAAW,CAAC,OAAO;AAC5B,UAAI,OAAO,IAAI,EAAE,GAAG;AAChB,qBAAa,OAAO,IAAI,EAAE,CAAC;AAAA,MAC/B;AACA,aAAO,IAAI,IAAI,WAAW,IAAI,GAAG,CAAC;AAAA,IACtC;AAEO,IAAM,UAAU,CAAC,IAAI,KAAK,YAAY;AACzC,YAAM,QAAQ,IAAI,MAAM,QAAQ;AAChC,UAAI;AACJ,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACtC,eAAO,MAAM,CAAC;AACd,YAAI,GAAG,kBAAkB;AACrB,aAAG,iBAAiB,MAAM,SAAS,KAAK;AAAA,QAC5C,WAAW,GAAG,aAAa;AACvB,aAAG,YAAY,MAAM,OAAO;AAAA,QAChC;AAAA,MACJ;AAAA,IACJ;AAEO,IAAM,YAAY,CAAC,IAAI,KAAK,YAAY;AAC3C,YAAM,QAAQ,IAAI,MAAM,QAAQ;AAChC,UAAI;AACJ,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACtC,eAAO,MAAM,CAAC;AACd,YAAI,GAAG,qBAAqB;AACxB,aAAG,oBAAoB,MAAM,OAAO;AAAA,QACxC,WAAW,GAAG,aAAa;AACvB,aAAG,YAAY,MAAM,OAAO;AAAA,QAChC;AAAA,MACJ;AAAA,IACJ;AAOO,IAAM,eAAe,CAAC,QAAQ;AACjC,UAAI,eAAe;AACnB,aAAO,IAAI,KAAK,MAAM,QAAQ,IAAI,IAAI,iBAAiB;AAAA,IAC3D;AAEO,IAAM,YAAY,MAAM;AAC3B,YAAM,IAAK,OAAO,gBAAgB,SAC9B,OAAO,eACN,SAAS,mBAAmB,SAAS,KAAK,cAAc,SAAS,MAC7D;AAET,YAAM,IAAK,OAAO,gBAAgB,SAC9B,OAAO,eACN,SAAS,mBAAmB,SAAS,KAAK,cAAc,SAAS,MAC7D;AACT,aAAO;AAAA,QACH;AAAA,QACA;AAAA,MACJ;AAAA,IACJ;AAEO,IAAM,gBAAgB,CAAC,IAAI,QAAQ;AACtC,UAAI,IAAI,OAAO,IAAI,SAAS,IAAI,UAAU,IAAI,MAAM;AAChD,WAAG,MAAM,MAAM,IAAI;AACnB,WAAG,MAAM,QAAQ,IAAI;AACrB,WAAG,MAAM,SAAS,IAAI;AACtB,WAAG,MAAM,OAAO,IAAI;AAAA,MACxB,OAAO;AACH,WAAG,MAAM,OAAO,IAAI,IAAI;AACxB,WAAG,MAAM,MAAM,IAAI,IAAI;AAAA,MAC3B;AAAA,IACJ;AAEO,IAAM,qBAAqB,CAAC,UAAU,QAAQ,SAAS;AAC1D,YAAM,MAAM,0BAA0B,QAAQ;AAC9C,eAAS,KAAK,KAAK;AACf,YAAI,IAAI,eAAe,CAAC,GAAG;AACvB,cAAI,OAAO,WAAW,UAAU;AAC5B,gBAAI,CAAC,IAAI,SAAS,MAAM;AAAA,UAC5B,OAAO;AACH,gBAAI,KAAK;AACT,qBAAS,IAAI,GAAGC,OAAM,OAAO,QAAQ,IAAIA,MAAK,KAAK,GAAG;AAClD,oBAAM,OAAO,CAAC,IAAI,MAAM,OAAO;AAAA,YACnC;AACA,gBAAI,CAAC,IAAI,GAAG,MAAM,GAAG,EAAE;AAAA,UAC3B;AAAA,QACJ;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAEO,IAAM,iBAAiB,CAAC,UAAU,UAAU;AAC/C,YAAM,MAAM,0BAA0B,QAAQ;AAC9C,eAAS,KAAK,KAAK;AACf,YAAI,IAAI,eAAe,CAAC,GAAG;AACvB,cAAI,CAAC,IAAI;AAAA,QACb;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAEO,IAAM,4BAA4B,CAAC,SAAS;AAC/C,YAAM,MAAM,CAAC;AACb,UAAI,IAAI,IAAI;AACZ,YAAM,UAAU,CAAC,UAAU,OAAO,GAAG;AACrC,cAAQ,QAAQ,SAAU,QAAQ;AAC9B,YAAI,SAAS,KAAK,OAAO,CAAC,EAAE,YAAY,IAAI,KAAK,MAAM,CAAC,CAAC,IAAI;AAAA,MACjE,CAAC;AACD,aAAO;AAAA,IACX;AAEO,IAAM,SAAS,CAAC,MAAM,SAAS;AAClC,eAAS,KAAK,MAAM;AAChB,YAAI,KAAK,eAAe,CAAC,GAAG;AACxB,eAAK,CAAC,IAAI,KAAK,CAAC;AAAA,QACpB;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAGO,IAAM,aAAa,CAAC,MAAM,SAAS;AACtC,YAAM,MAAM,CAAC;AACb,eAAS,KAAK,MAAM;AAChB,YAAI,KAAK,eAAe,CAAC,KAAK,KAAK,eAAe,CAAC,GAAG;AAClD,cAAI,CAAC,IAAI,KAAK,CAAC;AAAA,QACnB,WAAW,KAAK,eAAe,CAAC,GAAG;AAC/B,cAAI,CAAC,IAAI,KAAK,CAAC;AAAA,QACnB;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAGO,IAAM,MAAM,CAAC,IAAI,OAAO;AAC3B,UAAI,GAAG,QAAQ;AACX,iBAAS,IAAI,GAAGA,OAAM,GAAG,QAAQ,IAAIA,MAAK,KAAK,GAAG;AAC9C,aAAG,GAAG,CAAC,CAAC;AAAA,QACZ;AAAA,MACJ,OAAO;AACH,WAAG,EAAE;AAAA,MACT;AAAA,IACJ;AAGO,IAAM,QAAQ,CAAC,KAAK,WAAW,UAAU;AAAA;AAAA,MAE5C,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,UAAU,IAAI,IAAI,GAAG,UAAU,IAAI,IAAI;AAAA;AAAA,MAEnE,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,UAAU,IAAI,IAAI,GAAG,UAAU,IAAI,IAAI;AAAA,IACvE;AAAA;AAAA;;;AClJA,SAAS,QAAS;AAAC;AA5CnB,IAMI,SACA,WACA,aACA,QAsBA,QACA,YAkHG;AAlJP;AAAA;AAGA;AAGA,IAAI,UAAU,CAAC,EAAE,kBAAkB;AACnC,IAAI,YAAY,OAAO,eAAe,OAAO;AAC7C,IAAI,cAAc,OAAO,iBAAiB,OAAO;AACjD,IAAI,SAAS;AAAA,MACT,OAAO;AAAA,QACH,OAAO;AAAA,QACP,MAAM;AAAA,QACN,KAAK;AAAA,MACT;AAAA,MACA,OAAO;AAAA,QACH,OAAO;AAAA,QACP,MAAM;AAAA,QACN,KAAK;AAAA,MACT;AAAA,MACA,SAAS;AAAA,QACL,OAAO;AAAA,QACP,MAAM;AAAA,QACN,KAAK;AAAA,MACT;AAAA,MACA,WAAW;AAAA,QACP,OAAO;AAAA,QACP,MAAM;AAAA,QACN,KAAK;AAAA,MACT;AAAA,IACJ;AAEA,IAAI,aAAa,CAAC;AAClB,QAAI,WAAW;AACX,eAAS,OAAO;AAAA,IACpB,WAAW,aAAa;AACpB,eAAS,OAAO;AAAA,IACpB,WAAW,SAAS;AAChB,eAAS,OAAO;AAChB,mBAAa,OAAO;AAAA,IACxB,OAAO;AACH,eAAS,OAAO;AAAA,IACpB;AAKA,UAAM,UAAU,KAAK,SAAU,KAAK,IAAI;AACpC,UAAI,OAAO;AACX,UAAI,QAAQ,IAAI,MAAM,QAAQ;AAC9B,UAAI;AACJ,WAAK,aAAa,KAAK,cAAc,CAAC;AAEtC,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACtC,eAAO,MAAM,CAAC;AACd,aAAK,WAAW,IAAI,IAAI,KAAK,WAAW,IAAI,KAAK,CAAC;AAClD,aAAK,WAAW,IAAI,EAAE,KAAK,EAAE;AAAA,MACjC;AACA,aAAO;AAAA,IACX;AAEA,UAAM,UAAU,MAAM,SAAU,MAAM,IAAI;AACtC,UAAI,OAAO;AACX,WAAK,aAAa,KAAK,cAAc,CAAC;AAEtC,UAAI,SAAS,QAAW;AACpB,aAAK,aAAa,CAAC;AAAA,MACvB,WAAW,OAAO,QAAW;AACzB,aAAK,WAAW,IAAI,IAAI;AAAA,MAC5B,WAAW,KAAK,WAAW,IAAI,KACvB,KAAK,WAAW,IAAI,EAAE,QAAQ,EAAE,KAAK,GAAG;AAC5C,aAAK,WAAW,IAAI,EAAE,OAAO,KAAK,WAAW,IAAI,EAAE,QAAQ,EAAE,GAAG,CAAC;AAAA,MACrE;AAEA,aAAO;AAAA,IACX;AAEA,UAAM,UAAU,UAAU,SAAU,KAAK,MAAM;AAC3C,UAAI,OAAO;AACX,UAAI,QAAQ,IAAI,MAAM,QAAQ;AAC9B,UAAI;AACJ,WAAK,aAAa,KAAK,cAAc,CAAC;AAEtC,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACtC,eAAO,MAAM,CAAC;AACd,YAAI,KAAK,WAAW,IAAI,KAAK,KAAK,WAAW,IAAI,EAAE,QAAQ;AACvD,eAAK,WAAW,IAAI,EAAE,QAAQ,SAAU,SAAS;AAC7C,oBAAQ,KAAK,MAAM;AAAA,cACf;AAAA,cACA,QAAQ;AAAA,YACZ,GAAG,IAAI;AAAA,UACX,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,IACJ;AAGA,UAAM,UAAU,SAAS,SAAU,SAAS;AACxC,UAAI,OAAO;AACX,WAAK,UAAU,KAAK,YAAY,CAAC;AACjC,UAAI,SAAS;AACT,aAAK,UAAY,WAAW,KAAK,SAAS,OAAO;AAAA,MACrD;AAAA,IACJ;AAGA,UAAM,UAAU,UAAU,SAAU,IAAI,MAAM;AAC1C,UAAI,OAAO;AACX,WAAK,gBAAgB,KAAK,iBAAiB,CAAC;AAE5C,WAAK,cAAc,IAAI,IAAI,WAAY;AACnC,YAAI,OAAO,KAAK,OAAO,IAAI,MAAM,YAAY;AACzC,eAAK,OAAO,IAAI,EAAE,MAAM,MAAM,SAAS;AAAA,QAC3C,OAAO;AAEH,kBAAQ,KAAK,4BAA4B,OAAO,YAAY;AAAA,QAChE;AAAA,MACJ;AAEA,MAAE,QAAQ,IAAI,OAAO,IAAI,GAAG,KAAK,cAAc,IAAI,CAAC;AAEpD,UAAI,WAAW,IAAI,GAAG;AAElB,QAAE,QAAQ,IAAI,WAAW,IAAI,GAAG,KAAK,cAAc,IAAI,CAAC;AAAA,MAC5D;AAEA,aAAO;AAAA,IACX;AAGA,UAAM,UAAU,YAAY,SAAU,IAAI,MAAM;AAC5C,UAAI,OAAO;AACX,WAAK,gBAAgB,KAAK,iBAAiB,CAAC;AAE5C,MAAE,UAAU,IAAI,OAAO,IAAI,GAAG,KAAK,cAAc,IAAI,CAAC;AAEtD,UAAI,WAAW,IAAI,GAAG;AAElB,QAAE,UAAU,IAAI,WAAW,IAAI,GAAG,KAAK,cAAc,IAAI,CAAC;AAAA,MAC9D;AAEA,aAAO,KAAK,cAAc,IAAI;AAE9B,aAAO;AAAA,IACX;AAEA,IAAO,gBAAQ;AAAA;AAAA;;;AC3If,SAAS,OAAQ,YAAY,SAAS;AAClC,OAAK,aAAa,QAAQ;AAC1B,OAAK,WAAW,QAAQ;AACxB,OAAK,gBAAgB,QAAQ;AAC7B,OAAK,aAAa;AAGlB,OAAK,WAAW;AAAA,IACZ,MAAM;AAAA,IACN,WAAW;AAAA,IACX,OAAO;AAAA,IACP,UAAU;AAAA,IACV,UAAU;AAAA,IACV,cAAc;AAAA,IACd,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM,SAAS;AAAA,IACf,OAAO;AAAA,IACP,OAAO;AAAA,IACP,OAAO;AAAA,EACX;AAEA,OAAK,OAAO,OAAO;AAGnB,MAAI,KAAK,QAAQ,SAAS,WAAW;AACjC,SAAK,QAAQ,cAAc;AAAA,EAC/B;AAEA,OAAK,KAAK,OAAO;AACjB,SAAO,MAAM;AACb,OAAK,QAAQ,EACR,QAAQ;AAGb,OAAK,WAAW;AAAA,IACZ,IAAI,KAAK,GAAG;AAAA,IACZ,IAAI,KAAK,GAAG,KAAK,IAAI;AAAA,IACrB,KAAK,KAAK,IAAI,KAAK,IAAI;AAAA,IACvB,MAAM,KAAK,KAAK,KAAK,IAAI;AAAA,IACzB,MAAM,KAAK,KAAK,KAAK,IAAI;AAAA,IACzB,KAAK,KAAK,SAAS,KAAK,IAAI;AAAA,IAC5B,QAAQ,KAAK,cAAc,KAAK,IAAI;AAAA,IACpC,SAAS,KAAK,QAAQ,KAAK,IAAI;AAAA,IAC/B,aAAY,KAAK,YAAY,KAAK,IAAI;AAAA,IACtC,gBAAgB,KAAK,eAAe,KAAK,IAAI;AAAA,IAC7C,kBAAkB,KAAK,iBAAiB,KAAK,IAAI;AAAA,IACjD,SAAS,KAAK,QAAQ,KAAK,IAAI;AAAA,IAC/B,UAAU,KAAK;AAAA,IACf,eAAe,KAAK;AAAA,IACpB,IAAI,KAAK;AAAA,IACT,YAAY,KAAK;AAAA,IACjB,IAAI,KAAK;AAAA,IACT,SAAS,KAAK;AAAA,EAClB;AAEA,SAAO,KAAK;AAChB;AAhEA,IAgaO;AAhaP;AAAA;AAAA;AACA;AAiEA,WAAO,YAAY,IAAI,cAAM;AAC7B,WAAO,cAAc;AACrB,WAAO,KAAK;AAGZ,WAAO,UAAU,UAAU,SAAU,SAAS;AAC1C,WAAK,KAAK,CAAC;AAEX,UAAI,KAAK,QAAQ,UAAU;AACvB,eAAO;AAAA,MACX;AAEA,WAAK,GAAG,KAAK,SAAS,cAAc,KAAK;AACzC,WAAK,GAAG,OAAO,SAAS,cAAc,KAAK;AAC3C,WAAK,GAAG,QAAQ,SAAS,cAAc,KAAK;AAE5C,WAAK,GAAG,GAAG,YAAY,uBAAuB,KAAK,WAAW;AAC9D,WAAK,GAAG,KAAK,YAAY;AACzB,WAAK,GAAG,MAAM,YAAY;AAE1B,WAAK,GAAG,GAAG,aAAa,MAAM,YAAY,KAAK,WAAW,KACtD,MAAM,KAAK,EAAE;AAEjB,WAAK,GAAG,GAAG,YAAY,KAAK,GAAG,IAAI;AACnC,WAAK,GAAG,GAAG,YAAY,KAAK,GAAG,KAAK;AAEpC,aAAO;AAAA,IACX;AAGA,WAAO,UAAU,UAAU,WAAY;AACnC,UAAI,KAAK,QAAQ,UAAU;AACvB,eAAO;AAAA,MACX;AACA,UAAI,WAAW,KAAK,QAAQ,WAAW;AACvC,UAAI,cAAgB,eAAe,gBAAgB,KAAK;AACxD,UAAI,eAAiB,mBAAmB,cAAc,WAAW,QAAQ;AACzE,UAAI,SAAS,CAAC;AACd,aAAO,KAAK;AAAA,QACR,UAAU;AAAA,QACV,SAAS,KAAK,QAAQ;AAAA,QACtB,SAAS;AAAA,QACT,UAAU;AAAA,MACd;AAEA,aAAO,OAAO;AAAA,QACV,UAAU;AAAA,QACV,SAAS;AAAA,QACT,OAAO,KAAK,QAAQ,OAAO;AAAA,QAC3B,QAAQ,KAAK,QAAQ,OAAO;AAAA,QAC5B,MAAM;AAAA,QACN,YAAY,CAAC,KAAK,QAAQ,OAAO,IAAI;AAAA,QACrC,WAAW,CAAC,KAAK,QAAQ,OAAO,IAAI;AAAA,QACpC,YAAY,KAAK,QAAQ;AAAA,QACzB,WAAW;AAAA,MACf;AAEA,aAAO,QAAQ;AAAA,QACX,OAAO,KAAK,QAAQ,OAAO,IAAI;AAAA,QAC/B,QAAQ,KAAK,QAAQ,OAAO,IAAI;AAAA,QAChC,UAAU;AAAA,QACV,SAAS;AAAA,QACT,MAAM;AAAA,QACN,YAAY,CAAC,KAAK,QAAQ,OAAO,IAAI;AAAA,QACrC,WAAW,CAAC,KAAK,QAAQ,OAAO,IAAI;AAAA,QACpC,YAAY,KAAK,QAAQ;AAAA,QACzB,WAAW;AAAA,QACX,WAAW;AAAA,MACf;AAEA,MAAE,OAAO,OAAO,IAAI,YAAY;AAChC,UAAG,KAAK,QAAQ,UAAU,UAAS;AAC/B,QAAE,OAAO,OAAO,MAAM,WAAW;AAAA,MACrC;AACA,MAAE,OAAO,OAAO,OAAO,WAAW;AAElC,WAAK,YAAY,MAAM;AAEvB,aAAO;AAAA,IACX;AAEA,WAAO,UAAU,cAAc,SAAU,QAAQ;AAE7C,eAAS,KAAK,KAAK,IAAI;AACnB,YAAI,KAAK,GAAG,eAAe,CAAC,GAAG;AAC3B,mBAAS,KAAK,OAAO,CAAC,GAAG;AACrB,iBAAK,GAAG,CAAC,EAAE,MAAM,CAAC,IAAI,OAAO,CAAC,EAAE,CAAC;AAAA,UACrC;AAAA,QACJ;AAAA,MACJ;AAEA,aAAO;AAAA,IACX;AAGA,WAAO,UAAU,WAAW,WAAY;AAEpC,UAAI,KAAK,QAAQ,YAAY,SAAS,KAAK,SAAS,KAAK,GAAG,EAAE,GAAG;AAC7D,eAAO;AAAA,MACX;AACA,WAAK,QAAQ,KAAK,YAAY,KAAK,GAAG,EAAE;AACxC,aAAO;AAAA,IACX;AAGA,WAAO,UAAU,gBAAgB,WAAY;AACzC,UAAI,KAAK,QAAQ,YAAY,CAAC,SAAS,KAAK,SAAS,KAAK,GAAG,EAAE,GAAG;AAC9D,eAAO;AAAA,MACX;AACA,WAAK,QAAQ,KAAK,YAAY,KAAK,GAAG,EAAE;AACxC,aAAO;AAAA,IACX;AAGA,WAAO,UAAU,UAAU,WAAY;AACnC,mBAAa,KAAK,aAAa;AAC/B,mBAAa,KAAK,WAAW;AAC7B,mBAAa,KAAK,WAAW;AAC7B,WAAK,QAAQ,aAAa,KAAK,QAAQ;AACvC,WAAK,cAAc;AACnB,WAAK,IAAI;AAAA,IACb;AAGA,WAAO,UAAU,OAAO,SAAU,IAAI;AAClC,UAAI,OAAO;AAEX,UAAI,KAAK,QAAQ,UAAU;AACvB,eAAO;AAAA,MACX;AAEA,mBAAa,KAAK,aAAa;AAC/B,mBAAa,KAAK,WAAW;AAC7B,mBAAa,KAAK,WAAW;AAE7B,WAAK,SAAS;AAEd,WAAK,aAAa;AAElB,iBAAW,WAAY;AACnB,aAAK,GAAG,GAAG,MAAM,UAAU;AAAA,MAC/B,GAAG,CAAC;AAEJ,WAAK,cAAc,WAAW,WAAY;AACtC,aAAK,QAAQ,SAAS,KAAK,QAAQ;AACnC,YAAI,OAAO,OAAO,YAAY;AAC1B,aAAG,KAAK,IAAI;AAAA,QAChB;AAAA,MACJ,GAAG,KAAK,QAAQ,QAAQ;AAExB,aAAO;AAAA,IACX;AAGA,WAAO,UAAU,OAAO,SAAU,IAAI;AAClC,UAAI,OAAO;AAEX,UAAI,KAAK,QAAQ,UAAU;AACvB,eAAO;AAAA,MACX;AAEA,WAAK,GAAG,GAAG,MAAM,UAAU,KAAK,QAAQ;AAExC,mBAAa,KAAK,aAAa;AAC/B,mBAAa,KAAK,WAAW;AAC7B,mBAAa,KAAK,WAAW;AAE7B,WAAK,gBAAgB;AAAA,QACjB,WAAY;AACR,cAAI,UAAU,KAAK,QAAQ,SAAS,YAAY,SAAS;AACzD,eAAK,GAAG,GAAG,MAAM,UAAU;AAC3B,cAAI,OAAO,OAAO,YAAY;AAC1B,eAAG,KAAK,IAAI;AAAA,UAChB;AAEA,eAAK,QAAQ,UAAU,KAAK,QAAQ;AAAA,QACxC;AAAA,QACA,KAAK,QAAQ;AAAA,MACjB;AAEA,UAAI,KAAK,QAAQ,cAAc;AAC3B,cAAM,OAAO,KAAK,QAAQ;AAC1B,cAAM,cAAc,CAAC;AAErB,oBAAY,IAAI,SAAS,QAAQ,KAAK,MAAM,QAAQ,IAAI,KAAK,SAAS,cAAc;AACpF,oBAAY,IAAI,SAAS,QAAQ,KAAK,MAAM,QAAQ,IAAI,KAAK,SAAS,cAAc;AAEpF,aAAK,YAAY,IAAI,WAAW;AAAA,MACpC;AAEA,aAAO;AAAA,IACX;AAGA,WAAO,UAAU,cAAc,SAAU,IAAI,UAAU;AACnD,UAAI,OAAO;AACX,WAAK,gBAAgB;AAAA,QACjB,GAAG,SAAS;AAAA,QACZ,GAAG,SAAS;AAAA,MAChB;AACA,UAAI,WAAW,KAAK,QAAQ,WAAW;AAEvC,UAAI,eAAe,CAAC;AACpB,mBAAa,QAAU;AAAA,QAAmB;AAAA,QACtC,CAAC,WAAW;AAAA,QAAG;AAAA,MAAQ;AAE3B,UAAI,SAAS,EAAC,OAAO,CAAC,EAAC;AACvB,aAAO,QAAQ;AAAA,QACX,WAAW,eAAe,KAAK,cAAc,IAAI,QAAQ,KAAK,cAAc,IAAI;AAAA,MACpF;AAEA,WAAK,YAAY,YAAY;AAC7B,WAAK,YAAY,MAAM;AAEvB,WAAK,cAAc;AAAA,QACf,WAAY;AACR,cAAI,OAAO,OAAO,YAAY;AAC1B,eAAG,KAAK,IAAI;AAAA,UAChB;AACA,eAAK,aAAa;AAAA,QACtB;AAAA,QACA,KAAK,QAAQ;AAAA,MACjB;AAAA,IACJ;AAEA,WAAO,UAAU,eAAe,WAAY;AACxC,UAAI,OAAO;AACX,UAAI,eAAe,CAAC;AACpB,mBAAa,QAAU,mBAAmB,cAAc,QAAQ,EAAE;AAClE,WAAK,YAAY,YAAY;AAC7B,WAAK,QAAQ,UAAU,KAAK,QAAQ;AAAA,IACxC;AAEA,WAAO,UAAU,iBAAiB,WAAY;AAE1C,WAAK,YAAY;AAAA,QACb,GAAG;AAAA,QACH,GAAG;AAAA,QACH,OAAO;AAAA,MACX;AAAA,IACJ;AAEA,WAAO,UAAU,mBAAmB,SAAU,KAAK;AAC/C,UAAI,SAAS,IAAI,MAAM;AACvB,UAAI,UAAU,KAAK,KAAK;AACxB,UAAI,UAAU,KAAK,KAAK;AACxB,UAAI,WAAW,YAAY;AAS3B,UACI,SAAS,WACT,SAAU,UAAU,KACpB,CAAC,IAAI,OACP;AACE,oBAAY;AAAA,MAChB,WACI,SAAS,CAAC,WACV,UAAU,WACV,CAAC,IAAI,OACP;AACE,oBAAY;AAAA,MAChB,WACI,SAAU,CAAC,UAAU,KACrB,UAAU,CAAC,WACX,CAAC,IAAI,OACP;AACE,oBAAY;AAAA,MAChB,WAAW,CAAC,IAAI,OAAO;AACnB,oBAAY;AAAA,MAChB;AAOA,UAAI,CAAC,IAAI,OAAO;AACZ,YAAI,SAAS,CAAC,WAAW,SAAS,SAAS;AACvC,uBAAa;AAAA,QACjB,OAAO;AACH,uBAAa;AAAA,QACjB;AAAA,MACJ;AAEA,UAAI,CAAC,IAAI,OAAO;AACZ,YAAI,SAAS,GAAG;AACZ,uBAAa;AAAA,QACjB,OAAO;AACH,uBAAa;AAAA,QACjB;AAAA,MACJ;AAEA,UAAI,IAAI,QAAQ,KAAK,QAAQ,WAAW;AACpC,YAAI,eAAe,CAAC;AACpB,YAAI;AACJ,aAAK,KAAK,KAAK,WAAW;AACtB,cAAI,KAAK,UAAU,eAAe,CAAC,GAAG;AAClC,yBAAa,CAAC,IAAI,KAAK,UAAU,CAAC;AAAA,UACtC;AAAA,QACJ;AAEA,YAAI,OAAO,CAAC;AAEZ,aAAK,YAAY;AAAA,UACb,GAAG;AAAA,UACH,GAAG;AAAA,UACH,OAAO;AAAA,QACX;AAEA,YAAI,YAAY,KAAK;AAErB,aAAK,KAAK,cAAc;AACpB,cAAI,aAAa,CAAC,MAAM,KAAK,UAAU,CAAC,GAAG;AACvC,iBAAK,CAAC,IAAI;AAAA,UACd;AAAA,QACJ;AAGA,YAAI,KAAK,KAAK,KAAK,KAAK,KAAK,OAAO;AAChC,iBAAO;AAAA,QACX;AAEA,YAAI,CAAC,KAAK,KAAK,CAAC,KAAK,GAAG;AACpB,eAAK,QAAQ,SAAS,GAAG;AAAA,QAC7B;AAEA,YAAI,CAAC,KAAK,GAAG;AACT,eAAK,QAAQ,WAAW,YAAY,GAAG;AAAA,QAC3C;AAEA,YAAI,CAAC,KAAK,GAAG;AACT,eAAK,QAAQ,WAAW,YAAY,GAAG;AAAA,QAC3C;AAEA,YAAI,CAAC,KAAK,OAAO;AACb,eAAK,QAAQ,aAAa,WAAW,GAAG;AAAA,QAC5C;AAAA,MACJ,OAAO;AACH,aAAK,eAAe;AAAA,MACxB;AAEA,aAAO;AAAA,IACX;AAEA,IAAO,iBAAQ;AAAA;AAAA;;;ACxZf,SAAS,WAAY,SAAS,SAAS;AACnC,MAAI,OAAO;AACX,OAAK,UAAU,CAAC;AAChB,OAAK,QAAQ,CAAC;AACd,OAAK,UAAU,CAAC;AAChB,OAAK,MAAM,CAAC;AACZ,OAAK,oBAAoB,CAAC;AAC1B,OAAK,UAAU;AACf,OAAK,KAAK,WAAW;AACrB,aAAW,MAAM;AAGjB,OAAK,WAAW;AAAA,IACZ,MAAM,SAAS;AAAA,IACf,YAAY;AAAA,IACZ,oBAAoB;AAAA,IACpB,MAAM;AAAA,IACN,UAAU,EAAC,KAAK,GAAG,MAAM,EAAC;AAAA,IAC1B,eAAe;AAAA,IACf,MAAM;AAAA,IACN,WAAW;AAAA,IACX,OAAO;AAAA,IACP,UAAU;AAAA,IACV,UAAU;AAAA,IACV,cAAc;AAAA,IACd,aAAa;AAAA,IACb,OAAO;AAAA,IACP,OAAO;AAAA,IACP,OAAO;AAAA,IACP,aAAa;AAAA,IACb,QAAQ;AAAA,EACZ;AAEA,OAAK,OAAO,OAAO;AAGnB,MAAI,KAAK,QAAQ,SAAS,YAAY,KAAK,QAAQ,SAAS,QAAQ;AAChE,SAAK,QAAQ,aAAa;AAAA,EAC9B;AAEA,MAAI,CAAC,KAAK,QAAQ,YAAY;AAC1B,SAAK,QAAQ,qBAAqB;AAAA,EACtC;AACA,QAAM,gBAAgB,iBAAiB,KAAK,QAAQ,KAAK,aAAa;AACtE,MAAI,iBAAiB,cAAc,YAAY,QAAQ;AACnD,SAAK,eAAe;AAAA,EACxB;AAEA,OAAK,UAAU;AACf,OAAK,eAAe;AACpB,OAAK,SAAS;AACd,OAAK,MAAM;AAEX,SAAO,KAAK;AAChB;AA9DA,IAmmBO;AAnmBP;AAAA;AAAA;AACA;AACA;AA8DA,eAAW,YAAY,IAAI,cAAM;AACjC,eAAW,cAAc;AACzB,eAAW,KAAK;AAEhB,eAAW,UAAU,iBAAiB,WAAY;AAC9C,UAAI,OAAO;AACX,UAAI,OAAO,KAAK;AAGhB,WAAK,KAAK,KAAK,GAAG,KAAK,IAAI;AAC3B,WAAK,MAAM,KAAK,IAAI,KAAK,IAAI;AAC7B,WAAK,UAAU,KAAK;AACpB,WAAK,UAAU,KAAK,QAAQ,KAAK,IAAI;AACrC,WAAK,MAAM,KAAK;AAChB,WAAK,KAAK,KAAK;AACf,WAAK,gBAAgB,KAAK,cAAc,KAAK,IAAI;AACjD,WAAK,eAAe,KAAK,aAAa,KAAK,IAAI;AAC/C,WAAK,MAAM,SAAU,IAAI;AACrB,YAAI,OAAO,QAAW;AAClB,iBAAO,KAAK,CAAC;AAAA,QACjB;AACA,iBAAS,IAAI,GAAGC,OAAM,KAAK,QAAQ,IAAIA,MAAK,KAAK,GAAG;AAChD,cAAI,KAAK,CAAC,EAAE,eAAe,IAAI;AAC3B,mBAAO,KAAK,CAAC;AAAA,UACjB;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,IACJ;AAEA,eAAW,UAAU,WAAW,WAAY;AACxC,UAAI,OAAO;AAEX,WAAK,QAAQ,KAAK,QAAQ,MAAM,OAAO;AAEvC,WAAK,QAAQ,KAAK,MAAM,cAAc;AACtC,WAAK,QAAQ,KAAK,MAAM,gBAAgB;AAAA,IAC5C;AAEA,eAAW,UAAU,QAAQ,WAAY;AACrC,UAAI,OAAO;AACX,UAAI,OAAO,KAAK;AAIhB,UAAI,KAAK,SAAS,UAAU;AACxB,YAAI,SAAS,KAAK;AAAA,UACd,KAAK;AAAA,UACL,KAAK,QAAQ,cAAc;AAAA,QAC/B;AAEA,eAAO,IAAI;AAEX,aAAK,MAAM,KAAK,MAAM;AAAA,MAC1B;AAAA,IACJ;AAGA,eAAW,UAAU,eAAe,SAAU,UAAU,YAAY;AAChE,UAAI,OAAO;AACX,UAAI,SAAS,KAAK,QAAQ;AAC1B,UAAI,UAAU,CAAC;AACf,UAAI,OAAO,KAAK;AAChB,UAAI,SAAS;AAAA,QACT,GAAG,KAAK,eAAe,OAAO,IAAK,OAAO,IAAI,KAAK,IAAI;AAAA,QACvD,GAAG,KAAK,eAAe,OAAO,IAAK,OAAO,IAAI,KAAK,IAAI;AAAA,MAC3D;AAEA,UAAI,SAAS,KAAK,SAAS,GAAG;AAC1B,kBAAU;AAAA,UACN,GAAG,SAAS,IAAI,OAAO;AAAA,UACvB,GAAG,SAAS,IAAI,OAAO;AAAA,QAC3B;AAAA,MACJ,WACI,SAAS,OACT,SAAS,SACT,SAAS,UACT,SAAS,MACX;AAGE,YAAI,OAAO,SAAS,cAAc,KAAK;AACvC,aAAK,MAAM,UAAU;AACrB,aAAK,MAAM,MAAM,SAAS;AAC1B,aAAK,MAAM,QAAQ,SAAS;AAC5B,aAAK,MAAM,SAAS,SAAS;AAC7B,aAAK,MAAM,OAAO,SAAS;AAC3B,aAAK,MAAM,WAAW;AAEtB,aAAK,KAAK,YAAY,IAAI;AAC1B,YAAI,UAAU,KAAK,sBAAsB;AACzC,aAAK,KAAK,YAAY,IAAI;AAE1B,kBAAU;AACV,mBAAW;AAAA,UACP,GAAG,QAAQ,OAAO,OAAO;AAAA,UACzB,GAAG,QAAQ,MAAM,OAAO;AAAA,QAC5B;AAAA,MACJ;AAEA,UAAI,SAAS,IAAI,eAAO,MAAM;AAAA,QAC1B,OAAO,KAAK;AAAA,QACZ,MAAM,KAAK;AAAA,QACX,WAAW,KAAK;AAAA,QAChB,UAAU,KAAK;AAAA,QACf,UAAU,KAAK;AAAA,QACf,cAAc,KAAK;AAAA,QACnB,aAAa,KAAK;AAAA,QAClB,MAAM,KAAK;AAAA,QACX;AAAA,QACA;AAAA,QACA,MAAM,KAAK;AAAA,QACX,eAAe;AAAA,UACX,GAAG;AAAA,UACH,GAAG;AAAA,QACP;AAAA,QACA,OAAO,KAAK;AAAA,MAChB,CAAC;AAED,UAAI,CAAC,KAAK,UAAU;AAChB,QAAE,cAAc,OAAO,GAAG,IAAI,OAAO;AACrC,QAAE,cAAc,OAAO,GAAG,OAAO,OAAO,aAAa;AAAA,MACzD;AACA,WAAK,QAAQ,KAAK,MAAM;AACxB,WAAK,QAAQ,WAAW,OAAO,aAAa,UAAU,MAAM;AAC5D,WAAK,QAAQ,QAAQ,WAAW,OAAO,aAAa,UAAU,MAAM;AAEpE,WAAK,WAAW,MAAM;AAEtB,aAAO;AAAA,IACX;AAEA,eAAW,UAAU,YAAY,WAAY;AACzC,UAAI,OAAO;AACX,WAAK,MAAM,KAAK,QAAQ,KAAK,sBAAsB;AAAA,IACvD;AAEA,eAAW,UAAU,aAAa,SAAU,QAAQ;AAChD,UAAI,OAAO;AACX,UAAI;AAEJ,UAAI,UAAU,SAAU,KAAK,MAAM;AAE/B,eAAO,IAAI,OAAO,MAAM,KAAK,KAAK,MAAM,IAAI;AAC5C,aAAK,QAAQ,MAAM,IAAI;AAAA,MAC3B;AAGA,aAAO,GAAG,aAAa,KAAK,YAAY,KAAK,IAAI,CAAC;AAGlD,aAAO,GAAG,iCAAiC,OAAO;AAClD,aAAO,GAAG,sCAAsC,OAAO;AACvD,aAAO,GAAG,8CAA8C,OAAO;AAAA,IACnE;AAEA,eAAW,UAAU,aAAa,SAAU,OAAO,QAAQ,YAAY;AACnE,UAAI,OAAO;AACX,UAAI,mBAAmB;AACvB,oBAAc,KAAK,kBAAkB,UAAU,CAAC;AAEhD,WAAK,kBAAkB,UAAU,IAAI,aAAY,WAAY;AACzD,YAAI,WAAW,MAAM,SAAS,MAAM,YAChC,MAAM,eAAe;AACzB,YAAI,aAAa,kBAAkB;AAC/B,iBAAO,QAAQ,YAAY,QAAQ;AACnC,eAAK,QAAQ,cACT,OAAO,aAAa,aAAa,QAAQ;AAC7C,6BAAmB;AAAA,QACvB;AAAA,MACJ,GAAE,KAAK,IAAI,GAAG,GAAG;AAAA,IACrB;AAEA,eAAW,UAAU,UAAU,SAAU,KAAK;AAC1C,UAAI,OAAO;AACX,UAAI,OAAO,KAAK;AAChB,UAAI,UAAU;AACd,YAAQ,aAAa,GAAG;AAGxB,WAAK,UAAU;AAEf,UAAI,UAAU,SAAU,OAAO;AAG3B,YAAI,KAAK,QAAQ,SAAS,KAAK,oBAAoB;AAC/C,eAAK,eAAe,KAAK;AAAA,QAC7B,WACQ,QAAQ,KAAK,MAAM,QAAQ,GAAE;AAIjC,iBAAO,KAAK,KAAK,QAAQ,GAAG,EAAE,QAAQ,SAAS,GAAE;AAC7C,gBAAG,OAAO,OAAO,QAAQ,OAAO,EAAE,UAAU,SAAS,GAAE;AAAC,qBAAO,EAAE,eAAa;AAAA,YAAE,CAAC,IAAI,GAAE;AAEnF,kBAAI,IAAI,CAAC,IAAI,CAAC,CAAC;AACf,gBAAE,aAAa;AACf,mBAAK,aAAa,CAAC;AAAA,YACvB;AAAA,UACJ,CAAC;AACD,cAAG,KAAK,QAAQ,SAAS,KAAK,oBAAmB;AAC7C,iBAAK,eAAe,KAAK;AAAA,UAC7B;AAAA,QACJ;AAAA,MACJ;AAEA,MAAE,IAAI,KAAK,OAAO;AAIlB,WAAK,QAAQ,aAAa;AAC1B,aAAO;AAAA,IACX;AAEA,eAAW,UAAU,iBAAiB,SAAU,KAAK;AACjD,UAAI,OAAO;AACX,UAAI,OAAO,KAAK;AAChB,UAAI;AACJ,UAAI,aAAa,KAAK,QAAQ,cAAc,GAAG;AAC/C,UAAI,WAAW,IAAI,SAAS,IAAI,YAAY,IAAI,eAAe;AAC/D,UAAI,WAAW;AAAA,QACX,GAAG,IAAI;AAAA,QACP,GAAG,IAAI;AAAA,MACX;AAEA,UAAI,SAAS,KAAK,YAAY,YAAY,QAAQ;AAGlD,UAAI,OAAO,eAAe,YAAY;AAClC,aAAK,QAAQ,iBAAiB,OAAO,UAAU;AAAA,MACnD;AACA,aAAO,aAAa;AAEpB,UAAI,UAAU,SAAU,KAAK;AAEzB,YAAI,QAAQ,SAAS,GAAG;AACxB,aAAK,QAAQ,WAAW,IAAI,KAAK,UAAU,GAAG;AAE9C,YAAI,KAAK;AACT,YAAI,WAAW,GAAG;AACd,eAAK,WAAW,KAAK,KAAK,IAAI,UAAU;AAAA,QAC5C;AAEA,aAAK,cAAc,GAAG;AAAA,MAC1B;AAGA,WAAK,eAAe,KAAK,MAAM,QAAQ,MAAM,MAAM,GAAG;AAClD,aAAK,MAAM,OAAO,cAAc,CAAC;AAAA,MACrC;AAGA,WAAK,QAAQ,KAAK,MAAM;AACxB,WAAK,IAAI,KAAK,OAAO,UAAU;AAE/B,UAAI,KAAK,SAAS,QAAQ;AACtB,gBAAQ,MAAM;AAAA,MAClB,OAAO;AAGH,YAAIC,YAAa,SAAS,UAAU,OAAO,QAAQ;AACnD,YAAIA,aAAY,KAAK,eAAe;AAChC,kBAAQ,MAAM;AAAA,QAClB,OAAO;AACH,iBAAO,QAAQ;AACf,eAAK,eAAe,GAAG;AACvB;AAAA,QACJ;AAAA,MACJ;AAEA,aAAO;AAAA,IACX;AAEA,eAAW,UAAU,cAAc,SAAU,YAAY,UAAU;AAC/D,UAAI,OAAO;AACX,UAAI,OAAO,KAAK;AAChB,UAAI;AAGJ,UAAI,gBAAgB,KAAK,KAAK,IAAI,GAAG;AAIjC,iBAAS,KAAK,MAAM,CAAC;AACrB,YAAI,QAAQ;AACR,eAAK,MAAM,OAAO,GAAG,CAAC;AACtB,iBAAO;AAAA,QACX;AAEA,YAAI,KAAK,SAAS,QAAQ;AAEtB,iBAAO,KAAK,aAAa,UAAU,UAAU;AAAA,QACjD;AAGA,gBAAQ,KAAK,kCAAmC;AAChD,eAAO;AAAA,MACX;AAEA,eAAS,KAAK,aAAa,UAAU,UAAU;AAC/C,aAAO;AAAA,IACX;AAEA,eAAW,UAAU,gBAAgB,SAAU,KAAK;AAChD,UAAI,OAAO;AACX,UAAI,OAAO,KAAK;AAChB,UAAI,aAAa,KAAK,QAAQ,cAAc,GAAG;AAC/C,UAAI,SAAS,KAAK,QAAQ,IAAI,UAAU;AACxC,UAAI,SAAS,KAAK,QAAQ;AAI1B,UAAI,CAAG,UAAU,GAAG,GAAG;AACnB,aAAK,aAAa,GAAG;AACrB;AAAA,MACJ;AAEA,UAAI,CAAC,QAAQ;AAIT,gBAAQ,MAAM,mCAAmC,UAAU;AAC3D,aAAK,QAAQ,iBAAiB,UAAU;AACxC;AAAA,MACJ;AAEA,UAAI,KAAK,aAAa;AAClB,YAAI,QAAQ,OAAO,GAAG,sBAAsB;AAC5C,eAAO,WAAW;AAAA,UACd,GAAG,OAAO,IAAI,MAAM;AAAA,UACpB,GAAG,OAAO,IAAI,MAAM;AAAA,QACxB;AAAA,MACJ;AAEA,aAAO,aAAa;AAEpB,UAAI,OAAO,OAAO,QAAQ,OAAO;AACjC,UAAI,MAAM;AAAA,QACN,GAAG,IAAI;AAAA,QACP,GAAG,IAAI;AAAA,MACX;AAEA,UAAI,KAAK,OAAM;AACX,YAAI,IAAI,OAAO,SAAS;AAAA,MAC5B;AACA,UAAI,KAAK,OAAO;AACZ,YAAI,IAAI,OAAO,SAAS;AAAA,MAC5B;AAEA,UAAI,OAAS,SAAS,KAAK,OAAO,QAAQ;AAC1C,UAAIC,SAAU,MAAM,KAAK,OAAO,QAAQ;AACxC,UAAI,SAAW,QAAQA,MAAK;AAC5B,UAAI,QAAQ,OAAO;AAEnB,UAAI,MAAM;AAAA,QACN,UAAU;AAAA,QACV,UAAU;AAAA,MACd;AAGA,UAAI;AACJ,UAAI;AACJ,UAAI,OAAO,QAAQ,UAAU,UAAU;AAEnC,uBAAe,KAAK,IAAI,MAAM,IAAI;AAClC,sBAAgB,UAAU,OAAO,UAAU,cAAcA,MAAK;AAAA,MAClE,OAAO;AAEH,sBAAgB,MAAM,KAAK,OAAO,UAAU,IAAI;AAChD,uBAAiB,SAAS,aAAa,OAAO,QAAQ;AAAA,MAC1D;AAEA,UAAI,KAAK,QAAQ;AAEb,YAAI,OAAO,MAAM;AACb,cAAI,UAAU,IAAI,IAAI,YAAY;AAClC,cAAI,UAAU,IAAI,IAAI,YAAY;AAClC,iBAAO,SAAS,KAAK;AACrB,iBAAO,SAAS,KAAK;AACrB,iBAAO,GAAG,MAAM,MAAO,OAAO,SAAS,KAAK,KAAK,IAAI,MAAM,OAAO,KAAM;AACxE,iBAAO,GAAG,MAAM,OAAQ,OAAO,SAAS,KAAK,KAAK,IAAI,OAAO,OAAO,KAAM;AAE1E,iBAAS,SAAS,KAAK,OAAO,QAAQ;AAAA,QAC1C;AAAA,MACJ,OAAO;AAEH,cAAM;AACN,eAAO;AAAA,MACX;AAEA,UAAI,YAAY,IAAI,IAAI,OAAO,SAAS;AACxC,UAAI,YAAY,IAAI,IAAI,OAAO,SAAS;AAExC,aAAO,gBAAgB;AAAA,QACnB,GAAG;AAAA,QACH,GAAG;AAAA,MACP;AAEA,UAAI,CAAC,KAAK,UAAU;AAChB,eAAO,GAAG,MAAM,MAAM,YAAY,eAAe,YAAY,QAAQ,YAAY;AAAA,MACrF;AAGA,UAAI,SAAS;AAAA,QACT,YAAY,OAAO;AAAA,QACnB,UAAU;AAAA,QACV;AAAA,QACA,UAAU,IAAI,SAAS,IAAI,YAAY,IAAI,eAAe;AAAA,QAC1D,UAAU;AAAA,QACV,OAAO;AAAA,UACH,QAAQ;AAAA,UACR,QAAQA;AAAA,QACZ;AAAA,QACA,QAAQ;AAAA,UACJ,GAAG,YAAY;AAAA,UACf,GAAG,CAAE,YAAY;AAAA,QACrB;AAAA,QACA;AAAA,QACA,UAAU;AAAA,QACV,OAAO,KAAK;AAAA,QACZ,OAAO,KAAK;AAAA,MAChB;AAGA,eAAS,OAAO,iBAAiB,MAAM;AAGvC,aAAO,QAAQ;AAAA,QACX,QAAU,QAAQ,MAAMA,MAAK;AAAA,QAC7B,QAAQ,MAAMA;AAAA,MAClB;AAGA,aAAO,QAAQ,QAAQ,MAAM;AAC7B,WAAK,QAAQ,UAAU,OAAO,KAAK,SAAS,MAAM;AAAA,IACtD;AAEA,eAAW,UAAU,eAAe,SAAU,KAAK;AAC/C,UAAI,OAAO;AACX,UAAI,OAAO,KAAK;AAChB,UAAI,aAAa,KAAK,QAAQ,cAAc,GAAG;AAC/C,UAAI,SAAS,KAAK,QAAQ,IAAI,UAAU;AACxC,UAAI,oBAAoB,KAAK,QAAQ,iBAAiB,OAAO,UAAU;AAEvE,UAAI,CAAC,QAAQ;AACT;AAAA,MACJ;AAEA,UAAI,CAAC,KAAK,UAAU;AAChB,eAAO,KAAK,WAAY;AACpB,cAAI,KAAK,SAAS,WAAW;AACzB,mBAAO,QAAQ,WAAW,MAAM;AAChC,iBAAK,QAAQ,aAAa,OAAO,KAAK,YAAY,MAAM;AACxD,iBAAK,QACA,QAAQ,aAAa,OAAO,KAAK,YAAY,MAAM;AACxD,mBAAO,QAAQ;AAAA,UACnB;AAAA,QACJ,CAAC;AAAA,MACL;AAGA,oBAAc,KAAK,kBAAkB,OAAO,UAAU,CAAC;AAIvD,aAAO,eAAe;AAEtB,aAAO,QAAQ,OAAO,MAAM;AAC5B,WAAK,QAAQ,SAAS,OAAO,KAAK,QAAQ,MAAM;AAGhD,UAAI,KAAK,IAAI,QAAQ,OAAO,UAAU,KAAK,GAAG;AAC1C,aAAK,IAAI,OAAO,KAAK,IAAI,QAAQ,OAAO,UAAU,GAAG,CAAC;AAAA,MAC1D;AAGA,UAAI,KAAK,QAAQ,QAAQ,MAAM,KAAK,GAAG;AACnC,aAAK,QAAQ,OAAO,KAAK,QAAQ,QAAQ,MAAM,GAAG,CAAC;AAAA,MACvD;AAEA,UAAI,gBAAgB,KAAK,KAAK,IAAI,GAAG;AAGjC,aAAK,MAAM,KAAK,MAAM;AAAA,MAC1B,WAAW,KAAK,QAAQ,QAAQ,MAAM,KAAK,GAAG;AAG1C,aAAK,QAAQ,OAAO,KAAK,QAAQ,QAAQ,MAAM,GAAG,CAAC;AAAA,MACvD;AAGA,WAAK,QAAQ,eAAe;AAG5B,UAAI,gBAAgB,KAAK,KAAK,IAAI,GAAG;AACjC,aAAK,QAAQ,IAAI,kBAAkB,EAAE,IAAI,kBAAkB;AAAA,MAC/D;AAAA,IACJ;AAGA,eAAW,UAAU,cAAc,SAAS,KAAK,QAAQ;AACrD,UAAI,OAAO;AACX,UAAI,KAAK,QAAQ,QAAQ,MAAM,KAAK,GAAG;AACnC,aAAK,QAAQ,OAAO,KAAK,QAAQ,QAAQ,MAAM,GAAG,CAAC;AAAA,MACvD;AACA,UAAI,KAAK,QAAQ,QAAQ,MAAM,KAAK,GAAG;AACnC,aAAK,QAAQ,OAAO,KAAK,QAAQ,QAAQ,MAAM,GAAG,CAAC;AAAA,MACvD;AACA,UAAI,KAAK,MAAM,QAAQ,MAAM,KAAK,GAAG;AACjC,aAAK,MAAM,OAAO,KAAK,MAAM,QAAQ,MAAM,GAAG,CAAC;AAAA,MACnD;AACA,UAAI,KAAK,IAAI,QAAQ,OAAO,UAAU,KAAK,GAAG;AAC1C,aAAK,IAAI,OAAO,KAAK,IAAI,QAAQ,OAAO,UAAU,GAAG,CAAC;AAAA,MAC1D;AAGA,WAAK,QAAQ,iBAAiB,OAAO,UAAU;AAG/C,WAAK,QAAQ,eAAe;AAAA,IAChC;AAGA,eAAW,UAAU,UAAU,WAAY;AACvC,UAAI,OAAO;AACX,WAAK,UAAU,KAAK,QAAQ,MAAM,OAAO;AAGzC,WAAK,QAAQ,QAAQ,SAAS,QAAQ;AAClC,eAAO,QAAQ;AAAA,MACnB,CAAC;AAGD,eAAS,KAAK,KAAK,mBAAmB;AAClC,YAAI,KAAK,kBAAkB,eAAe,CAAC,GAAG;AAC1C,wBAAc,KAAK,kBAAkB,CAAC,CAAC;AAAA,QAC3C;AAAA,MACJ;AAGA,WAAK,QAAQ,aAAa,KAAK,OAAO;AAEtC,WAAK,QAAQ,eAAe;AAE5B,WAAK,IAAI;AAAA,IACb;AAEA,IAAO,qBAAQ;AAAA;AAAA;;;AC3lBf,SAAS,QAAS,SAAS;AACvB,MAAI,OAAO;AACX,OAAK,MAAM,CAAC;AACZ,OAAK,QAAQ;AACb,OAAK,cAAc,CAAC;AACpB,OAAK,SAAW,UAAU;AAE1B,OAAK,OAAO,OAAO;AACnB,OAAK,mBAAmB;AAGxB,MAAI,gBAAgB,WAAY;AAC5B,QAAI;AACJ,SAAK,YAAY,QAAQ,SAAU,YAAY;AAC3C,iBAAW,QAAQ,SAAU,QAAQ;AACjC,cAAM,OAAO,GAAG,sBAAsB;AACtC,eAAO,WAAW;AAAA,UACd,GAAG,KAAK,OAAO,IAAI,IAAI;AAAA,UACvB,GAAG,KAAK,OAAO,IAAI,IAAI;AAAA,QAC3B;AAAA,MACJ,CAAC;AAAA,IACL,CAAC;AAAA,EACL;AACA,EAAE,QAAQ,QAAQ,UAAU,WAAY;AACpC,IAAE,SAAS,aAAa;AAAA,EAC5B,CAAC;AAID,MAAI,gBAAgB,WAAY;AAC5B,SAAK,SAAW,UAAU;AAAA,EAC9B;AACA,EAAE,QAAQ,QAAQ,UAAU,WAAY;AACpC,IAAE,SAAS,aAAa;AAAA,EAC5B,CAAC;AAED,SAAO,KAAK;AAChB;AA7CA,IAwOO;AAxOP;AAAA;AAAA;AACA;AACA;AA6CA,YAAQ,YAAY,IAAI,cAAM;AAC9B,YAAQ,cAAc;AAEtB,YAAQ,UAAU,qBAAqB,WAAY;AAC/C,UAAI,OAAO;AAEX,WAAK,YAAY,SAAS,KAAK,OAAO,KAAK,IAAI;AAE/C,WAAK,YAAY,KAAK,KAAK,GAAG,KAAK,IAAI;AAEvC,WAAK,YAAY,MAAM,KAAK,IAAI,KAAK,IAAI;AAEzC,WAAK,YAAY,UAAU,KAAK,QAAQ,KAAK,IAAI;AAEjD,WAAK,YAAY,MAAM,SAAU,IAAI;AACjC,YAAI;AAEJ,aAAK,YAAY,MAAM,SAAU,YAAY;AACzC,mBAAS,WAAW,IAAI,EAAE;AAC1B,iBAAO,SAAS,QAAQ;AAAA,QAC5B,CAAC;AACD,eAAO;AAAA,MACX;AAAA,IACJ;AAEA,YAAQ,UAAU,SAAS,SAAU,SAAS;AAC1C,aAAO,KAAK,iBAAiB,OAAO;AAAA,IACxC;AAGA,YAAQ,UAAU,mBAAmB,SAAU,SAAS;AACpD,UAAI,OAAO;AACX,UAAI,aAAa,IAAI,mBAAW,MAAM,OAAO;AAE7C,WAAK,eAAe,UAAU;AAC9B,WAAK,YAAY,KAAK,UAAU;AAEhC,aAAO;AAAA,IACX;AAEA,YAAQ,UAAU,iBAAiB,SAAU,YAAY;AACrD,UAAI,OAAO;AACX,UAAI;AAEJ,UAAI,UAAU,SAAU,KAAK,MAAM;AAE/B,eAAO,IAAI,OAAO,MAAM,KAAK,KAAK,MAAM,IAAI;AAC5C,aAAK,QAAQ,MAAM,IAAI;AAAA,MAC3B;AAGA,iBAAW,GAAG,aAAa,KAAK,YAAY,KAAK,IAAI,CAAC;AAGtD,iBAAW,GAAG,iCAAiC,OAAO;AACtD,iBAAW,GAAG,sCAAsC,OAAO;AAC3D,iBAAW,GAAG,8CAA8C,OAAO;AAAA,IACvE;AAEA,YAAQ,UAAU,eAAe,WAAY;AACzC,UAAI,OAAO;AAEX,UAAI,CAAC,KAAK,QAAQ;AACd,aAAK,QAAQ,UAAU,MAAM,EACxB,QAAQ,UAAU,KAAK;AAC5B,aAAK,SAAS;AAAA,MAClB;AAAA,IACJ;AAEA,YAAQ,UAAU,iBAAiB,SAAU,OAAO;AAChD,UAAI,OAAO;AAGX,UAAI,CAAC,OAAO,KAAK,KAAK,GAAG,EAAE,UAAU,UAAU,MAAM;AACjD,aAAK,UAAU,UAAU,MAAM,EAC1B,UAAU,UAAU,KAAK;AAC9B,aAAK,SAAS;AAAA,MAClB;AAAA,IACJ;AAEA,YAAQ,UAAU,gBAAgB,SAAU,KAAK;AAC7C,UAAI;AAEJ,UAAI,CAAC,KAAK;AACN,aAAK,KAAK;AAAA,MACd,OAAO;AAGH,aAAK,IAAI,eAAe,SAAY,IAAI,YAAY,IAAI;AACxD,YAAI,OAAO,QAAW;AAClB,eAAK,KAAK,UAAU;AAAA,QACxB;AAAA,MACJ;AAEA,UAAI,KAAK,IAAI,EAAE,MAAM,QAAW;AAC5B,aAAK,IAAI,EAAE,IAAI,KAAK;AACpB,aAAK,SAAS;AAAA,MAClB;AAGA,WAAK,SAAS;AACd,aAAO,KAAK,IAAI,EAAE;AAAA,IACtB;AAEA,YAAQ,UAAU,mBAAmB,SAAU,YAAY;AACvD,UAAI,UAAU,CAAC;AACf,eAAS,MAAM,KAAK,KAAK;AACrB,YAAI,KAAK,IAAI,EAAE,MAAM,YAAY;AAC7B,kBAAQ,KAAK;AACb,kBAAQ,aAAa,KAAK,IAAI,EAAE;AAChC,iBAAO,KAAK,IAAI,EAAE;AAClB;AAAA,QACJ;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAEA,YAAQ,UAAU,SAAS,SAAU,KAAK;AACtC,UAAI,OAAO;AACX,WAAK,MAAM,QAAQ,GAAG;AACtB,aAAO;AAAA,IACX;AAEA,YAAQ,UAAU,QAAQ,SAAU,KAAK;AACrC,UAAI,OAAO;AACX,WAAK,MAAM,OAAO,GAAG;AACrB,aAAO;AAAA,IACX;AAEA,YAAQ,UAAU,WAAW,SAAU,KAAK;AACxC,UAAI,OAAO;AACX,WAAK,MAAM,OAAO,GAAG;AACrB,aAAO;AAAA,IACX;AAEA,YAAQ,UAAU,QAAQ,SAAU,OAAO,KAAK;AAC5C,UAAI,OAAO;AACX,UAAI;AACJ,UAAI,YAAY,cAAc,MAAM,OAAO,CAAC,EAAE,YAAY,IACtD,MAAM,MAAM,CAAC;AACjB,YAAQ,aAAa,GAAG;AACxB,UAAI,cAAc,SAAU,GAAGC,KAAI,MAAM;AACrC,YAAI,KAAK,IAAI,QAAQA,GAAE,KAAK,GAAG;AAC3B,eAAK,SAAS,EAAE,CAAC;AAEjB,YAAE,UAAU;AAAA,QAChB;AAAA,MACJ;AACA,UAAI,aAAa,SAAU,GAAG;AAC1B,aAAK,KAAK,cAAc,CAAC;AACzB,QAAE,IAAI,KAAK,aAAa,YAAY,KAAK,MAAM,GAAG,EAAE,CAAC;AAGrD,YAAI,CAAC,EAAE,SAAS;AACZ,eAAK,iBAAiB,EAAE;AAAA,QAC5B;AAAA,MACJ;AAEA,MAAE,IAAI,KAAK,UAAU;AAErB,aAAO;AAAA,IACX;AAGA,YAAQ,UAAU,UAAU,WAAY;AACpC,UAAI,OAAO;AACX,WAAK,eAAe,IAAI;AACxB,WAAK,MAAM,CAAC;AACZ,WAAK,QAAQ;AACb,WAAK,YAAY,QAAQ,SAAS,YAAY;AAC1C,mBAAW,QAAQ;AAAA,MACvB,CAAC;AACD,WAAK,IAAI;AAAA,IACb;AAIA,YAAQ,UAAU,cAAc,SAAU,KAAK,MAAM;AACjD,UAAI,OAAO;AACX,UAAI,KAAK,YAAY,QAAQ,IAAI,IAAI,GAAG;AACpC,eAAO;AAAA,MACX;AACA,WAAK,YAAY,OAAO,KAAK,YAAY,QAAQ,IAAI,GAAG,CAAC;AAAA,IAC7D;AAEA,IAAO,kBAAQ;AAAA;AAAA;;;ACxOf,IAEM,SACC;AAHP;AAAA;AAAA;AAEA,IAAM,UAAU,IAAI,gBAAQ;AAC5B,IAAO,cAAQ;AAAA,MACX,QAAQ,SAAU,SAAS;AACvB,eAAO,QAAQ,OAAO,OAAO;AAAA,MACjC;AAAA,MACA;AAAA,IACJ;AAAA;AAAA;;;ACRA;AAAA;AAAA;AACA;AAEA,WAAO,kBAAkB,mBAAmB;AAAA,MAC1C,QAAQ;AAAA,QACN,SAAS,EAAE,SAAS,KAAK;AAAA,QACzB,MAAM,EAAE,SAAS,WAAW,OAAO,CAAC,UAAU,QAAQ,SAAS,EAAE;AAAA,QACjE,qBAAqB,EAAE,SAAS,EAAI;AAAA,QACpC,qBAAqB,EAAE,SAAS,KAAK;AAAA,QACrC,qBAAqB,EAAE,SAAS,KAAK;AAAA,QACrC,YAAY,EAAE,SAAS,OAAO;AAAA,QAC9B,cAAc,EAAE,SAAS,OAAO;AAAA,QAChC,sBAAsB,EAAE,SAAS,QAAQ,OAAO,CAAC,QAAQ,OAAO,EAAE;AAAA,QAClE,sBAAsB,EAAE,SAAS,SAAS,OAAO,CAAC,QAAQ,OAAO,EAAE;AAAA,MACrE;AAAA,MAEA,OAAO;AACL,aAAK,YAAY,IAAI,MAAM,QAAQ;AACnC,aAAK,aAAa,IAAI,MAAM,QAAQ;AACpC,cAAM,eAAe,KAAK,GAAG,cAAc,iBAAiB,EAAE,WAAW,eAAe;AACxF,aAAK,cAAc,aAAa;AAChC,aAAK,YAAY,aAAa;AAC9B,aAAK,cAAc,KAAK,GAAG,SAAS;AACpC,aAAK,WAAW;AAChB,aAAK,WAAW;AAChB,aAAK,SAAS;AACd,aAAK,WAAW;AAAA,MAClB;AAAA,MAEA,OAAO,SAAS;AACd,YACE,KAAK,KAAK,yBAAyB,QAAQ,wBAC3C,KAAK,KAAK,eAAe,QAAQ,cACjC,KAAK,KAAK,iBAAiB,QAAQ,gBACnC,KAAK,KAAK,SAAS,QAAQ,MAC3B;AACA,eAAK,mBAAmB;AAAA,QAC1B;AACA,YACE,KAAK,KAAK,yBAAyB,QAAQ,wBAC3C,KAAK,KAAK,eAAe,QAAQ,cACjC,KAAK,KAAK,iBAAiB,QAAQ,gBACnC,KAAK,KAAK,SAAS,QAAQ,MAC3B;AACA,eAAK,mBAAmB;AAAA,QAC1B;AACA,YAAI,KAAK,KAAK,WAAW,KAAK,KAAK,qBAAqB;AACtD,eAAK,mBAAmB;AAAA,QAC1B,OAAO;AACL,eAAK,mBAAmB;AAAA,QAC1B;AACA,YAAI,KAAK,KAAK,WAAW,KAAK,KAAK,qBAAqB;AACtD,eAAK,mBAAmB;AAAA,QAC1B,OAAO;AACL,eAAK,mBAAmB;AAAA,QAC1B;AAAA,MACF;AAAA,MAEA,QAAQ;AACN,aAAK,SAAS;AACd,aAAK,WAAW;AAAA,MAClB;AAAA,MAEA,SAAS;AACP,aAAK,mBAAmB;AACxB,aAAK,mBAAmB;AAAA,MAC1B;AAAA,MAEA,mBAAmB;AACjB,eAAO,KAAK,KAAK,WAAW,KAAK;AAAA,MACnC;AAAA,MAEA,mBAAmB;AACjB,aAAK,UAAU,IAAI,GAAG,GAAG,CAAC;AAC1B,YAAI,KAAK,iBAAiB,GAAG;AAC3B,gBAAM,QAAQ,KAAK,SAAS,QAAQ,IAAI,KAAK,SAAS,QAAQ;AAC9D,gBAAMC,SAAQ,KAAK,SAAS,MAAM;AAClC,gBAAM,IAAI,KAAK,IAAIA,MAAK,IAAI;AAC5B,gBAAM,IAAI,CAAC,KAAK,IAAIA,MAAK,IAAI;AAC7B,eAAK,UAAU,IAAI,GAAG,GAAG,CAAC;AAAA,QAC5B;AACA,eAAO,KAAK;AAAA,MACd;AAAA,MAEA,mBAAmB;AACjB,eAAO,KAAK,KAAK,WAAW,KAAK;AAAA,MACnC;AAAA,MAEA,eAAe,IAAI;AACjB,YAAI,CAAC,KAAK,iBAAiB,EAAG;AAE9B,cAAM,QAAQ,KAAK,SAAS,QAAQ,IAAI,KAAK,SAAS,QAAQ;AAC9D,cAAMA,SAAQ,KAAK,SAAS,MAAM;AAClC,cAAM,aAAa,KAAK;AACxB,mBAAW,IAAI,KAAK,IAAIA,MAAK,IAAI;AACjC,mBAAW,IAAI,KAAK,IAAIA,MAAK,IAAI;AACjC,mBAAW,eAAgB,KAAK,KAAK,sBAAsB,KAAM,GAAI;AAErE,aAAK,UAAU,SAAS,KAAK,WAAW;AACxC,YAAI,IAAI,KAAK,YAAY,SAAS,IAAI,WAAW;AACjD,YAAI,KAAK,IAAI,CAAC,KAAK,KAAK,GAAG,KAAK,IAAI,KAAK,KAAK,GAAG,CAAC,CAAC;AACnD,aAAK,YAAY,SAAS,IAAI;AAAA,MAChC;AAAA,MAEA,MAAM,SAAU,GAAG,IAAI;AACrB,aAAK,eAAe,EAAE;AAAA,MACxB;AAAA,MAEA,eAAe;AACb,cAAM,WAAW,SAAS,cAAc,KAAK;AAC7C,iBAAS,aAAa,MAAM,kBAAkB;AAC9C,iBAAS;AAAA,UACP;AAAA,UACA,qBAAqB,KAAK,KAAK,oBAAoB,IAAI,KAAK,KAAK,UAAU,WAAW,KAAK,KAAK,YAAY;AAAA,QAC9G;AACA,iBAAS,KAAK,YAAY,QAAQ;AAClC,aAAK,WAAW;AAAA,MAClB;AAAA,MAEA,gBAAgB;AACd,cAAM,YAAY,SAAS,cAAc,KAAK;AAC9C,kBAAU,aAAa,MAAM,mBAAmB;AAChD,kBAAU;AAAA,UACR;AAAA,UACA,qBAAqB,KAAK,KAAK,oBAAoB,IAAI,KAAK,KAAK,UAAU,WAAW,KAAK,KAAK,YAAY;AAAA,QAC9G;AACA,iBAAS,KAAK,YAAY,SAAS;AACnC,aAAK,YAAY;AAAA,MACnB;AAAA,MAEA,qBAAqB;AACnB,YAAI,KAAK,aAAc;AACvB,aAAK,aAAa;AAClB,cAAM,UAAU;AAAA,UACd,MAAM,KAAK,KAAK;AAAA,UAChB,MAAM,KAAK;AAAA,UACX,OAAO;AAAA,UACP,UAAU;AAAA,QACZ;AACA,aAAK,SAAS,MAAM,QAAQ;AAC5B,YAAI,KAAK,KAAK,SAAS,UAAU;AAC/B,eAAK,SAAS,MAAM,SAAS;AAC7B,kBAAQ,WAAW,EAAE,MAAM,OAAO,QAAQ,MAAM;AAAA,QAClD,OAAO;AACL,eAAK,SAAS,MAAM,SAAS;AAAA,QAC/B;AAEA,aAAK,eAAe,YAAS,OAAO,OAAO;AAC3C,aAAK,aAAa,GAAG,QAAQ,CAAC,KAAK,SAAS;AAC1C,eAAK,WAAW;AAChB,eAAK,SAAS;AAAA,QAChB,CAAC;AACD,aAAK,aAAa,GAAG,OAAO,CAAC,KAAK,SAAS;AACzC,eAAK,SAAS;AAAA,QAChB,CAAC;AAAA,MACH;AAAA,MAEA,qBAAqB;AACnB,YAAI,KAAK,aAAc;AACvB,aAAK,cAAc;AACnB,cAAM,UAAU;AAAA,UACd,MAAM,KAAK,KAAK;AAAA,UAChB,MAAM,KAAK;AAAA,UACX,OAAO;AAAA,UACP,UAAU;AAAA,QACZ;AACA,aAAK,UAAU,MAAM,QAAQ;AAC7B,YAAI,KAAK,KAAK,SAAS,UAAU;AAC/B,eAAK,UAAU,MAAM,SAAS;AAC9B,kBAAQ,WAAW,EAAE,MAAM,OAAO,QAAQ,MAAM;AAAA,QAClD,OAAO;AACL,eAAK,UAAU,MAAM,SAAS;AAAA,QAChC;AAEA,aAAK,eAAe,YAAS,OAAO,OAAO;AAC3C,aAAK,aAAa,GAAG,QAAQ,CAAC,KAAK,SAAS;AAC1C,eAAK,WAAW;AAChB,eAAK,WAAW;AAAA,QAClB,CAAC;AACD,aAAK,aAAa,GAAG,OAAO,CAAC,KAAK,SAAS;AACzC,eAAK,WAAW;AAAA,QAClB,CAAC;AAAA,MACH;AAAA,MAEA,qBAAqB;AACnB,YAAI,KAAK,cAAc;AACrB,eAAK,aAAa,QAAQ;AAC1B,eAAK,eAAe;AAAA,QACtB;AAEA,aAAK,WAAW;AAEhB,YAAI,KAAK,YAAY,KAAK,SAAS,YAAY;AAC7C,eAAK,SAAS,OAAO;AACrB,eAAK,WAAW;AAAA,QAClB;AAAA,MACF;AAAA,MAEA,qBAAqB;AACnB,YAAI,KAAK,cAAc;AACrB,eAAK,aAAa,QAAQ;AAC1B,eAAK,eAAe;AAAA,QACtB;AAEA,aAAK,WAAW;AAEhB,YAAI,KAAK,aAAa,KAAK,UAAU,YAAY;AAC/C,eAAK,UAAU,OAAO;AACtB,eAAK,YAAY;AAAA,QACnB;AAAA,MACF;AAAA,IACF,CAAC;AAAA;AAAA;;;ACnND;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;ACNA;AAAA;AAAA,QAAM,WAAW;AAAA,MACf,MAAM,MAAM;AAAA,MACZ,QAAQ,MAAM;AAAA,MACd,UAAU,MAAM;AAAA,IAClB;AASA,WAAO,UAAU,OAAO,kBAAkB,mBAAmB;AAAA,MAC3D,QAAQ;AAAA,QACN,MAAM,EAAE,SAAS,IAAI;AAAA,QACrB,WAAW,EAAC,SAAS,MAAK;AAAA,QAC1B,UAAU,EAAE,SAAS,EAAE;AAAA,QACvB,mBAAmB,EAAE,SAAS,OAAO,MAAM,UAAU;AAAA,QACrD,mBAAmB,EAAE,SAAS,EAAE;AAAA,QAChC,MAAM,EAAE,SAAS,UAAU,OAAO,OAAO,KAAK,QAAQ,EAAE;AAAA,QACxD,aAAa,EAAE,SAAS,UAAU,KAAK,EAAE;AAAA,QACzC,WAAW,EAAE,SAAS,EAAE;AAAA,QACxB,SAAS,EAAE,SAAS,EAAE;AAAA,MACxB;AAAA,MAEA,MAAM,WAAY;AAEhB,aAAK,QAAQ;AAEb,aAAK,QAAQ;AAEb,aAAK,gBAAgB,CAAC;AAEtB,cAAM,QAAQ,KAAK,GAAG,YAAY,MAAM;AAExC,YAAI,OAAO;AACT,eAAK,KAAK,KAAK;AAAA,QACjB,OAAO;AACL,eAAK,GAAG,iBAAiB,gBAAgB,CAAC,MAAM;AAC9C,iBAAK,KAAK,EAAE,OAAO,KAAK;AAAA,UAC1B,CAAC;AAAA,QACH;AAAA,MACF;AAAA,MAEA,MAAM,SAAU,OAAO;AACrB,cAAM,KAAK,KAAK;AAChB,aAAK,QAAQ;AACb,aAAK,QAAQ,IAAI,MAAM,eAAe,KAAK;AAC3C,aAAK,MAAM,iBAAiB,QAAQ,CAAC,MAAM;AACzC,aAAG,KAAK,kBAAkB,EAAE,QAAQ,EAAE,QAAQ,WAAW,EAAE,UAAU,CAAC;AAAA,QACxE,CAAC;AACD,aAAK,MAAM,iBAAiB,YAAY,CAAC,MAAM;AAC7C,aAAG,KAAK,sBAAsB,EAAE,QAAQ,EAAE,QAAQ,WAAW,EAAE,UAAU,CAAC;AAAA,QAC5E,CAAC;AACD,YAAI,KAAK,KAAK,KAAM,MAAK,OAAO,CAAC,CAAC;AAAA,MACpC;AAAA,MAEA,QAAQ,WAAY;AAClB,YAAI,KAAK,MAAO,MAAK,MAAM,cAAc;AAAA,MAC3C;AAAA,MAEA,QAAQ,SAAU,UAAU;AAC1B,YAAI,CAAC,SAAU;AAEf,cAAM,OAAO,KAAK;AAClB,cAAM,UAAU,OAAO,MAAM,KAAK,MAAM,QAAQ;AAGhD,YAAI,UAAU,SAAS;AACrB,eAAK,WAAW;AAChB,cAAI,KAAK,KAAM,MAAK,WAAW;AAC/B;AAAA,QACF;AAGA,aAAK,cAAc,QAAQ,CAAC,WAAW;AACrC,cAAI,cAAc,WAAW,KAAK,UAAU;AAC1C,mBAAO,YAAY,KAAK,QAAQ;AAAA,UAClC;AACA,cAAI,uBAAuB,SAAS;AAClC,mBAAO,oBAAoB,KAAK;AAAA,UAClC;AACA,cAAI,UAAU,WAAW,iBAAiB,SAAS;AACjD,mBAAO,QAAQ,SAAS,KAAK,IAAI,GAAG,KAAK,WAAW;AAAA,UACtD;AACA,cAAI,eAAe,SAAS;AAC1B,mBAAO,sBAAsB,KAAK,SAAS;AAAA,UAC7C;AAAA,QACF,CAAC;AAAA,MACH;AAAA,MAEA,YAAY,WAAY;AACtB,cAAM,OAAO,KAAK;AAClB,iBAAS,IAAI,GAAG,IAAI,KAAK,cAAc,QAAQ,KAAK;AAClD,eAAK,oBACD,KAAK,cAAc,CAAC,EAAE,QAAQ,KAAK,iBAAiB,IACpD,KAAK,cAAc,CAAC,EAAE,KAAK;AAAA,QACjC;AACA,aAAK,cAAc,SAAS;AAAA,MAC9B;AAAA,MAEA,YAAY,WAAY;AACtB,YAAI,CAAC,KAAK,MAAO;AAEjB,cAAM,QAAQ,KAAK,OACjB,OAAO,KAAK,MACZ,QAAQ,MAAM,eAAe,MAAM,YAAY,CAAC,GAAG,cAAc,CAAC;AAEpE,YAAI,CAAC,MAAM,OAAQ;AAEnB,cAAM,KAAK,KAAK,YAAY,KAAK,OAAO,iBAAiB,KAAK,IAAI;AAElE,iBAAS,MAAM,IAAI,GAAI,OAAO,MAAM,CAAC,GAAI,KAAK;AAC5C,cAAI,KAAK,KAAK,MAAM,EAAE,GAAG;AACvB,kBAAM,SAAS,KAAK,MAAM,WAAW,MAAM,KAAK;AAEhD,mBAAO,UAAU;AACjB,mBAAO,oBAAoB,KAAK;AAChC,gBAAI,KAAK,SAAU,QAAO,YAAY,KAAK,QAAQ;AACnD,gBAAI,KAAK,cAAc,EAAG,QAAO,sBAAsB,KAAK,SAAS;AAKrE,mBAAO,QAAQ,KAAK,MAAM,OAAO,KAAK,UAAU,GAAI;AACpD,mBACG,QAAQ,SAAS,KAAK,IAAI,GAAG,KAAK,WAAW,EAC7C,OAAO,KAAK,iBAAiB,EAC7B,KAAK;AACR,iBAAK,cAAc,KAAK,MAAM;AAAA,UAChC;AAAA,QACF;AAAA,MACF;AAAA,MAEA,MAAM,SAAU,GAAG,IAAI;AACrB,YAAI,KAAK,SAAS,CAAC,MAAM,EAAE,EAAG,MAAK,MAAM,OAAO,KAAK,GAAI;AAAA,MAC3D;AAAA,IACF,CAAC;AAMD,aAAS,iBAAiB,GAAG;AAC3B,aAAO,IAAI,OAAO,MAAM,EAAE,MAAM,KAAK,EAAE,IAAI,YAAY,EAAE,KAAK,IAAI,IAAI,GAAG;AAAA,IAC3E;AAKA,aAAS,aAAa,GAAG;AACvB,aAAO,EAAE,QAAQ,uBAAuB,MAAM;AAAA,IAChD;AAAA;AAAA;;;ACzJA;AAAA;AAKA,WAAO,UAAU,MAAM,gBAAgB,SAAW,SAAU;AAE1D,WAAK,UAAY,YAAY,SAAc,UAAU,MAAM;AAAA,IAE7D;AAEA,UAAM,cAAc,YAAY;AAAA,MAE9B,aAAa,MAAM;AAAA,MAEnB,aAAa;AAAA,MAEb,MAAM,SAAW,KAAK,QAAQ,YAAY,SAAU;AAElD,YAAI,QAAQ;AAEZ,YAAI,OAAS,MAAM,SAAS,SAAc,MAAM,YAAY,eAAgB,GAAI,IAAI,MAAM;AAE1F,YAAI,SAAS,IAAI,MAAM,WAAY,MAAM,OAAQ;AACjD,eAAO,QAAS,MAAM,IAAK;AAC3B,eAAO,KAAM,KAAK,SAAW,MAAO;AAElC,iBAAQ,MAAM,MAAO,MAAM,IAAK,CAAE;AAAA,QAEpC,GAAG,YAAY,OAAQ;AAAA,MAEzB;AAAA,MAEA,SAAS,SAAW,OAAQ;AAE1B,aAAK,OAAO;AACZ,eAAO;AAAA,MAET;AAAA,MAEA,iBAAiB,SAAW,OAAQ;AAElC,aAAK,eAAe;AACpB,eAAO;AAAA,MAET;AAAA,MAEA,SAAS;AAAA,QAEP,IAAI,cAAe,OAAQ;AAEzB,kBAAQ,KAAM,oGAAqG;AAAA,QAErH;AAAA,MAEF;AAAA,MAEA,gBAAgB,SAAW,OAAQ;AAEjC,aAAK,cAAc;AACnB,eAAO;AAAA,MAET;AAAA,MAEA,OAAO,SAAW,MAAM,MAAO;AAE7B,iBAAS,qBAAsBC,MAAK,MAAO;AAIzC,cAAI,QAAQ,CAAC;AACb,cAAI,aAAaA,KAAI;AAErB,mBAAU,IAAI,GAAG,IAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAEpD,gBAAI,QAAQ,WAAY,CAAE;AAE1B,gBAAK,MAAM,aAAa,MAAO;AAE7B,oBAAM,KAAM,KAAM;AAAA,YAEpB;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,aAAcC,OAAO;AAE5B,cAAKA,MAAK,WAAW,EAAI,QAAO,CAAC;AAEjC,cAAI,QAAQA,MAAK,KAAK,EAAE,MAAO,KAAM;AACrC,cAAI,QAAQ,IAAI,MAAO,MAAM,MAAO;AAEpC,mBAAU,IAAI,GAAG,IAAI,MAAM,QAAQ,IAAI,GAAG,KAAO;AAE/C,kBAAO,CAAE,IAAI,MAAO,CAAE;AAAA,UAExB;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,YAAaA,OAAO;AAE3B,cAAKA,MAAK,WAAW,EAAI,QAAO,CAAC;AAEjC,cAAI,QAAQA,MAAK,KAAK,EAAE,MAAO,KAAM;AACrC,cAAI,QAAQ,IAAI,MAAO,MAAM,MAAO;AAEpC,mBAAU,IAAI,GAAG,IAAI,MAAM,QAAQ,IAAI,GAAG,KAAO;AAE/C,kBAAO,CAAE,IAAI,WAAY,MAAO,CAAE,CAAE;AAAA,UAEtC;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,UAAWA,OAAO;AAEzB,cAAKA,MAAK,WAAW,EAAI,QAAO,CAAC;AAEjC,cAAI,QAAQA,MAAK,KAAK,EAAE,MAAO,KAAM;AACrC,cAAI,QAAQ,IAAI,MAAO,MAAM,MAAO;AAEpC,mBAAU,IAAI,GAAG,IAAI,MAAM,QAAQ,IAAI,GAAG,KAAO;AAE/C,kBAAO,CAAE,IAAI,SAAU,MAAO,CAAE,CAAE;AAAA,UAEpC;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,QAASA,OAAO;AAEvB,iBAAOA,MAAK,UAAW,CAAE;AAAA,QAE3B;AAEA,iBAAS,aAAa;AAEpB,iBAAO,mBAAqB;AAAA,QAE9B;AAEA,iBAAS,QAAS,QAAS;AAEzB,iBAAO,OAAO,KAAM,MAAO,EAAE,WAAW;AAAA,QAE1C;AAIA,iBAAS,WAAYD,MAAM;AAEzB,iBAAO;AAAA,YACL,MAAM,eAAgB,qBAAsBA,MAAK,MAAO,EAAG,CAAE,CAAE;AAAA,YAC/D,QAAQ,iBAAkB,qBAAsBA,MAAK,SAAU,EAAG,CAAE,CAAE;AAAA,UACxE;AAAA,QAEF;AAEA,iBAAS,eAAgBA,MAAM;AAE7B,cAAOA,SAAQ,UAAiBA,KAAI,aAAc,OAAQ,MAAM,MAAS;AAEvE,mBAAO,WAAYA,KAAI,aAAc,OAAQ,CAAE;AAAA,UAEjD,OAAO;AAEL,mBAAO;AAAA,UAET;AAAA,QAEF;AAEA,iBAAS,iBAAkBA,MAAM;AAE/B,iBAAOA,SAAQ,SAAYA,KAAI,cAAc;AAAA,QAE/C;AAIA,iBAAS,aAAcA,MAAK,aAAa,UAAU,QAAS;AAE1D,cAAIE,WAAU,qBAAsBF,MAAK,WAAY,EAAG,CAAE;AAE1D,cAAKE,aAAY,QAAY;AAE3B,gBAAI,WAAW,qBAAsBA,UAAS,QAAS;AAEvD,qBAAU,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAO;AAE3C,qBAAQ,SAAU,CAAE,CAAE;AAAA,YAExB;AAAA,UAEF;AAAA,QAEF;AAEA,iBAAS,aAAc,MAAM,SAAU;AAErC,mBAAU,QAAQ,MAAO;AAEvB,gBAAI,SAAS,KAAM,IAAK;AACxB,mBAAO,QAAQ,QAAS,KAAM,IAAK,CAAE;AAAA,UAEvC;AAAA,QAEF;AAIA,iBAAS,SAAU,MAAM,SAAU;AAEjC,cAAK,KAAK,UAAU,OAAY,QAAO,KAAK;AAE5C,eAAK,QAAQ,QAAS,IAAK;AAE3B,iBAAO,KAAK;AAAA,QAEd;AAIA,iBAAS,eAAgBF,MAAM;AAE7B,cAAI,OAAO;AAAA,YACT,SAAS,CAAC;AAAA,YACV,UAAU,CAAC;AAAA,YACX,UAAU,CAAC;AAAA,UACb;AAEA,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,gBAAI;AAEJ,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,qBAAK,MAAM,aAAc,IAAK;AAC9B,qBAAK,QAAS,EAAG,IAAI,YAAa,KAAM;AACxC;AAAA,cAEF,KAAK;AACH,qBAAK,MAAM,aAAc,IAAK;AAC9B,qBAAK,SAAU,EAAG,IAAI,sBAAuB,KAAM;AACnD;AAAA,cAEF,KAAK;AACH,qBAAK,MAAM,aAAc,QAAS;AAClC,qBAAK,SAAU,EAAG,IAAI,sBAAuB,KAAM;AACnD;AAAA,cAEF;AACE,wBAAQ,IAAK,KAAM;AAAA,YAEvB;AAAA,UAEF;AAEA,kBAAQ,WAAYA,KAAI,aAAc,IAAK,CAAE,IAAI;AAAA,QAEnD;AAEA,iBAAS,sBAAuBA,MAAM;AAEpC,cAAI,OAAO;AAAA,YACT,QAAQ,CAAC;AAAA,UACX;AAEA,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,oBAAI,KAAK,QAAS,MAAM,aAAc,QAAS,CAAE;AACjD,oBAAI,WAAW,MAAM,aAAc,UAAW;AAC9C,qBAAK,OAAQ,QAAS,IAAI;AAC1B;AAAA,YAEJ;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,sBAAuBA,MAAM;AAEpC,cAAI,OAAO,CAAC;AAEZ,cAAI,SAASA,KAAI,aAAc,QAAS;AAIxC,cAAI,QAAQ,OAAO,MAAO,GAAI;AAE9B,cAAI,KAAK,MAAM,MAAM;AACrB,cAAI,MAAM,MAAM,MAAM;AAItB,cAAI,cAAgB,IAAI,QAAS,GAAI,MAAM;AAC3C,cAAI,eAAiB,IAAI,QAAS,GAAI,MAAM;AAE5C,cAAK,cAAe;AAIlB,oBAAQ,IAAI,MAAO,GAAI;AACvB,kBAAM,MAAM,MAAM;AAClB,iBAAK,SAAS,MAAM,MAAM;AAAA,UAE5B,WAAY,aAAc;AAIxB,gBAAI,UAAU,IAAI,MAAO,GAAI;AAC7B,kBAAM,QAAQ,MAAM;AAEpB,qBAAU,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAO;AAE1C,sBAAS,CAAE,IAAI,SAAU,QAAS,CAAE,EAAE,QAAS,MAAM,EAAG,CAAE;AAAA,YAE5D;AAEA,iBAAK,UAAU;AAAA,UAEjB;AAEA,eAAK,KAAK;AACV,eAAK,MAAM;AAEX,eAAK,cAAc;AACnB,eAAK,eAAe;AAEpB,eAAK,UAAU,QAASA,KAAI,aAAc,QAAS,CAAE;AAErD,iBAAO;AAAA,QAET;AAEA,iBAAS,eAAgB,MAAO;AAE9B,cAAI,SAAS,CAAC;AAEd,cAAI,WAAW,KAAK;AACpB,cAAI,WAAW,KAAK;AACpB,cAAI,UAAU,KAAK;AAEnB,mBAAU,UAAU,UAAW;AAE7B,gBAAK,SAAS,eAAgB,MAAO,GAAI;AAEvC,kBAAI,UAAU,SAAU,MAAO;AAC/B,kBAAI,UAAU,SAAU,QAAQ,OAAQ;AAExC,kBAAI,UAAU,QAAQ,OAAO;AAC7B,kBAAI,WAAW,QAAQ,OAAO;AAE9B,kBAAI,cAAc,QAAS,OAAQ;AACnC,kBAAI,eAAe,QAAS,QAAS;AAErC,kBAAI,YAAY,sBAAuB,SAAS,aAAa,YAAa;AAE1E,mCAAsB,WAAW,MAAO;AAAA,YAE1C;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,aAAc,IAAK;AAE1B,iBAAO,SAAU,QAAQ,WAAY,EAAG,GAAG,cAAe;AAAA,QAE5D;AAEA,iBAAS,sBAAuB,SAAS,aAAa,cAAe;AAEnE,cAAI,OAAO,QAAQ,MAAO,QAAQ,EAAG;AACrC,cAAI,WAAW,QAAS,KAAK,EAAG;AAEhC,cAAI,YAAY,KAAK,WAAY,QAAQ,GAAI;AAC7C,cAAI,gBAAgB,KAAK,OAAO,MAAM,EAAE,UAAU;AAElD,cAAI,MAAM;AACV,cAAI,GAAG,IAAI,GAAG;AAEd,cAAI,OAAO,CAAC;AAKZ,kBAAS,WAAY;AAAA,YAEnB,KAAK;AAEH,mBAAM,IAAI,GAAG,KAAK,YAAY,MAAM,QAAQ,IAAI,IAAI,KAAO;AAEzD,uBAAO,YAAY,MAAO,CAAE;AAC5B,yBAAS,IAAI,aAAa;AAE1B,oBAAK,KAAM,IAAK,MAAM,OAAY,MAAM,IAAK,IAAI,CAAC;AAElD,oBAAK,QAAQ,gBAAgB,MAAO;AAElC,sBAAI,QAAQ,aAAa,MAAO,MAAO;AACvC,sBAAI,QAAQ,QAAQ,QAAS,CAAE,IAAI,IAAI,QAAQ,QAAS,CAAE;AAE1D,uBAAM,IAAK,EAAG,KAAM,IAAI;AAAA,gBAE1B,OAAO;AAEL,uBAAM,IAAI,GAAG,KAAK,aAAa,QAAQ,IAAI,IAAI,KAAO;AAEpD,yBAAM,IAAK,EAAG,CAAE,IAAI,aAAa,MAAO,SAAS,CAAE;AAAA,kBAErD;AAAA,gBAEF;AAAA,cAEF;AAEA;AAAA,YAEF,KAAK;AACH,sBAAQ,KAAM,2EAA2E,SAAU;AACnG;AAAA,YAEF,KAAK;AACH,sBAAQ,KAAM,2EAA2E,SAAU;AACnG;AAAA,YAEF,KAAK;AACH,sBAAQ,KAAM,2EAA2E,SAAU;AACnG;AAAA,UAEJ;AAEA,cAAI,YAAY,qBAAsB,MAAM,aAAc;AAE1D,cAAI,YAAY;AAAA,YACd,MAAM,SAAS;AAAA,YACf;AAAA,UACF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,qBAAsB,MAAM,eAAgB;AAEnD,cAAI,YAAY,CAAC;AAIjB,mBAAU,QAAQ,MAAO;AAEvB,sBAAU,KAAM,EAAE,MAAM,WAAY,IAAK,GAAG,OAAO,KAAM,IAAK,EAAE,CAAE;AAAA,UAEpE;AAIA,oBAAU,KAAM,SAAU;AAI1B,mBAAU,IAAI,GAAG,IAAI,IAAI,KAAO;AAE9B,mCAAwB,WAAW,GAAG,cAAc,SAAU,CAAE,CAAE;AAAA,UAEpE;AAEA,iBAAO;AAIP,mBAAS,UAAW,GAAG,GAAI;AAEzB,mBAAO,EAAE,OAAO,EAAE;AAAA,UAEpB;AAAA,QAEF;AAEA,YAAI,WAAW,IAAI,MAAM,QAAQ;AACjC,YAAI,QAAQ,IAAI,MAAM,QAAQ;AAC9B,YAAI,aAAa,IAAI,MAAM,WAAW;AAEtC,iBAAS,qBAAsB,WAAW,QAAS;AAEjD,cAAI,YAAY,UAAU;AAC1B,cAAI,OAAO,UAAU;AAErB,cAAI,QAAQ,CAAC;AACb,cAAI,eAAe,CAAC;AACpB,cAAI,iBAAiB,CAAC;AACtB,cAAI,YAAY,CAAC;AAEjB,mBAAU,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAI,GAAG,KAAO;AAEnD,gBAAI,WAAW,UAAW,CAAE;AAE5B,gBAAI,OAAO,SAAS;AACpB,gBAAI,QAAQ,SAAS;AAErB,mBAAO,UAAW,KAAM,EAAE,UAAU;AACpC,mBAAO,UAAW,UAAU,YAAY,KAAM;AAE9C,kBAAM,KAAM,IAAK;AACjB,yBAAa,KAAM,SAAS,GAAG,SAAS,GAAG,SAAS,CAAE;AACtD,2BAAe,KAAM,WAAW,GAAG,WAAW,GAAG,WAAW,GAAG,WAAW,CAAE;AAC5E,sBAAU,KAAM,MAAM,GAAG,MAAM,GAAG,MAAM,CAAE;AAAA,UAE5C;AAEA,cAAK,aAAa,SAAS,EAAI,QAAO,KAAM,IAAI,MAAM,oBAAqB,OAAO,aAAa,OAAO,YAAa,CAAE;AACrH,cAAK,eAAe,SAAS,EAAI,QAAO,KAAM,IAAI,MAAM,wBAAyB,OAAO,eAAe,OAAO,cAAe,CAAE;AAC/H,cAAK,UAAU,SAAS,EAAI,QAAO,KAAM,IAAI,MAAM,oBAAqB,OAAO,UAAU,OAAO,SAAU,CAAE;AAE5G,iBAAO;AAAA,QAET;AAEA,iBAAS,uBAAwB,WAAW,UAAU,cAAe;AAEnE,cAAI;AAEJ,cAAI,QAAQ;AACZ,cAAI,GAAG;AAIP,eAAM,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAI,GAAG,KAAO;AAE/C,uBAAW,UAAW,CAAE;AAExB,gBAAK,SAAS,MAAO,QAAS,MAAM,QAAY;AAE9C,uBAAS,MAAO,QAAS,IAAI;AAAA,YAE/B,OAAO;AAEL,sBAAQ;AAAA,YAEV;AAAA,UAEF;AAEA,cAAK,UAAU,MAAO;AAIpB,iBAAM,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAI,GAAG,KAAO;AAE/C,yBAAW,UAAW,CAAE;AAExB,uBAAS,MAAO,QAAS,IAAI;AAAA,YAE/B;AAAA,UAEF,OAAO;AAIL,mCAAwB,WAAW,QAAS;AAAA,UAE9C;AAAA,QAEF;AAEA,iBAAS,uBAAwB,WAAW,UAAW;AAErD,cAAI,MAAM;AAEV,mBAAU,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAI,GAAG,KAAO;AAEnD,gBAAI,WAAW,UAAW,CAAE;AAE5B,gBAAK,SAAS,MAAO,QAAS,MAAM,MAAO;AAEzC,qBAAO,QAAS,WAAW,GAAG,QAAS;AACvC,qBAAO,QAAS,WAAW,GAAG,QAAS;AAEvC,kBAAK,SAAS,MAAO;AAEnB,yBAAS,MAAO,QAAS,IAAI,KAAK,MAAO,QAAS;AAClD;AAAA,cAEF;AAEA,kBAAK,SAAS,MAAO;AAEnB,yBAAS,MAAO,QAAS,IAAI,KAAK,MAAO,QAAS;AAClD;AAAA,cAEF;AAEA,0BAAa,UAAU,MAAM,MAAM,QAAS;AAAA,YAE9C;AAAA,UAEF;AAAA,QAEF;AAEA,iBAAS,QAAS,WAAW,GAAG,UAAW;AAEzC,iBAAQ,KAAK,GAAI;AAEf,gBAAI,WAAW,UAAW,CAAE;AAE5B,gBAAK,SAAS,MAAO,QAAS,MAAM,KAAO,QAAO;AAElD;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,QAAS,WAAW,GAAG,UAAW;AAEzC,iBAAQ,IAAI,UAAU,QAAS;AAE7B,gBAAI,WAAW,UAAW,CAAE;AAE5B,gBAAK,SAAS,MAAO,QAAS,MAAM,KAAO,QAAO;AAElD;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,YAAa,KAAK,MAAM,MAAM,UAAW;AAEhD,cAAO,KAAK,OAAO,KAAK,SAAW,GAAI;AAErC,gBAAI,MAAO,QAAS,IAAI,KAAK,MAAO,QAAS;AAC7C;AAAA,UAEF;AAEA,cAAI,MAAO,QAAS,KAAQ,IAAI,OAAO,KAAK,SAAW,KAAK,MAAO,QAAS,IAAI,KAAK,MAAO,QAAS,MAAQ,KAAK,OAAO,KAAK,QAAW,KAAK,MAAO,QAAS;AAAA,QAEhK;AAIA,iBAAS,mBAAoBA,MAAM;AAEjC,cAAI,OAAO;AAAA,YACT,MAAMA,KAAI,aAAc,IAAK,KAAK;AAAA,YAClC,OAAO,WAAYA,KAAI,aAAc,OAAQ,KAAK,CAAE;AAAA,YACpD,KAAK,WAAYA,KAAI,aAAc,KAAM,KAAK,CAAE;AAAA,YAChD,YAAY,CAAC;AAAA,UACf;AAEA,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,qBAAK,WAAW,KAAM,QAAS,MAAM,aAAc,KAAM,CAAE,CAAE;AAC7D;AAAA,YAEJ;AAAA,UAEF;AAEA,kBAAQ,MAAOA,KAAI,aAAc,IAAK,CAAE,IAAI;AAAA,QAE9C;AAEA,iBAAS,mBAAoB,MAAO;AAElC,cAAI,SAAS,CAAC;AAEd,cAAI,OAAO,KAAK;AAChB,cAAI,WAAa,KAAK,MAAM,KAAK,SAAW;AAC5C,cAAIG,cAAa,KAAK;AAEtB,mBAAU,IAAI,GAAG,KAAKA,YAAW,QAAQ,IAAI,IAAI,KAAO;AAEtD,gBAAI,kBAAkB,aAAcA,YAAY,CAAE,CAAE;AAEpD,qBAAU,IAAI,GAAG,KAAK,gBAAgB,QAAQ,IAAI,IAAI,KAAO;AAE3D,qBAAO,KAAM,gBAAiB,CAAE,CAAE;AAAA,YAEpC;AAAA,UAEF;AAEA,iBAAO,IAAI,MAAM,cAAe,MAAM,UAAU,MAAO;AAAA,QAEzD;AAEA,iBAAS,iBAAkB,IAAK;AAE9B,iBAAO,SAAU,QAAQ,MAAO,EAAG,GAAG,kBAAmB;AAAA,QAE3D;AAIA,iBAAS,gBAAiBH,MAAM;AAE9B,cAAI,OAAO,CAAC;AAEZ,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AAEH,qBAAK,KAAK,QAAS,MAAM,aAAc,QAAS,CAAE;AAClD,qBAAK,OAAO,UAAW,KAAM;AAC7B;AAAA,cAEF,KAAK;AACH,qBAAK,KAAK,QAAS,MAAM,aAAc,QAAS,CAAE;AAClD,wBAAQ,KAAM,gEAAiE;AAC/E;AAAA,YAEJ;AAAA,UAEF;AAEA,kBAAQ,YAAaA,KAAI,aAAc,IAAK,CAAE,IAAI;AAAA,QAEpD;AAEA,iBAAS,UAAWA,MAAM;AAExB,cAAI,OAAO;AAAA,YACT,SAAS,CAAC;AAAA,UACZ;AAEA,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,qBAAK,kBAAkB,YAAa,MAAM,WAAY;AACtD;AAAA,cAEF,KAAK;AACH,oBAAI,KAAK,MAAM,aAAc,IAAK;AAClC,qBAAK,QAAS,EAAG,IAAI,YAAa,KAAM;AACxC;AAAA,cAEF,KAAK;AACH,qBAAK,SAAS,YAAa,KAAM;AACjC;AAAA,cAEF,KAAK;AACH,qBAAK,gBAAgB,mBAAoB,KAAM;AAC/C;AAAA,YAEJ;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,YAAaA,MAAM;AAE1B,cAAI,OAAO;AAAA,YACT,QAAQ,CAAC;AAAA,UACX;AAEA,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,oBAAI,WAAW,MAAM,aAAc,UAAW;AAC9C,oBAAI,KAAK,QAAS,MAAM,aAAc,QAAS,CAAE;AACjD,qBAAK,OAAQ,QAAS,IAAI;AAC1B;AAAA,YAEJ;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,mBAAoBA,MAAM;AAEjC,cAAI,OAAO;AAAA,YACT,QAAQ,CAAC;AAAA,UACX;AAEA,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,oBAAI,WAAW,MAAM,aAAc,UAAW;AAC9C,oBAAI,KAAK,QAAS,MAAM,aAAc,QAAS,CAAE;AACjD,oBAAI,SAAS,SAAU,MAAM,aAAc,QAAS,CAAE;AACtD,qBAAK,OAAQ,QAAS,IAAI,EAAE,IAAQ,OAAe;AACnD;AAAA,cAEF,KAAK;AACH,qBAAK,SAAS,UAAW,MAAM,WAAY;AAC3C;AAAA,cAEF,KAAK;AACH,qBAAK,IAAI,UAAW,MAAM,WAAY;AACtC;AAAA,YAEJ;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,gBAAiB,MAAO;AAE/B,cAAI,QAAQ;AAAA,YACV,IAAI,KAAK;AAAA,UACX;AAEA,cAAI,WAAW,QAAQ,WAAY,MAAM,EAAG;AAE5C,cAAK,KAAK,SAAS,QAAY;AAE7B,kBAAM,OAAO,UAAW,KAAK,IAAK;AAIlC,qBAAS,QAAQ,cAAc,MAAM,KAAK;AAC1C,qBAAS,QAAQ,cAAc,MAAM,KAAK;AAAA,UAE5C;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,UAAW,MAAO;AAEzB,cAAI,aAAa;AAEjB,cAAI,QAAQ;AAAA,YACV,QAAQ,CAAC;AAAA;AAAA,YACT,SAAS;AAAA,cACP,OAAO,CAAC;AAAA,cACR,QAAQ;AAAA,YACV;AAAA,YACA,SAAS;AAAA,cACP,OAAO,CAAC;AAAA,cACR,QAAQ;AAAA,YACV;AAAA,UACF;AAEA,cAAI,UAAU,KAAK;AACnB,cAAI,gBAAgB,KAAK;AAEzB,cAAI,SAAS,cAAc;AAC3B,cAAII,KAAI,cAAc;AACtB,cAAI,cAAc,cAAc,OAAO,MAAM;AAC7C,cAAI,eAAe,cAAc,OAAO,OAAO;AAE/C,cAAI,cAAc,KAAK,QAAS,KAAK,OAAO,OAAO,KAAM;AACzD,cAAI,gBAAgB,KAAK,QAAS,KAAK,OAAO,OAAO,eAAgB;AAErE,cAAI,UAAU,QAAS,cAAc,OAAO,OAAO,EAAG,EAAE;AACxD,cAAI,SAAS;AAEb,cAAI,GAAG,GAAG;AAIV,eAAM,IAAI,GAAG,IAAI,OAAO,QAAQ,IAAI,GAAG,KAAO;AAE5C,gBAAI,aAAa,OAAQ,CAAE;AAC3B,gBAAI,iBAAiB,CAAC;AAEtB,iBAAM,IAAI,GAAG,IAAI,YAAY,KAAO;AAElC,kBAAI,YAAYA,GAAG,SAAS,WAAY;AACxC,kBAAI,WAAWA,GAAG,SAAS,YAAa;AACxC,kBAAI,aAAa,QAAS,QAAS;AAEnC,6BAAe,KAAM,EAAE,OAAO,WAAW,QAAQ,WAAW,CAAE;AAE9D,wBAAU;AAAA,YAEZ;AAKA,2BAAe,KAAM,UAAW;AAKhC,iBAAM,IAAI,GAAG,IAAI,YAAY,KAAO;AAElC,kBAAIC,KAAI,eAAgB,CAAE;AAE1B,kBAAKA,OAAM,QAAY;AAErB,sBAAM,QAAQ,MAAM,KAAMA,GAAE,KAAM;AAClC,sBAAM,QAAQ,MAAM,KAAMA,GAAE,MAAO;AAAA,cAErC,OAAO;AAEL,sBAAM,QAAQ,MAAM,KAAM,CAAE;AAC5B,sBAAM,QAAQ,MAAM,KAAM,CAAE;AAAA,cAE9B;AAAA,YAEF;AAAA,UAEF;AAIA,cAAK,KAAK,iBAAkB;AAE1B,kBAAM,aAAa,IAAI,MAAM,QAAQ,EAAE,UAAW,KAAK,eAAgB,EAAE,UAAU;AAAA,UAErF,OAAO;AAEL,kBAAM,aAAa,IAAI,MAAM,QAAQ,EAAE,SAAS;AAAA,UAElD;AAIA,eAAM,IAAI,GAAG,IAAI,YAAY,MAAM,QAAQ,IAAI,GAAG,KAAO;AAEvD,gBAAI,OAAO,YAAY,MAAO,CAAE;AAChC,gBAAI,cAAc,IAAI,MAAM,QAAQ,EAAE,UAAW,cAAc,OAAO,IAAI,cAAc,MAAO,EAAE,UAAU;AAE3G,kBAAM,OAAO,KAAM,EAAE,MAAY,YAAyB,CAAE;AAAA,UAE9D;AAEA,iBAAO;AAIP,mBAAS,WAAY,GAAG,GAAI;AAE1B,mBAAO,EAAE,SAAS,EAAE;AAAA,UAEtB;AAAA,QAEF;AAEA,iBAAS,cAAe,IAAK;AAE3B,iBAAO,SAAU,QAAQ,YAAa,EAAG,GAAG,eAAgB;AAAA,QAE9D;AAIA,iBAAS,WAAYL,MAAM;AAEzB,cAAI,OAAO;AAAA,YACT,WAAW,qBAAsBA,MAAK,WAAY,EAAG,CAAE,EAAE;AAAA,UAC3D;AAEA,kBAAQ,OAAQA,KAAI,aAAc,IAAK,CAAE,IAAI;AAAA,QAE/C;AAEA,iBAAS,WAAY,MAAO;AAE1B,cAAK,KAAK,UAAU,OAAY,QAAO,KAAK;AAE5C,iBAAO,KAAK;AAAA,QAEd;AAEA,iBAAS,SAAU,IAAK;AAEtB,cAAI,OAAO,QAAQ,OAAQ,EAAG;AAE9B,cAAK,SAAS,QAAY;AAExB,mBAAO,SAAU,MAAM,UAAW;AAAA,UAEpC;AAEA,kBAAQ,KAAM,qDAAsD,EAAG;AAEvE,iBAAO;AAAA,QAET;AAIA,iBAAS,YAAaA,MAAM;AAE1B,cAAI,OAAO,CAAC;AAEZ,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,qBAAK,UAAU,yBAA0B,KAAM;AAC/C;AAAA,YAEJ;AAAA,UAEF;AAEA,kBAAQ,QAASA,KAAI,aAAc,IAAK,CAAE,IAAI;AAAA,QAEhD;AAEA,iBAAS,yBAA0BA,MAAM;AAEvC,cAAI,OAAO;AAAA,YACT,UAAU,CAAC;AAAA,YACX,UAAU,CAAC;AAAA,UACb;AAEA,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,oCAAqB,OAAO,IAAK;AACjC;AAAA,cAEF,KAAK;AACH,qBAAK,YAAY,qBAAsB,KAAM;AAC7C;AAAA,cAEF,KAAK;AACH,qBAAK,QAAQ,iBAAkB,KAAM;AACrC;AAAA,YAEJ;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,oBAAqBA,MAAK,MAAO;AAExC,cAAI,MAAMA,KAAI,aAAc,KAAM;AAElC,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,qBAAK,SAAU,GAAI,IAAI,mBAAoB,KAAM;AACjD;AAAA,cAEF,KAAK;AACH,qBAAK,SAAU,GAAI,IAAI,mBAAoB,KAAM;AACjD;AAAA,YAEJ;AAAA,UAEF;AAAA,QAEF;AAEA,iBAAS,mBAAoBA,MAAM;AAEjC,cAAI,OAAO,CAAC;AAEZ,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,qBAAK,YAAY,MAAM;AACvB;AAAA,YAEJ;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,mBAAoBA,MAAM;AAEjC,cAAI,OAAO,CAAC;AAEZ,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,qBAAK,SAAS,MAAM;AACpB;AAAA,YAEJ;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,qBAAsBA,MAAM;AAEnC,cAAI,OAAO,CAAC;AAEZ,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AACH,qBAAK,OAAO,MAAM;AAClB,qBAAK,aAAa,sBAAuB,KAAM;AAC/C;AAAA,YAEJ;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,sBAAuBA,MAAM;AAEpC,cAAI,OAAO,CAAC;AAEZ,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AACH,qBAAM,MAAM,QAAS,IAAI,qBAAsB,KAAM;AACrD;AAAA,cACF,KAAK;AACH,qBAAM,MAAM,QAAS,IAAI;AAAA,kBACvB,QAAQ,MAAM,aAAc,QAAS;AAAA,kBACrC,MAAM,qBAAsB,KAAM;AAAA,gBACpC;AACA;AAAA,YAEJ;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,qBAAsBA,MAAM;AAEnC,cAAI,OAAO,CAAC;AAEZ,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,qBAAM,MAAM,QAAS,IAAI,YAAa,MAAM,WAAY;AACxD;AAAA,cAEF,KAAK;AACH,qBAAM,MAAM,QAAS,IAAI,WAAY,MAAM,WAAY;AACvD;AAAA,cAEF,KAAK;AACH,qBAAM,MAAM,QAAS,IAAI,EAAE,IAAI,MAAM,aAAc,SAAU,GAAG,OAAO,4BAA6B,KAAM,EAAE;AAC5G;AAAA,YAEJ;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,4BAA6BA,MAAM;AAE1C,cAAI,OAAO;AAAA,YACT,WAAW,CAAC;AAAA,UACd;AAEA,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,iDAAkC,OAAO,IAAK;AAC9C;AAAA,YAEJ;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,iCAAkCA,MAAK,MAAO;AAErD,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,0DAA2C,OAAO,IAAK;AACvD;AAAA,YAEJ;AAAA,UAEF;AAAA,QAEF;AAEA,iBAAS,0CAA2CA,MAAK,MAAO;AAE9D,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AACH,qBAAK,UAAW,MAAM,QAAS,IAAI,WAAY,MAAM,WAAY;AACjE;AAAA,cAEF,KAAK;AAAA,cACL,KAAK;AAIH,oBAAK,MAAM,YAAY,YAAY,MAAM,QAAS;AAEhD,uBAAK,UAAW,MAAM,QAAS,IAAI;AAAA,gBAErC,WAAY,MAAM,YAAY,YAAY,MAAM,SAAU;AAExD,uBAAK,UAAW,MAAM,QAAS,IAAI;AAAA,gBAErC,OAAO;AAEL,uBAAK,UAAW,MAAM,QAAS,IAAI,SAAU,MAAM,WAAY;AAAA,gBAEjE;AAEA;AAAA,YAEJ;AAAA,UAEF;AAAA,QAEF;AAEA,iBAAS,iBAAkBA,MAAM;AAE/B,cAAI,OAAO,CAAC;AAEZ,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,qBAAK,YAAY,0BAA2B,KAAM;AAClD;AAAA,YAEJ;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,0BAA2BA,MAAM;AAExC,cAAI,OAAO,CAAC;AAEZ,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,qBAAM,MAAM,QAAS,IAAI,SAAU,MAAM,WAAY;AACrD;AAAA,YAEJ;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,YAAa,MAAO;AAE3B,iBAAO;AAAA,QAET;AAEA,iBAAS,UAAW,IAAK;AAEvB,iBAAO,SAAU,QAAQ,QAAS,EAAG,GAAG,WAAY;AAAA,QAEtD;AAIA,iBAAS,cAAeA,MAAM;AAE5B,cAAI,OAAO;AAAA,YACT,MAAMA,KAAI,aAAc,MAAO;AAAA,UACjC;AAEA,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,qBAAK,MAAM,QAAS,MAAM,aAAc,KAAM,CAAE;AAChD;AAAA,YAEJ;AAAA,UAEF;AAEA,kBAAQ,UAAWA,KAAI,aAAc,IAAK,CAAE,IAAI;AAAA,QAElD;AAEA,iBAAS,iBAAkB,OAAQ;AAEjC,cAAI;AAEJ,cAAI,YAAY,MAAM,OAAS,MAAM,YAAa,GAAI,IAAI,MAAM,KAAM,CAAE;AACxE,sBAAY,UAAU,YAAY;AAElC,kBAAS,WAAY;AAAA,YAEnB,KAAK;AACH,uBAAS;AACT;AAAA,YAEF;AACE,uBAAS;AAAA,UAEb;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,cAAe,MAAO;AAE7B,cAAI,SAAS,UAAW,KAAK,GAAI;AACjC,cAAI,YAAY,OAAO,QAAQ;AAC/B,cAAI,QAAQ,OAAO,QAAQ;AAE3B,cAAI;AAEJ,kBAAS,UAAU,MAAO;AAAA,YAExB,KAAK;AAAA,YACL,KAAK;AACH,yBAAW,IAAI,MAAM,kBAAkB;AACvC;AAAA,YAEF,KAAK;AACH,yBAAW,IAAI,MAAM,oBAAoB;AACzC;AAAA,YAEF;AACE,yBAAW,IAAI,MAAM,kBAAkB;AACvC;AAAA,UAEJ;AAEA,mBAAS,OAAO,KAAK;AAErB,mBAAS,WAAY,eAAgB;AAEnC,gBAAI,UAAU,OAAO,QAAQ,SAAU,cAAc,EAAG;AACxD,gBAAI,QAAQ;AAIZ,gBAAK,YAAY,QAAY;AAE3B,kBAAI,UAAU,OAAO,QAAQ,SAAU,QAAQ,MAAO;AACtD,sBAAQ,SAAU,QAAQ,SAAU;AAAA,YAEtC,OAAO;AAEL,sBAAQ,KAAM,6EAA8E;AAC5F,sBAAQ,SAAU,cAAc,EAAG;AAAA,YAErC;AAIA,gBAAK,UAAU,MAAO;AAEpB,kBAAI,SAAS,iBAAkB,KAAM;AAErC,kBAAK,WAAW,QAAY;AAE1B,oBAAI,UAAU,OAAO,KAAM,KAAM;AAEjC,oBAAIM,SAAQ,cAAc;AAE1B,oBAAKA,WAAU,UAAaA,OAAM,cAAc,UAAa,QAASA,OAAM,SAAU,MAAM,OAAQ;AAElG,sBAAIC,aAAYD,OAAM;AAEtB,0BAAQ,QAAQC,WAAU,QAAQ,MAAM,iBAAiB,MAAM;AAC/D,0BAAQ,QAAQA,WAAU,QAAQ,MAAM,iBAAiB,MAAM;AAE/D,0BAAQ,OAAO,IAAKA,WAAU,WAAW,GAAGA,WAAU,WAAW,CAAE;AACnE,0BAAQ,OAAO,IAAKA,WAAU,WAAW,GAAGA,WAAU,WAAW,CAAE;AAAA,gBAErE,OAAO;AAEL,0BAAQ,QAAQ,MAAM;AACtB,0BAAQ,QAAQ,MAAM;AAAA,gBAExB;AAEA,uBAAO;AAAA,cAET,OAAO;AAEL,wBAAQ,KAAM,yDAAyD,KAAM;AAE7E,uBAAO;AAAA,cAET;AAAA,YAEF,OAAO;AAEL,sBAAQ,KAAM,yDAA0D,cAAc,EAAG;AAEzF,qBAAO;AAAA,YAET;AAAA,UAEF;AAEA,cAAI,aAAa,UAAU;AAE3B,mBAAU,OAAO,YAAa;AAE5B,gBAAI,YAAY,WAAY,GAAI;AAEhC,oBAAS,KAAM;AAAA,cAEb,KAAK;AACH,oBAAK,UAAU,MAAQ,UAAS,MAAM,UAAW,UAAU,KAAM;AACjE,oBAAK,UAAU,QAAU,UAAS,MAAM,WAAY,UAAU,OAAQ;AACtE;AAAA,cACF,KAAK;AACH,oBAAK,UAAU,SAAS,SAAS,SAAW,UAAS,SAAS,UAAW,UAAU,KAAM;AACzF,oBAAK,UAAU,QAAU,UAAS,cAAc,WAAY,UAAU,OAAQ;AAC9E;AAAA,cACF,KAAK;AACH,oBAAK,UAAU,QAAU,UAAS,YAAY,WAAY,UAAU,OAAQ;AAC5E;AAAA,cACF,KAAK;AACH,oBAAK,UAAU,QAAU,UAAS,WAAW,WAAY,UAAU,OAAQ;AAC3E;AAAA,cACF,KAAK;AACH,oBAAK,UAAU,SAAS,SAAS,UAAY,UAAS,YAAY,UAAU;AAC5E;AAAA,cACF,KAAK;AACH,oBAAK,UAAU,SAAS,SAAS,SAAW,UAAS,SAAS,UAAW,UAAU,KAAM;AACzF,oBAAK,UAAU,QAAU,UAAS,cAAc,WAAY,UAAU,OAAQ;AAC9E;AAAA,YAEJ;AAAA,UAEF;AAIA,cAAI,cAAc,WAAY,aAAc;AAC5C,cAAI,eAAe,WAAY,cAAe;AAI9C,cAAK,iBAAiB,UAAa,aAAc;AAE/C,2BAAe;AAAA,cACb,OAAO;AAAA,YACT;AAAA,UAEF;AAIA,cAAK,gBAAgB,UAAa,cAAe;AAE/C,0BAAc;AAAA,cACZ,QAAQ;AAAA,cACR,MAAM;AAAA,gBACJ,OAAO,CAAE,GAAG,GAAG,GAAG,CAAE;AAAA,cACtB;AAAA,YAAE;AAAA,UAEN;AAEA,cAAK,eAAe,cAAe;AAIjC,gBAAK,YAAY,KAAK,SAAU;AAI9B,uBAAS,cAAc;AAAA,YAEzB,OAAO;AAEL,kBAAI,QAAQ,YAAY,KAAK;AAE7B,sBAAS,YAAY,QAAS;AAAA,gBAE5B,KAAK;AACH,2BAAS,UAAU,MAAO,CAAE,IAAI,aAAa;AAC7C;AAAA,gBACF,KAAK;AACH,2BAAS,UAAU,IAAM,MAAO,CAAE,IAAI,aAAa;AACnD;AAAA,gBACF,KAAK;AACH,2BAAS,UAAU,IAAM,MAAO,CAAE,IAAI,aAAa;AACnD;AAAA,gBACF,KAAK;AACH,2BAAS,UAAU,MAAO,CAAE,IAAI,aAAa;AAC7C;AAAA,gBACF;AACE,0BAAQ,KAAM,qEAAqE,YAAY,MAAO;AAAA,cAE1G;AAEA,kBAAK,SAAS,UAAU,EAAI,UAAS,cAAc;AAAA,YAErD;AAAA,UAEF;AAIA,cAAK,UAAU,UAAa,MAAM,cAAc,UAAa,MAAM,UAAU,iBAAiB,GAAI;AAEhG,qBAAS,OAAO,MAAM;AAAA,UAExB;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,YAAa,IAAK;AAEzB,iBAAO,SAAU,QAAQ,UAAW,EAAG,GAAG,aAAc;AAAA,QAE1D;AAIA,iBAAS,YAAaP,MAAM;AAE1B,cAAI,OAAO;AAAA,YACT,MAAMA,KAAI,aAAc,MAAO;AAAA,UACjC;AAEA,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,qBAAK,SAAS,kBAAmB,KAAM;AACvC;AAAA,YAEJ;AAAA,UAEF;AAEA,kBAAQ,QAASA,KAAI,aAAc,IAAK,CAAE,IAAI;AAAA,QAEhD;AAEA,iBAAS,kBAAmBA,MAAM;AAEhC,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,KAAO;AAEjD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,uBAAO,qBAAsB,KAAM;AAAA,YAEvC;AAAA,UAEF;AAEA,iBAAO,CAAC;AAAA,QAEV;AAEA,iBAAS,qBAAsBA,MAAM;AAEnC,cAAI,OAAO,CAAC;AAEZ,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,KAAO;AAEjD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AAAA,cACL,KAAK;AAEH,qBAAK,YAAY,MAAM;AACvB,qBAAK,aAAa,sBAAuB,KAAM;AAE/C;AAAA,YAEJ;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,sBAAuBA,MAAM;AAEpC,cAAI,OAAO,CAAC;AAEZ,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,KAAO;AAEjD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AACH,qBAAM,MAAM,QAAS,IAAI,WAAY,MAAM,WAAY;AACvD;AAAA,YAEJ;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,YAAa,MAAO;AAE3B,cAAI;AAEJ,kBAAS,KAAK,OAAO,WAAY;AAAA,YAE/B,KAAK;AACH,uBAAS,IAAI,MAAM;AAAA,gBACjB,KAAK,OAAO,WAAW;AAAA,gBACvB,KAAK,OAAO,WAAW;AAAA,gBACvB,KAAK,OAAO,WAAW;AAAA,gBACvB,KAAK,OAAO,WAAW;AAAA,cACzB;AACA;AAAA,YAEF,KAAK;AACH,kBAAI,OAAO,KAAK,OAAO,WAAW;AAClC,kBAAI,OAAO,KAAK,OAAO,WAAW;AAClC,kBAAI,cAAc,KAAK,OAAO,WAAW;AAEzC,qBAAS,SAAS,SAAgB,OAAO,cAAgB;AACzD,qBAAS,SAAS,SAAgB,OAAO,cAAgB;AAEzD,sBAAQ;AACR,sBAAQ;AAER,uBAAS,IAAI,MAAM;AAAA,gBACjB,CAAE;AAAA,gBAAM;AAAA,gBAAM;AAAA,gBAAM,CAAE;AAAA;AAAA,gBACtB,KAAK,OAAO,WAAW;AAAA,gBACvB,KAAK,OAAO,WAAW;AAAA,cACzB;AACA;AAAA,YAEF;AACE,uBAAS,IAAI,MAAM,kBAAkB;AACrC;AAAA,UAEJ;AAEA,iBAAO,OAAO,KAAK;AAEnB,iBAAO;AAAA,QAET;AAEA,iBAAS,UAAW,IAAK;AAEvB,cAAI,OAAO,QAAQ,QAAS,EAAG;AAE/B,cAAK,SAAS,QAAY;AAExB,mBAAO,SAAU,MAAM,WAAY;AAAA,UAErC;AAEA,kBAAQ,KAAM,sDAAuD,EAAG;AAExE,iBAAO;AAAA,QAET;AAIA,iBAAS,WAAYA,MAAM;AAEzB,cAAI,OAAO,CAAC;AAEZ,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,uBAAO,oBAAqB,KAAM;AAClC;AAAA,YAEJ;AAAA,UAEF;AAEA,kBAAQ,OAAQA,KAAI,aAAc,IAAK,CAAE,IAAI;AAAA,QAE/C;AAEA,iBAAS,oBAAqBA,MAAM;AAElC,cAAI,OAAO,CAAC;AAEZ,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAEH,qBAAK,YAAY,MAAM;AACvB,qBAAK,aAAa,qBAAsB,KAAM;AAAA,YAElD;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,qBAAsBA,MAAM;AAEnC,cAAI,OAAO,CAAC;AAEZ,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,oBAAI,QAAQ,YAAa,MAAM,WAAY;AAC3C,qBAAK,QAAQ,IAAI,MAAM,MAAM,EAAE,UAAW,KAAM;AAChD;AAAA,cAEF,KAAK;AACH,qBAAK,eAAe,WAAY,MAAM,WAAY;AAClD;AAAA,cAEF,KAAK;AACH,oBAAIQ,KAAI,WAAY,MAAM,WAAY;AACtC,qBAAK,WAAWA,KAAI,KAAK,KAAM,IAAIA,EAAE,IAAI;AACzC;AAAA,YAEJ;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,WAAY,MAAO;AAE1B,cAAI;AAEJ,kBAAS,KAAK,WAAY;AAAA,YAExB,KAAK;AACH,sBAAQ,IAAI,MAAM,iBAAiB;AACnC;AAAA,YAEF,KAAK;AACH,sBAAQ,IAAI,MAAM,WAAW;AAC7B;AAAA,YAEF,KAAK;AACH,sBAAQ,IAAI,MAAM,UAAU;AAC5B;AAAA,YAEF,KAAK;AACH,sBAAQ,IAAI,MAAM,aAAa;AAC/B;AAAA,UAEJ;AAEA,cAAK,KAAK,WAAW,MAAQ,OAAM,MAAM,KAAM,KAAK,WAAW,KAAM;AACrE,cAAK,KAAK,WAAW,SAAW,OAAM,WAAW,KAAK,WAAW;AAEjE,iBAAO;AAAA,QAET;AAEA,iBAAS,SAAU,IAAK;AAEtB,cAAI,OAAO,QAAQ,OAAQ,EAAG;AAE9B,cAAK,SAAS,QAAY;AAExB,mBAAO,SAAU,MAAM,UAAW;AAAA,UAEpC;AAEA,kBAAQ,KAAM,qDAAsD,EAAG;AAEvE,iBAAO;AAAA,QAET;AAIA,iBAAS,cAAeR,MAAM;AAE5B,cAAI,OAAO;AAAA,YACT,MAAMA,KAAI,aAAc,MAAO;AAAA,YAC/B,SAAS,CAAC;AAAA,YACV,UAAU,CAAC;AAAA,YACX,YAAY,CAAC;AAAA,UACf;AAEA,cAAI,OAAO,qBAAsBA,MAAK,MAAO,EAAG,CAAE;AAGlD,cAAK,SAAS,OAAY;AAE1B,mBAAU,IAAI,GAAG,IAAI,KAAK,WAAW,QAAQ,KAAO;AAElD,gBAAI,QAAQ,KAAK,WAAY,CAAE;AAE/B,gBAAK,MAAM,aAAa,EAAI;AAE5B,gBAAI,KAAK,MAAM,aAAc,IAAK;AAElC,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,qBAAK,QAAS,EAAG,IAAI,YAAa,KAAM;AACxC;AAAA,cAEF,KAAK;AAEH,qBAAK,WAAW,sBAAuB,KAAM;AAC7C;AAAA,cAEF,KAAK;AACH,wBAAQ,KAAM,qDAAqD,MAAM,QAAS;AAClF;AAAA,cAEF,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AACH,qBAAK,WAAW,KAAM,uBAAwB,KAAM,CAAE;AACtD;AAAA,cAEF;AACE,wBAAQ,IAAK,KAAM;AAAA,YAEvB;AAAA,UAEF;AAEA,kBAAQ,WAAYA,KAAI,aAAc,IAAK,CAAE,IAAI;AAAA,QAEnD;AAEA,iBAAS,YAAaA,MAAM;AAE1B,cAAI,OAAO;AAAA,YACT,OAAO,CAAC;AAAA,YACR,QAAQ;AAAA,UACV;AAEA,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,KAAO;AAEjD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,qBAAK,QAAQ,YAAa,MAAM,WAAY;AAC5C;AAAA,cAEF,KAAK;AACH,qBAAK,QAAQ,aAAc,MAAM,WAAY;AAC7C;AAAA,cAEF,KAAK;AACH,oBAAI,WAAW,qBAAsB,OAAO,UAAW,EAAG,CAAE;AAE5D,oBAAK,aAAa,QAAY;AAE5B,uBAAK,SAAS,SAAU,SAAS,aAAc,QAAS,CAAE;AAAA,gBAE5D;AACA;AAAA,YAEJ;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,sBAAuBA,MAAM;AAEpC,cAAI,OAAO,CAAC;AAEZ,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,KAAO;AAEjD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,iBAAM,MAAM,aAAc,UAAW,CAAE,IAAI,QAAS,MAAM,aAAc,QAAS,CAAE;AAAA,UAErF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,uBAAwBA,MAAM;AAErC,cAAI,YAAY;AAAA,YACd,MAAMA,KAAI;AAAA,YACV,UAAUA,KAAI,aAAc,UAAW;AAAA,YACvC,OAAO,SAAUA,KAAI,aAAc,OAAQ,CAAE;AAAA,YAC7C,QAAQ,CAAC;AAAA,YACT,QAAQ;AAAA,YACR,OAAO;AAAA,UACT;AAEA,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,oBAAI,KAAK,QAAS,MAAM,aAAc,QAAS,CAAE;AACjD,oBAAI,WAAW,MAAM,aAAc,UAAW;AAC9C,oBAAI,SAAS,SAAU,MAAM,aAAc,QAAS,CAAE;AACtD,oBAAI,MAAM,SAAU,MAAM,aAAc,KAAM,CAAE;AAChD,oBAAI,YAAc,MAAM,IAAI,WAAW,MAAM;AAC7C,0BAAU,OAAQ,SAAU,IAAI,EAAE,IAAQ,OAAe;AACzD,0BAAU,SAAS,KAAK,IAAK,UAAU,QAAQ,SAAS,CAAE;AAC1D,oBAAK,aAAa,WAAa,WAAU,QAAQ;AACjD;AAAA,cAEF,KAAK;AACH,0BAAU,SAAS,UAAW,MAAM,WAAY;AAChD;AAAA,cAEF,KAAK;AACH,0BAAU,IAAI,UAAW,MAAM,WAAY;AAC3C;AAAA,YAEJ;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,gBAAiB,YAAa;AAErC,cAAI,QAAQ,CAAC;AAEb,mBAAU,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAO;AAE7C,gBAAI,YAAY,WAAY,CAAE;AAE9B,gBAAK,MAAO,UAAU,IAAK,MAAM,OAAY,OAAO,UAAU,IAAK,IAAI,CAAC;AAExE,kBAAO,UAAU,IAAK,EAAE,KAAM,SAAU;AAAA,UAE1C;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,mBAAoB,YAAa;AAExC,cAAIS,SAAQ;AAEZ,mBAAU,IAAI,GAAG,IAAI,WAAW,QAAQ,IAAI,GAAG,KAAO;AAEpD,gBAAI,YAAY,WAAY,CAAE;AAE9B,gBAAK,UAAU,UAAU,MAAO;AAE9B,cAAAA;AAAA,YAEF;AAAA,UAEF;AAEA,cAAKA,SAAQ,KAAKA,SAAQ,WAAW,QAAS;AAE5C,uBAAW,cAAc;AAAA,UAE3B;AAAA,QAEF;AAEA,iBAAS,cAAe,MAAO;AAE7B,cAAI,QAAQ,CAAC;AAEb,cAAI,UAAU,KAAK;AACnB,cAAI,WAAW,KAAK;AACpB,cAAI,aAAa,KAAK;AAEtB,cAAK,WAAW,WAAW,EAAI,QAAO,CAAC;AAKvC,cAAI,oBAAoB,gBAAiB,UAAW;AAEpD,mBAAU,QAAQ,mBAAoB;AAEpC,gBAAI,gBAAgB,kBAAmB,IAAK;AAI5C,+BAAoB,aAAc;AAIlC,kBAAO,IAAK,IAAI,kBAAmB,eAAe,SAAS,QAAS;AAAA,UAEtE;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,kBAAmB,YAAY,SAAS,UAAW;AAE1D,cAAI,QAAQ,CAAC;AAEb,cAAIC,YAAW,EAAE,OAAO,CAAC,GAAG,QAAQ,EAAE;AACtC,cAAI,SAAS,EAAE,OAAO,CAAC,GAAG,QAAQ,EAAE;AACpC,cAAI,KAAK,EAAE,OAAO,CAAC,GAAG,QAAQ,EAAE;AAChC,cAAI,MAAM,EAAE,OAAO,CAAC,GAAG,QAAQ,EAAE;AACjC,cAAI,QAAQ,EAAE,OAAO,CAAC,GAAG,QAAQ,EAAE;AAEnC,cAAI,YAAY,EAAE,OAAO,CAAC,GAAG,QAAQ,EAAE;AACvC,cAAI,aAAa,EAAE,OAAO,CAAC,GAAG,QAAQ,EAAE;AAExC,cAAI,WAAW,IAAI,MAAM,eAAe;AAExC,cAAI,eAAe,CAAC;AAEpB,cAAI,QAAQ;AAEZ,mBAAUC,KAAI,GAAGA,KAAI,WAAW,QAAQA,MAAO;AAE7C,gBAAI,YAAY,WAAYA,EAAE;AAC9B,gBAAI,SAAS,UAAU;AAIvB,gBAAIF,SAAQ;AAEZ,oBAAS,UAAU,MAAO;AAAA,cAExB,KAAK;AAAA,cACL,KAAK;AACH,gBAAAA,SAAQ,UAAU,QAAQ;AAC1B;AAAA,cAEF,KAAK;AACH,gBAAAA,SAAQ,UAAU,QAAQ;AAC1B;AAAA,cAEF,KAAK;AAEH,yBAAUG,KAAI,GAAGA,KAAI,UAAU,OAAOA,MAAO;AAE3C,sBAAI,KAAK,UAAU,OAAQA,EAAE;AAE7B,0BAAS,IAAK;AAAA,oBAEZ,KAAK;AACH,sBAAAH,UAAS;AACT;AAAA,oBAEF,KAAK;AACH,sBAAAA,UAAS;AACT;AAAA,oBAEF;AACE,sBAAAA,WAAW,KAAK,KAAM;AACtB;AAAA,kBAEJ;AAAA,gBAEF;AAEA;AAAA,cAEF;AACE,wBAAQ,KAAM,+CAA+C,UAAU,IAAK;AAAA,YAEhF;AAEA,qBAAS,SAAU,OAAOA,QAAOE,EAAE;AACnC,qBAASF;AAIT,gBAAK,UAAU,UAAW;AAExB,2BAAa,KAAM,UAAU,QAAS;AAAA,YAExC;AAIA,qBAAU,QAAQ,QAAS;AAEzB,kBAAI,QAAQ,OAAQ,IAAK;AAEzB,sBAAS,MAAO;AAAA,gBAEd,KAAK;AACH,2BAAU,OAAO,UAAW;AAE1B,wBAAI,KAAK,SAAU,GAAI;AAEvB,4BAAS,KAAM;AAAA,sBAEb,KAAK;AACH,4BAAI,aAAaC,UAAS,MAAM;AAChC,0CAAmB,WAAW,QAAS,EAAG,GAAG,MAAM,QAAQA,UAAS,KAAM;AAC1E,wBAAAA,UAAS,SAAS,QAAS,EAAG,EAAE;AAEhC,4BAAK,QAAQ,eAAe,QAAQ,aAAc;AAEhD,4CAAmB,WAAW,QAAQ,aAAa,MAAM,QAAQ,UAAU,KAAM;AACjF,4CAAmB,WAAW,QAAQ,aAAa,MAAM,QAAQ,WAAW,KAAM;AAAA,wBAEpF;AAIA,4BAAK,UAAU,UAAU,SAAS,WAAW,gBAAgB,MAAO;AAElE,8BAAID,UAAUC,UAAS,MAAM,SAAS,cAAeA,UAAS;AAE9D,mCAAU,IAAI,GAAG,IAAID,QAAO,KAAO;AAIjC,+BAAG,MAAM,KAAM,GAAG,CAAE;AAAA,0BAEtB;AAAA,wBAEF;AACA;AAAA,sBAEF,KAAK;AACH,0CAAmB,WAAW,QAAS,EAAG,GAAG,MAAM,QAAQ,OAAO,KAAM;AACxE,+BAAO,SAAS,QAAS,EAAG,EAAE;AAC9B;AAAA,sBAEF,KAAK;AACH,0CAAmB,WAAW,QAAS,EAAG,GAAG,MAAM,QAAQ,MAAM,KAAM;AACvE,8BAAM,SAAS,QAAS,EAAG,EAAE;AAC7B;AAAA,sBAEF,KAAK;AACH,0CAAmB,WAAW,QAAS,EAAG,GAAG,MAAM,QAAQ,GAAG,KAAM;AACpE,2BAAG,SAAS,QAAS,EAAG,EAAE;AAC1B;AAAA,sBAEF,KAAK;AACH,0CAAmB,WAAW,QAAS,EAAG,GAAG,MAAM,QAAQ,IAAI,KAAM;AACrE,2BAAG,SAAS,QAAS,EAAG,EAAE;AAC1B;AAAA,sBAEF;AACE,gCAAQ,KAAM,6EAA6E,GAAI;AAAA,oBAEnG;AAAA,kBAEF;AACA;AAAA,gBAEF,KAAK;AACH,oCAAmB,WAAW,QAAS,MAAM,EAAG,GAAG,MAAM,QAAQ,OAAO,KAAM;AAC9E,yBAAO,SAAS,QAAS,MAAM,EAAG,EAAE;AACpC;AAAA,gBAEF,KAAK;AACH,oCAAmB,WAAW,QAAS,MAAM,EAAG,GAAG,MAAM,QAAQ,MAAM,KAAM;AAC7E,wBAAM,SAAS,QAAS,MAAM,EAAG,EAAE;AACnC;AAAA,gBAEF,KAAK;AACH,oCAAmB,WAAW,QAAS,MAAM,EAAG,GAAG,MAAM,QAAQ,GAAG,KAAM;AAC1E,qBAAG,SAAS,QAAS,MAAM,EAAG,EAAE;AAChC;AAAA,gBAEF,KAAK;AACH,oCAAmB,WAAW,QAAS,MAAM,EAAG,GAAG,MAAM,QAAQ,IAAI,KAAM;AAC3E,sBAAI,SAAS,QAAS,MAAM,EAAG,EAAE;AACjC;AAAA,cAEJ;AAAA,YAEF;AAAA,UAEF;AAIA,cAAKC,UAAS,MAAM,SAAS,EAAI,UAAS,aAAc,YAAY,IAAI,MAAM,uBAAwBA,UAAS,OAAOA,UAAS,MAAO,CAAE;AACxI,cAAK,OAAO,MAAM,SAAS,EAAI,UAAS,aAAc,UAAU,IAAI,MAAM,uBAAwB,OAAO,OAAO,OAAO,MAAO,CAAE;AAChI,cAAK,MAAM,MAAM,SAAS,EAAI,UAAS,aAAc,SAAS,IAAI,MAAM,uBAAwB,MAAM,OAAO,MAAM,MAAO,CAAE;AAC5H,cAAK,GAAG,MAAM,SAAS,EAAI,UAAS,aAAc,MAAM,IAAI,MAAM,uBAAwB,GAAG,OAAO,GAAG,MAAO,CAAE;AAChH,cAAK,IAAI,MAAM,SAAS,EAAI,UAAS,aAAc,OAAO,IAAI,MAAM,uBAAwB,IAAI,OAAO,IAAI,MAAO,CAAE;AAEpH,cAAK,UAAU,MAAM,SAAS,EAAI,UAAS,aAAc,aAAa,IAAI,MAAM,uBAAwB,UAAU,OAAO,UAAU,MAAO,CAAE;AAC5I,cAAK,WAAW,MAAM,SAAS,EAAI,UAAS,aAAc,cAAc,IAAI,MAAM,uBAAwB,WAAW,OAAO,WAAW,MAAO,CAAE;AAEhJ,gBAAM,OAAO;AACb,gBAAM,OAAO,WAAY,CAAE,EAAE;AAC7B,gBAAM,eAAe;AAErB,iBAAO;AAAA,QAET;AAEA,iBAAS,kBAAmB,WAAW,QAAQ,QAAQ,OAAQ;AAE7D,cAAI,UAAU,UAAU;AACxB,cAAI,SAAS,UAAU;AACvB,cAAI,SAAS,UAAU;AAEvB,mBAAS,WAAYG,IAAI;AAEvB,gBAAIC,SAAQ,QAASD,KAAI,MAAO,IAAI;AACpC,gBAAI,SAASC,SAAQ;AAErB,mBAAQA,SAAQ,QAAQA,UAAW;AAEjC,oBAAM,KAAM,YAAaA,MAAM,CAAE;AAAA,YAEnC;AAAA,UAEF;AAEA,cAAI,cAAc,OAAO;AACzB,cAAI,eAAe,OAAO;AAE1B,cAAK,UAAU,WAAW,QAAY;AAEpC,gBAAI,QAAQ;AAEZ,qBAAU,IAAI,GAAG,IAAI,OAAO,QAAQ,IAAI,GAAG,KAAO;AAEhD,kBAAIL,SAAQ,OAAQ,CAAE;AAEtB,kBAAKA,WAAU,GAAI;AAEjB,oBAAI,IAAI,QAAQ,SAAS;AACzB,oBAAI,IAAI,QAAQ,SAAS;AACzB,oBAAI,IAAI,QAAQ,SAAS;AACzB,oBAAIJ,KAAI,QAAQ,SAAS;AAEzB,2BAAY,CAAE;AAAG,2BAAY,CAAE;AAAG,2BAAYA,EAAE;AAChD,2BAAY,CAAE;AAAG,2BAAY,CAAE;AAAG,2BAAYA,EAAE;AAAA,cAElD,WAAYI,WAAU,GAAI;AAExB,oBAAI,IAAI,QAAQ,SAAS;AACzB,oBAAI,IAAI,QAAQ,SAAS;AACzB,oBAAI,IAAI,QAAQ,SAAS;AAEzB,2BAAY,CAAE;AAAG,2BAAY,CAAE;AAAG,2BAAY,CAAE;AAAA,cAElD,WAAYA,SAAQ,GAAI;AAEtB,yBAAU,IAAI,GAAG,KAAOA,SAAQ,GAAK,KAAK,IAAI,KAAO;AAEnD,sBAAI,IAAI,QAAQ,SAAS;AACzB,sBAAI,IAAI,QAAQ,SAAS;AACzB,sBAAI,IAAI,QAAQ,UAAW,IAAI;AAE/B,6BAAY,CAAE;AAAG,6BAAY,CAAE;AAAG,6BAAY,CAAE;AAAA,gBAElD;AAAA,cAEF;AAEA,uBAAS,SAASA;AAAA,YAEpB;AAAA,UAEF,OAAO;AAEL,qBAAU,IAAI,GAAG,IAAI,QAAQ,QAAQ,IAAI,GAAG,KAAK,QAAS;AAExD,yBAAY,CAAE;AAAA,YAEhB;AAAA,UAEF;AAAA,QAEF;AAEA,iBAAS,YAAa,IAAK;AAEzB,iBAAO,SAAU,QAAQ,WAAY,EAAG,GAAG,aAAc;AAAA,QAE3D;AAIA,iBAAS,qBAAsBT,MAAM;AAEnC,cAAI,OAAO;AAAA,YACT,MAAMA,KAAI,aAAc,MAAO,KAAK;AAAA,YACpC,QAAQ,CAAC;AAAA,YACT,OAAO,CAAC;AAAA,UACV;AAEA,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,KAAO;AAEjD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,+CAAgC,OAAO,IAAK;AAC5C;AAAA,YAEJ;AAAA,UAEF;AAEA,kBAAQ,iBAAkBA,KAAI,aAAc,IAAK,CAAE,IAAI;AAAA,QAEzD;AAEA,iBAAS,qBAAsB,MAAO;AAEpC,cAAK,KAAK,UAAU,OAAY,QAAO,KAAK;AAE5C,iBAAO;AAAA,QAET;AAEA,iBAAS,mBAAoB,IAAK;AAEhC,iBAAO,SAAU,QAAQ,iBAAkB,EAAG,GAAG,oBAAqB;AAAA,QAExE;AAEA,iBAAS,+BAAgCA,MAAK,MAAO;AAEnD,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,KAAO;AAEjD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,qBAAK,OAAQ,MAAM,aAAc,KAAM,CAAE,IAAI,qBAAsB,KAAM;AACzE;AAAA,cAEF,KAAK;AACH,qBAAK,MAAM,KAAM,oBAAqB,KAAM,CAAE;AAC9C;AAAA,YAEJ;AAAA,UAEF;AAAA,QAEF;AAEA,iBAAS,qBAAsBA,MAAM;AAEnC,cAAI;AAEJ,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,KAAO;AAEjD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AAAA,cACL,KAAK;AACH,uBAAO,8BAA+B,KAAM;AAC5C;AAAA,YAEJ;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,8BAA+BA,MAAK,MAAO;AAElD,cAAI,OAAO;AAAA,YACT,KAAKA,KAAI,aAAc,KAAM;AAAA,YAC7B,MAAMA,KAAI,aAAc,MAAO,KAAK;AAAA,YACpC,MAAM,IAAI,MAAM,QAAQ;AAAA,YACxB,QAAQ;AAAA,cACN,KAAK;AAAA,cACL,KAAK;AAAA,YACP;AAAA,YACA,MAAMA,KAAI;AAAA,YACV,QAAQ;AAAA,YACR,cAAc;AAAA,YACd,gBAAgB;AAAA,UAClB;AAEA,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,KAAO;AAEjD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,oBAAI,QAAQ,YAAa,MAAM,WAAY;AAC3C,qBAAK,KAAK,UAAW,KAAM;AAC3B;AAAA,cACF,KAAK;AACH,oBAAIe,OAAM,MAAM,qBAAsB,KAAM,EAAG,CAAE;AACjD,oBAAI,MAAM,MAAM,qBAAsB,KAAM,EAAG,CAAE;AAEjD,qBAAK,OAAO,MAAM,WAAYA,KAAI,WAAY;AAC9C,qBAAK,OAAO,MAAM,WAAY,IAAI,WAAY;AAC9C;AAAA,YAEJ;AAAA,UAEF;AAIA,cAAK,KAAK,OAAO,OAAO,KAAK,OAAO,KAAM;AAExC,iBAAK,SAAS;AAAA,UAEhB;AAIA,eAAK,kBAAmB,KAAK,OAAO,MAAM,KAAK,OAAO,OAAQ;AAE9D,iBAAO;AAAA,QAET;AAEA,iBAAS,oBAAqBf,MAAM;AAElC,cAAI,OAAO;AAAA,YACT,KAAKA,KAAI,aAAc,KAAM;AAAA,YAC7B,MAAMA,KAAI,aAAc,MAAO,KAAK;AAAA,YACpC,aAAa,CAAC;AAAA,YACd,YAAY,CAAC;AAAA,UACf;AAEA,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,KAAO;AAEjD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,qBAAK,YAAY,KAAM,0BAA2B,KAAM,CAAE;AAC1D;AAAA,cAEF,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AACH,qBAAK,WAAW,KAAM,yBAA0B,KAAM,CAAE;AACxD;AAAA,YAEJ;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,0BAA2BA,MAAM;AAExC,cAAI,OAAO;AAAA,YACT,OAAOA,KAAI,aAAc,OAAQ,EAAE,MAAO,GAAI,EAAE,IAAI;AAAA,YACpD,YAAY,CAAC;AAAA,YACb,OAAO,CAAC;AAAA,UACV;AAEA,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,KAAO;AAEjD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,qBAAK,MAAM,KAAM,oBAAqB,KAAM,CAAE;AAC9C;AAAA,cAEF,KAAK;AAAA,cACL,KAAK;AAAA,cACL,KAAK;AACH,qBAAK,WAAW,KAAM,yBAA0B,KAAM,CAAE;AACxD;AAAA,YAEJ;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,yBAA0BA,MAAM;AAEvC,cAAI,OAAO;AAAA,YACT,MAAMA,KAAI;AAAA,UACZ;AAEA,cAAI,QAAQ,YAAaA,KAAI,WAAY;AAEzC,kBAAS,KAAK,MAAO;AAAA,YAEnB,KAAK;AACH,mBAAK,MAAM,IAAI,MAAM,QAAQ;AAC7B,mBAAK,IAAI,UAAW,KAAM,EAAE,UAAU;AACtC;AAAA,YAEF,KAAK;AACH,mBAAK,MAAM,IAAI,MAAM,QAAQ;AAC7B,mBAAK,IAAI,UAAW,KAAM;AAC1B;AAAA,YAEF,KAAK;AACH,mBAAK,MAAM,IAAI,MAAM,QAAQ;AAC7B,mBAAK,IAAI,UAAW,KAAM;AAC1B,mBAAK,QAAQ,MAAM,UAAU,SAAU,MAAO,CAAE,CAAE;AAClD;AAAA,UAEJ;AAEA,iBAAO;AAAA,QAET;AAIA,iBAAS,kBAAmBA,MAAM;AAEhC,cAAI,OAAO;AAAA,YACT,MAAMA,KAAI,aAAc,MAAO,KAAK;AAAA,YACpC,aAAa,CAAC;AAAA,UAChB;AAEA,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,KAAO;AAEjD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,qBAAK,YAAa,MAAM,aAAc,MAAO,CAAE,IAAI,CAAC;AACpD,sCAAuB,OAAO,KAAK,YAAa,MAAM,aAAc,MAAO,CAAE,CAAE;AAC/E;AAAA,YAEJ;AAAA,UAEF;AAEA,kBAAQ,cAAeA,KAAI,aAAc,IAAK,CAAE,IAAI;AAAA,QAEtD;AAEA,iBAAS,sBAAuBA,MAAK,MAAO;AAE1C,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,KAAO;AAEjD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,4CAA6B,OAAO,IAAK;AACzC;AAAA,YAEJ;AAAA,UAEF;AAAA,QAEF;AAEA,iBAAS,4BAA6BA,MAAK,MAAO;AAEhD,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,KAAO;AAEjD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,qBAAK,UAAU,YAAa,MAAM,WAAY;AAC9C;AAAA,cAEF,KAAK;AACH,qBAAK,OAAO,YAAa,MAAM,WAAY,EAAG,CAAE;AAChD;AAAA,YAEJ;AAAA,UAEF;AAAA,QAEF;AAIA,iBAAS,qBAAsBA,MAAM;AAEnC,cAAI,OAAO;AAAA,YACT,eAAe,CAAC;AAAA,UAClB;AAEA,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,KAAO;AAEjD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,qBAAK,cAAc,KAAM,6BAA8B,KAAM,CAAE;AAC/D;AAAA,YAEJ;AAAA,UAEF;AAEA,kBAAQ,iBAAkB,QAASA,KAAI,aAAc,KAAM,CAAE,CAAE,IAAI;AAAA,QAErE;AAEA,iBAAS,6BAA8BA,MAAM;AAE3C,cAAI,OAAO;AAAA,YACT,QAAQA,KAAI,aAAc,QAAS,EAAE,MAAO,GAAI,EAAE,IAAI;AAAA,UACxD;AAEA,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,KAAO;AAEjD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,oBAAI,QAAQ,MAAM,qBAAsB,OAAQ,EAAG,CAAE;AACrD,qBAAK,OAAO,MAAM;AAClB,oBAAI,gBAAgB,KAAK,KAAK,MAAO,OAAQ,EAAE,IAAI,EAAE,MAAO,MAAO,EAAG,CAAE;AACxE,qBAAK,aAAa,cAAc,OAAQ,GAAG,cAAc,SAAS,CAAE;AACpE;AAAA,YAEJ;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,qBAAsB,MAAO;AAEpC,cAAK,KAAK,UAAU,OAAY,QAAO,KAAK;AAE5C,iBAAO;AAAA,QAET;AAEA,iBAAS,mBAAoB,IAAK;AAEhC,iBAAO,SAAU,QAAQ,iBAAkB,EAAG,GAAG,oBAAqB;AAAA,QAExE;AAEA,iBAAS,kBAAkB;AAEzB,cAAI,oBAAoB,OAAO,KAAM,QAAQ,gBAAiB,EAAG,CAAE;AACnE,cAAI,oBAAoB,OAAO,KAAM,QAAQ,gBAAiB,EAAG,CAAE;AACnE,cAAI,gBAAgB,OAAO,KAAM,QAAQ,YAAa,EAAG,CAAE;AAE3D,cAAK,sBAAsB,UAAa,sBAAsB,OAAY;AAE1E,cAAI,kBAAkB,mBAAoB,iBAAkB;AAC5D,cAAI,kBAAkB,mBAAoB,iBAAkB;AAC5D,cAAI,cAAc,eAAgB,aAAc;AAEhD,cAAI,gBAAgB,gBAAgB;AACpC,cAAI,WAAW,CAAC;AAEhB,mBAAU,IAAI,GAAG,IAAI,cAAc,QAAQ,IAAI,GAAG,KAAO;AAEvD,gBAAI,OAAO,cAAe,CAAE;AAI5B,gBAAI,gBAAgB,QAAQ,cAAe,WAAW,KAAK,SAAS,IAAK;AAEzE,gBAAK,eAAgB;AAInB,kBAAI,sBAAsB,cAAc;AAIxC,sBAAS,KAAK,YAAY,mBAAoB;AAAA,YAEhD;AAAA,UAEF;AAEA,mBAAS,QAAS,YAAY,eAAgB;AAE5C,gBAAI,oBAAoB,cAAc,aAAc,MAAO;AAC3D,gBAAI,QAAQ,gBAAgB,OAAQ,UAAW;AAE/C,wBAAY,SAAU,SAAW,QAAS;AAExC,kBAAK,OAAO,SAAS,mBAAoB;AAEvC,yBAAU,UAAW,IAAI;AAAA,kBACvB;AAAA,kBACA,YAAY,mBAAoB,aAAc;AAAA,kBAC9C;AAAA,kBACA,UAAU,MAAM;AAAA,gBAClB;AAAA,cAEF;AAAA,YAEF,CAAE;AAAA,UAEJ;AAEA,cAAI,KAAK,IAAI,MAAM,QAAQ;AAE3B,uBAAa;AAAA,YAEX,QAAQ,mBAAmB,gBAAgB;AAAA,YAE3C,eAAe,SAAW,YAAa;AAErC,kBAAI,YAAY,SAAU,UAAW;AAErC,kBAAK,WAAY;AAEf,uBAAO,UAAU;AAAA,cAEnB,OAAO;AAEL,wBAAQ,KAAM,gCAAgC,aAAa,iBAAmB;AAAA,cAEhF;AAAA,YAEF;AAAA,YAEA,eAAe,SAAW,YAAY,OAAQ;AAE5C,kBAAI,YAAY,SAAU,UAAW;AAErC,kBAAK,WAAY;AAEf,oBAAI,QAAQ,UAAU;AAEtB,oBAAK,QAAQ,MAAM,OAAO,OAAO,QAAQ,MAAM,OAAO,KAAM;AAE1D,0BAAQ,KAAM,gCAAgC,aAAa,YAAY,QAAQ,8BAA8B,MAAM,OAAO,MAAM,YAAY,MAAM,OAAO,MAAM,IAAK;AAAA,gBAEtK,WAAY,MAAM,QAAS;AAEzB,0BAAQ,KAAM,gCAAgC,aAAa,aAAc;AAAA,gBAE3E,OAAO;AAEL,sBAAI,SAAS,UAAU;AACvB,sBAAIgB,QAAO,MAAM;AACjB,sBAAI,aAAa,UAAU;AAE3B,yBAAO,SAAS;AAIhB,2BAAUH,KAAI,GAAGA,KAAI,WAAW,QAAQA,MAAO;AAE7C,wBAAI,YAAY,WAAYA,EAAE;AAI9B,wBAAK,UAAU,OAAO,UAAU,IAAI,QAAS,UAAW,MAAM,IAAM;AAElE,8BAAS,MAAM,MAAO;AAAA,wBAEpB,KAAK;AACH,iCAAO,SAAU,GAAG,iBAAkBG,OAAM,MAAM,UAAU,SAAU,KAAM,CAAE,CAAE;AAChF;AAAA,wBAEF,KAAK;AACH,iCAAO,SAAU,GAAG,gBAAiBA,MAAK,IAAI,OAAOA,MAAK,IAAI,OAAOA,MAAK,IAAI,KAAM,CAAE;AACtF;AAAA,wBAEF;AACE,kCAAQ,KAAM,8CAA8C,MAAM,IAAK;AACvE;AAAA,sBAEJ;AAAA,oBAEF,OAAO;AAEL,8BAAS,UAAU,MAAO;AAAA,wBAExB,KAAK;AACH,iCAAO,SAAU,UAAU,GAAI;AAC/B;AAAA,wBAEF,KAAK;AACH,iCAAO,SAAU,GAAG,gBAAiB,UAAU,IAAI,GAAG,UAAU,IAAI,GAAG,UAAU,IAAI,CAAE,CAAE;AACzF;AAAA,wBAEF,KAAK;AACH,iCAAO,MAAO,UAAU,GAAI;AAC5B;AAAA,wBAEF,KAAK;AACH,iCAAO,SAAU,GAAG,iBAAkB,UAAU,KAAK,UAAU,KAAM,CAAE;AACvE;AAAA,sBAEJ;AAAA,oBAEF;AAAA,kBAEF;AAEA,yBAAO,OAAO,KAAM,MAAO;AAC3B,yBAAO,OAAO,UAAW,OAAO,UAAU,OAAO,YAAY,OAAO,KAAM;AAE1E,2BAAU,UAAW,EAAE,WAAW;AAAA,gBAEpC;AAAA,cAEF,OAAO;AAEL,wBAAQ,IAAK,0BAA0B,aAAa,kBAAmB;AAAA,cAEzE;AAAA,YAEF;AAAA,UAEF;AAAA,QAEF;AAEA,iBAAS,mBAAoB,MAAO;AAElC,cAAI,aAAa,CAAC;AAElB,cAAIhB,OAAM,QAAQ,cAAe,UAAU,KAAK,KAAK,IAAK;AAE1D,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,KAAO;AAEjD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,oBAAI,QAAQ,YAAa,MAAM,WAAY;AAC3C,oBAAIiB,UAAS,IAAI,MAAM,QAAQ,EAAE,UAAW,KAAM,EAAE,UAAU;AAC9D,2BAAW,KAAM;AAAA,kBACf,KAAK,MAAM,aAAc,KAAM;AAAA,kBAC/B,MAAM,MAAM;AAAA,kBACZ,KAAKA;AAAA,gBACP,CAAE;AACF;AAAA,cAEF,KAAK;AAAA,cACL,KAAK;AACH,oBAAI,QAAQ,YAAa,MAAM,WAAY;AAC3C,oBAAIC,UAAS,IAAI,MAAM,QAAQ,EAAE,UAAW,KAAM;AAClD,2BAAW,KAAM;AAAA,kBACf,KAAK,MAAM,aAAc,KAAM;AAAA,kBAC/B,MAAM,MAAM;AAAA,kBACZ,KAAKA;AAAA,gBACP,CAAE;AACF;AAAA,cAEF,KAAK;AACH,oBAAI,QAAQ,YAAa,MAAM,WAAY;AAC3C,oBAAIA,UAAS,IAAI,MAAM,QAAQ,EAAE,UAAW,KAAM;AAClD,oBAAIC,SAAQ,MAAM,UAAU,SAAU,MAAO,CAAE,CAAE;AACjD,2BAAW,KAAM;AAAA,kBACf,KAAK,MAAM,aAAc,KAAM;AAAA,kBAC/B,MAAM,MAAM;AAAA,kBACZ,KAAKD;AAAA,kBACL,OAAOC;AAAA,gBACT,CAAE;AACF;AAAA,YAEJ;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAIA,iBAAS,aAAcnB,MAAM;AAE3B,cAAI,WAAWA,KAAI,qBAAsB,MAAO;AAIhD,mBAAU,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAO;AAE3C,gBAAI,UAAU,SAAU,CAAE;AAE1B,gBAAK,QAAQ,aAAc,IAAK,MAAM,OAAQ;AAE5C,sBAAQ,aAAc,MAAM,WAAW,CAAE;AAAA,YAE3C;AAAA,UAEF;AAAA,QAEF;AAEA,YAAI,SAAS,IAAI,MAAM,QAAQ;AAC/B,YAAI,SAAS,IAAI,MAAM,QAAQ;AAE/B,iBAAS,UAAWA,MAAM;AAExB,cAAI,OAAO;AAAA,YACT,MAAMA,KAAI,aAAc,MAAO,KAAK;AAAA,YACpC,MAAMA,KAAI,aAAc,MAAO;AAAA,YAC/B,IAAIA,KAAI,aAAc,IAAK;AAAA,YAC3B,KAAKA,KAAI,aAAc,KAAM;AAAA,YAC7B,QAAQ,IAAI,MAAM,QAAQ;AAAA,YAC1B,OAAO,CAAC;AAAA,YACR,iBAAiB,CAAC;AAAA,YAClB,qBAAqB,CAAC;AAAA,YACtB,gBAAgB,CAAC;AAAA,YACjB,oBAAoB,CAAC;AAAA,YACrB,eAAe,CAAC;AAAA,YAChB,YAAY,CAAC;AAAA,UACf;AAEA,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,KAAO;AAEjD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,gBAAK,MAAM,aAAa,EAAI;AAE5B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,qBAAK,MAAM,KAAM,MAAM,aAAc,IAAK,CAAE;AAC5C,0BAAW,KAAM;AACjB;AAAA,cAEF,KAAK;AACH,qBAAK,gBAAgB,KAAM,QAAS,MAAM,aAAc,KAAM,CAAE,CAAE;AAClE;AAAA,cAEF,KAAK;AACH,qBAAK,oBAAoB,KAAM,kBAAmB,KAAM,CAAE;AAC1D;AAAA,cAEF,KAAK;AACH,qBAAK,eAAe,KAAM,QAAS,MAAM,aAAc,KAAM,CAAE,CAAE;AACjE;AAAA,cAEF,KAAK;AACH,qBAAK,mBAAmB,KAAM,kBAAmB,KAAM,CAAE;AACzD;AAAA,cAEF,KAAK;AACH,qBAAK,cAAc,KAAM,QAAS,MAAM,aAAc,KAAM,CAAE,CAAE;AAChE;AAAA,cAEF,KAAK;AACH,oBAAI,QAAQ,YAAa,MAAM,WAAY;AAC3C,qBAAK,OAAO,SAAU,OAAO,UAAW,KAAM,EAAE,UAAU,CAAE;AAC5D,qBAAK,WAAY,MAAM,aAAc,KAAM,CAAE,IAAI,MAAM;AACvD;AAAA,cAEF,KAAK;AACH,oBAAI,QAAQ,YAAa,MAAM,WAAY;AAC3C,uBAAO,UAAW,KAAM;AACxB,qBAAK,OAAO,SAAU,OAAO,gBAAiB,OAAO,GAAG,OAAO,GAAG,OAAO,CAAE,CAAE;AAC7E,qBAAK,WAAY,MAAM,aAAc,KAAM,CAAE,IAAI,MAAM;AACvD;AAAA,cAEF,KAAK;AACH,oBAAI,QAAQ,YAAa,MAAM,WAAY;AAC3C,oBAAImB,SAAQ,MAAM,UAAU,SAAU,MAAO,CAAE,CAAE;AACjD,qBAAK,OAAO,SAAU,OAAO,iBAAkB,OAAO,UAAW,KAAM,GAAGA,MAAM,CAAE;AAClF,qBAAK,WAAY,MAAM,aAAc,KAAM,CAAE,IAAI,MAAM;AACvD;AAAA,cAEF,KAAK;AACH,oBAAI,QAAQ,YAAa,MAAM,WAAY;AAC3C,qBAAK,OAAO,MAAO,OAAO,UAAW,KAAM,CAAE;AAC7C,qBAAK,WAAY,MAAM,aAAc,KAAM,CAAE,IAAI,MAAM;AACvD;AAAA,cAEF,KAAK;AACH;AAAA,cAEF;AACE,wBAAQ,IAAK,KAAM;AAAA,YAEvB;AAAA,UAEF;AAEA,cAAK,QAAS,KAAK,EAAG,GAAI;AAExB,oBAAQ,KAAM,0GAA0G,KAAK,EAAG;AAAA,UAElI,OAAO;AAEL,oBAAQ,MAAO,KAAK,EAAG,IAAI;AAAA,UAE7B;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,kBAAmBnB,MAAM;AAEhC,cAAI,OAAO;AAAA,YACT,IAAI,QAASA,KAAI,aAAc,KAAM,CAAE;AAAA,YACvC,WAAW,CAAC;AAAA,YACZ,WAAW,CAAC;AAAA,UACd;AAEA,mBAAU,IAAI,GAAG,IAAIA,KAAI,WAAW,QAAQ,KAAO;AAEjD,gBAAI,QAAQA,KAAI,WAAY,CAAE;AAE9B,oBAAS,MAAM,UAAW;AAAA,cAExB,KAAK;AACH,oBAAI,YAAY,MAAM,qBAAsB,mBAAoB;AAEhE,yBAAU,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAO;AAE5C,sBAAI,WAAW,UAAW,CAAE;AAC5B,sBAAI,SAAS,SAAS,aAAc,QAAS;AAC7C,sBAAI,SAAS,SAAS,aAAc,QAAS;AAE7C,uBAAK,UAAW,MAAO,IAAI,QAAS,MAAO;AAAA,gBAE7C;AAEA;AAAA,cAEF,KAAK;AACH,qBAAK,UAAU,KAAM,QAAS,MAAM,WAAY,CAAE;AAClD;AAAA,cAEF;AACE;AAAA,YAEJ;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,cAAe,WAAW,QAAS;AAE1C,cAAI,WAAW,CAAC;AAChB,cAAI,iBAAiB,CAAC;AAEtB,cAAI,GAAG,GAAG;AAKV,eAAM,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAO;AAExC,gBAAI,WAAW,UAAW,CAAE;AAE5B,gBAAI;AAEJ,gBAAK,QAAS,QAAS,GAAI;AAEzB,qBAAO,QAAS,QAAS;AACzB,iCAAoB,MAAM,QAAQ,QAAS;AAAA,YAE7C,WAAY,eAAgB,QAAS,GAAI;AAIvC,kBAAI,cAAc,QAAQ,aAAc,QAAS;AACjD,kBAAI,WAAW,YAAY;AAE3B,uBAAU,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAO;AAE3C,oBAAI,QAAQ,SAAU,CAAE;AAExB,oBAAK,MAAM,SAAS,SAAU;AAE5B,sBAAI,OAAO,QAAS,MAAM,EAAG;AAC7B,qCAAoB,MAAM,QAAQ,QAAS;AAAA,gBAE7C;AAAA,cAEF;AAAA,YAEF,OAAO;AAEL,sBAAQ,MAAO,sEAAsE,QAAS;AAAA,YAEhG;AAAA,UAEF;AAIA,eAAM,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAO;AAErC,iBAAM,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAO;AAEvC,qBAAO,SAAU,CAAE;AAEnB,kBAAK,KAAK,KAAK,SAAS,OAAQ,CAAE,EAAE,MAAO;AAEzC,+BAAgB,CAAE,IAAI;AACtB,qBAAK,YAAY;AACjB;AAAA,cAEF;AAAA,YAEF;AAAA,UAEF;AAIA,eAAM,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAO;AAEvC,mBAAO,SAAU,CAAE;AAEnB,gBAAK,KAAK,cAAc,OAAQ;AAE9B,6BAAe,KAAM,IAAK;AAC1B,mBAAK,YAAY;AAAA,YAEnB;AAAA,UAEF;AAIA,cAAI,QAAQ,CAAC;AACb,cAAI,eAAe,CAAC;AAEpB,eAAM,IAAI,GAAG,IAAI,eAAe,QAAQ,KAAO;AAE7C,mBAAO,eAAgB,CAAE;AAEzB,kBAAM,KAAM,KAAK,IAAK;AACtB,yBAAa,KAAM,KAAK,WAAY;AAAA,UAEtC;AAEA,iBAAO,IAAI,MAAM,SAAU,OAAO,YAAa;AAAA,QAEjD;AAEA,iBAAS,mBAAoB,MAAM,QAAQ,UAAW;AAIpD,eAAK,SAAU,SAAW,QAAS;AAEjC,gBAAK,OAAO,WAAW,MAAO;AAE5B,kBAAI;AAIJ,uBAAU,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAO;AAEzC,oBAAI,QAAQ,OAAQ,CAAE;AAEtB,oBAAK,MAAM,SAAS,OAAO,MAAO;AAEhC,gCAAc,MAAM;AACpB;AAAA,gBAEF;AAAA,cAEF;AAEA,kBAAK,gBAAgB,QAAY;AAQ/B,8BAAc,IAAI,MAAM,QAAQ;AAAA,cAElC;AAEA,uBAAS,KAAM,EAAE,MAAM,QAAQ,aAA0B,WAAW,MAAM,CAAE;AAAA,YAE9E;AAAA,UAEF,CAAE;AAAA,QAEJ;AAEA,iBAAS,UAAW,MAAO;AAEzB,cAAI,UAAU,CAAC;AAEf,cAAIiB,UAAS,KAAK;AAClB,cAAI,QAAQ,KAAK;AACjB,cAAI,OAAO,KAAK;AAChB,cAAI,kBAAkB,KAAK;AAC3B,cAAI,sBAAsB,KAAK;AAC/B,cAAI,iBAAiB,KAAK;AAC1B,cAAI,qBAAqB,KAAK;AAC9B,cAAI,gBAAgB,KAAK;AAIzB,mBAAU,IAAI,GAAG,IAAI,MAAM,QAAQ,IAAI,GAAG,KAAO;AAE/C,oBAAQ,KAAM,QAAS,MAAO,CAAE,CAAE,CAAE;AAAA,UAEtC;AAIA,mBAAU,IAAI,GAAG,IAAI,gBAAgB,QAAQ,IAAI,GAAG,KAAO;AAEzD,gBAAI,iBAAiB,UAAW,gBAAiB,CAAE,CAAE;AAErD,gBAAK,mBAAmB,MAAO;AAE7B,sBAAQ,KAAM,eAAe,MAAM,CAAE;AAAA,YAEvC;AAAA,UAEF;AAIA,mBAAU,IAAI,GAAG,IAAI,oBAAoB,QAAQ,IAAI,GAAG,KAAO;AAE7D,gBAAI,WAAW,oBAAqB,CAAE;AACtC,gBAAI,aAAa,cAAe,SAAS,EAAG;AAC5C,gBAAI,aAAa,YAAa,WAAW,EAAG;AAC5C,gBAAI,aAAa,aAAc,YAAY,SAAS,SAAU;AAE9D,gBAAI,YAAY,SAAS;AACzB,gBAAI,SAAS,WAAW,KAAK;AAE7B,gBAAI,WAAW,cAAe,WAAW,MAAO;AAEhD,qBAAU,IAAI,GAAG,KAAK,WAAW,QAAQ,IAAI,IAAI,KAAO;AAEtD,kBAAI,SAAS,WAAY,CAAE;AAE3B,kBAAK,OAAO,eAAgB;AAE1B,uBAAO,KAAM,UAAU,WAAW,KAAK,UAAW;AAClD,uBAAO,qBAAqB;AAAA,cAE9B;AAEA,sBAAQ,KAAM,MAAO;AAAA,YAEvB;AAAA,UAEF;AAIA,mBAAU,IAAI,GAAG,IAAI,eAAe,QAAQ,IAAI,GAAG,KAAO;AAExD,gBAAI,gBAAgB,SAAU,eAAgB,CAAE,CAAE;AAElD,gBAAK,kBAAkB,MAAO;AAE5B,sBAAQ,KAAM,cAAc,MAAM,CAAE;AAAA,YAEtC;AAAA,UAEF;AAIA,mBAAU,IAAI,GAAG,IAAI,mBAAmB,QAAQ,IAAI,GAAG,KAAO;AAE5D,gBAAI,WAAW,mBAAoB,CAAE;AAKrC,gBAAI,aAAa,YAAa,SAAS,EAAG;AAC1C,gBAAI,aAAa,aAAc,YAAY,SAAS,SAAU;AAE9D,qBAAU,IAAI,GAAG,KAAK,WAAW,QAAQ,IAAI,IAAI,KAAO;AAEtD,sBAAQ,KAAM,WAAY,CAAE,CAAE;AAAA,YAEhC;AAAA,UAEF;AAIA,mBAAU,IAAI,GAAG,IAAI,cAAc,QAAQ,IAAI,GAAG,KAAO;AAEvD,oBAAQ,KAAM,QAAS,cAAe,CAAE,CAAE,EAAE,MAAM,CAAE;AAAA,UAEtD;AAEA,cAAI;AAEJ,cAAK,MAAM,WAAW,KAAK,QAAQ,WAAW,GAAI;AAEhD,qBAAS,QAAS,CAAE;AAAA,UAEtB,OAAO;AAEL,qBAAW,SAAS,UAAY,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,MAAM;AAEnE,qBAAU,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAO;AAE1C,qBAAO,IAAK,QAAS,CAAE,CAAE;AAAA,YAE3B;AAAA,UAEF;AAEA,cAAK,OAAO,SAAS,IAAK;AAExB,mBAAO,OAAS,SAAS,UAAY,KAAK,MAAM,KAAK;AAAA,UAEvD;AAEA,iBAAO,OAAO,KAAMA,OAAO;AAC3B,iBAAO,OAAO,UAAW,OAAO,UAAU,OAAO,YAAY,OAAO,KAAM;AAE1E,iBAAO;AAAA,QAET;AAEA,YAAI,mBAAmB,IAAI,MAAM,kBAAmB,EAAE,OAAO,SAAS,CAAE;AAExE,iBAAS,uBAAwB,MAAM,mBAAoB;AAEzD,cAAI,YAAY,CAAC;AAEjB,mBAAU,IAAI,GAAG,IAAI,KAAK,QAAQ,IAAI,GAAG,KAAO;AAE9C,gBAAI,KAAK,kBAAmB,KAAM,CAAE,CAAE;AAEtC,gBAAK,OAAO,QAAY;AAEtB,sBAAQ,KAAM,iFAAiF,KAAM,CAAE,CAAE;AACzG,wBAAU,KAAM,gBAAiB;AAAA,YAEnC,OAAO;AAEL,wBAAU,KAAM,YAAa,EAAG,CAAE;AAAA,YAEpC;AAAA,UAEF;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,aAAc,YAAY,mBAAoB;AAErD,cAAI,UAAU,CAAC;AAEf,mBAAU,QAAQ,YAAa;AAE7B,gBAAI,WAAW,WAAY,IAAK;AAEhC,gBAAI,YAAY,uBAAwB,SAAS,cAAc,iBAAkB;AAIjF,gBAAK,UAAU,WAAW,GAAI;AAE5B,kBAAK,SAAS,WAAW,SAAS,cAAe;AAE/C,0BAAU,KAAM,IAAI,MAAM,kBAAkB,CAAE;AAAA,cAEhD,OAAO;AAEL,0BAAU,KAAM,IAAI,MAAM,kBAAkB,CAAE;AAAA,cAEhD;AAAA,YAEF;AAIA,gBAAI,WAAa,SAAS,KAAK,WAAW,cAAc;AAExD,gBAAK,UAAW;AAEd,uBAAU,IAAI,GAAG,IAAI,UAAU,QAAQ,IAAI,GAAG,KAAO;AAEnD,0BAAW,CAAE,EAAE,WAAW;AAAA,cAE5B;AAAA,YAEF;AAIA,gBAAI,WAAa,UAAU,WAAW,IAAM,UAAW,CAAE,IAAI;AAI7D,gBAAI;AAEJ,oBAAS,MAAO;AAAA,cAEd,KAAK;AACH,yBAAS,IAAI,MAAM,aAAc,SAAS,MAAM,QAAS;AACzD;AAAA,cAEF,KAAK;AACH,yBAAS,IAAI,MAAM,KAAM,SAAS,MAAM,QAAS;AACjD;AAAA,cAEF,KAAK;AAAA,cACL,KAAK;AACH,oBAAK,UAAW;AAEd,2BAAS,IAAI,MAAM,YAAa,SAAS,MAAM,QAAS;AAAA,gBAE1D,OAAO;AAEL,2BAAS,IAAI,MAAM,KAAM,SAAS,MAAM,QAAS;AAAA,gBAEnD;AACA;AAAA,YAEJ;AAEA,oBAAQ,KAAM,MAAO;AAAA,UAEvB;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,QAAS,IAAK;AAErB,iBAAO,QAAQ,MAAO,EAAG,MAAM;AAAA,QAEjC;AAEA,iBAAS,QAAS,IAAK;AAErB,iBAAO,SAAU,QAAQ,MAAO,EAAG,GAAG,SAAU;AAAA,QAElD;AAIA,iBAAS,iBAAkBjB,MAAM;AAE/B,cAAI,OAAO;AAAA,YACT,MAAMA,KAAI,aAAc,MAAO;AAAA,YAC/B,UAAU,CAAC;AAAA,UACb;AAEA,uBAAcA,IAAI;AAElB,cAAI,WAAW,qBAAsBA,MAAK,MAAO;AAEjD,mBAAU,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAO;AAE3C,iBAAK,SAAS,KAAM,UAAW,SAAU,CAAE,CAAE,CAAE;AAAA,UAEjD;AAEA,kBAAQ,aAAcA,KAAI,aAAc,IAAK,CAAE,IAAI;AAAA,QAErD;AAEA,iBAAS,iBAAkB,MAAO;AAEhC,cAAI,QAAQ,IAAI,MAAM,MAAM;AAC5B,gBAAM,OAAO,KAAK;AAElB,cAAI,WAAW,KAAK;AAEpB,mBAAU,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAO;AAE3C,gBAAI,QAAQ,SAAU,CAAE;AAExB,kBAAM,IAAK,QAAS,MAAM,EAAG,CAAE;AAAA,UAEjC;AAEA,iBAAO;AAAA,QAET;AAEA,iBAAS,eAAgB,IAAK;AAE5B,iBAAO,QAAQ,aAAc,EAAG,MAAM;AAAA,QAExC;AAEA,iBAAS,eAAgB,IAAK;AAE5B,iBAAO,SAAU,QAAQ,aAAc,EAAG,GAAG,gBAAiB;AAAA,QAEhE;AAIA,iBAAS,WAAYA,MAAM;AAEzB,cAAI,WAAW,qBAAsBA,MAAK,uBAAwB,EAAG,CAAE;AACvE,iBAAO,eAAgB,QAAS,SAAS,aAAc,KAAM,CAAE,CAAE;AAAA,QAEnE;AAEA,iBAAS,kBAAkB;AAEzB,cAAI,QAAQ,QAAQ;AAEpB,cAAK,QAAS,KAAM,MAAM,MAAO;AAE/B,gBAAK,QAAS,QAAQ,UAAW,MAAM,OAAQ;AAI7C,kBAAI,SAAS,CAAC;AAEd,uBAAU,MAAM,QAAQ,YAAa;AAEnC,oBAAI,kBAAkB,aAAc,EAAG;AAEvC,yBAAU,IAAI,GAAG,IAAI,gBAAgB,QAAQ,IAAI,GAAG,KAAO;AAEzD,yBAAO,KAAM,gBAAiB,CAAE,CAAE;AAAA,gBAEpC;AAAA,cAEF;AAEA,yBAAW,KAAM,IAAI,MAAM,cAAe,WAAW,IAAK,MAAO,CAAE;AAAA,YAErE;AAAA,UAEF,OAAO;AAEL,qBAAU,MAAM,OAAQ;AAEtB,yBAAW,KAAM,iBAAkB,EAAG,CAAE;AAAA,YAE1C;AAAA,UAEF;AAAA,QAEF;AAEA,YAAK,KAAK,WAAW,GAAI;AAEvB,iBAAO,EAAE,OAAO,IAAI,MAAM,MAAM,EAAE;AAAA,QAEpC;AAEA,YAAI,MAAM,IAAI,UAAU,EAAE,gBAAiB,MAAM,iBAAkB;AAEnE,YAAI,UAAU,qBAAsB,KAAK,SAAU,EAAG,CAAE;AAIxD,YAAI,UAAU,QAAQ,aAAc,SAAU;AAC9C,gBAAQ,IAAK,qCAAqC,OAAQ;AAE1D,YAAI,QAAQ,WAAY,qBAAsB,SAAS,OAAQ,EAAG,CAAE,CAAE;AACtE,YAAI,gBAAgB,IAAI,MAAM,cAAe,KAAK,OAAQ;AAC1D,sBAAc,QAAS,KAAK,gBAAgB,IAAK,EAAE,eAAgB,KAAK,WAAY;AAEpF,YAAI;AAEJ,YAAK,MAAM,WAAY;AAErB,sBAAY,IAAI,MAAM,UAAW,KAAK,OAAQ;AAC9C,oBAAU,QAAS,KAAK,gBAAgB,IAAK;AAAA,QAE/C;AAIA,YAAI,aAAa,CAAC;AAClB,YAAI,aAAa,CAAC;AAClB,YAAI,QAAQ;AAIZ,YAAI,UAAU;AAAA,UACZ,YAAY,CAAC;AAAA,UACb,OAAO,CAAC;AAAA,UACR,aAAa,CAAC;AAAA,UACd,QAAQ,CAAC;AAAA,UACT,SAAS,CAAC;AAAA,UACV,WAAW,CAAC;AAAA,UACZ,SAAS,CAAC;AAAA,UACV,QAAQ,CAAC;AAAA,UACT,YAAY,CAAC;AAAA,UACb,OAAO,CAAC;AAAA,UACR,cAAc,CAAC;AAAA,UACf,kBAAkB,CAAC;AAAA,UACnB,eAAe,CAAC;AAAA,UAChB,kBAAkB,CAAC;AAAA,QACrB;AAEA,qBAAc,SAAS,sBAAsB,aAAa,cAAe;AACzE,qBAAc,SAAS,2BAA2B,kBAAkB,kBAAmB;AACvF,qBAAc,SAAS,uBAAuB,cAAc,eAAgB;AAC5E,qBAAc,SAAS,kBAAkB,SAAS,UAAW;AAC7D,qBAAc,SAAS,mBAAmB,UAAU,WAAY;AAChE,qBAAc,SAAS,qBAAqB,YAAY,aAAc;AACtE,qBAAc,SAAS,mBAAmB,UAAU,WAAY;AAChE,qBAAc,SAAS,kBAAkB,SAAS,UAAW;AAC7D,qBAAc,SAAS,sBAAsB,YAAY,aAAc;AACvE,qBAAc,SAAS,iBAAiB,QAAQ,SAAU;AAC1D,qBAAc,SAAS,yBAAyB,gBAAgB,gBAAiB;AACjF,qBAAc,SAAS,6BAA6B,oBAAoB,oBAAqB;AAC7F,qBAAc,SAAS,0BAA0B,iBAAiB,iBAAkB;AACpF,qBAAc,SAAS,SAAS,6BAA6B,oBAAqB;AAElF,qBAAc,QAAQ,YAAY,cAAe;AACjD,qBAAc,QAAQ,OAAO,kBAAmB;AAChD,qBAAc,QAAQ,aAAa,eAAgB;AACnD,qBAAc,QAAQ,QAAQ,UAAW;AACzC,qBAAc,QAAQ,SAAS,WAAY;AAC3C,qBAAc,QAAQ,WAAW,aAAc;AAC/C,qBAAc,QAAQ,SAAS,WAAY;AAC3C,qBAAc,QAAQ,QAAQ,UAAW;AACzC,qBAAc,QAAQ,YAAY,aAAc;AAChD,qBAAc,QAAQ,cAAc,gBAAiB;AAErD,wBAAgB;AAChB,wBAAgB;AAEhB,YAAI,QAAQ,WAAY,qBAAsB,SAAS,OAAQ,EAAG,CAAE,CAAE;AAEtE,YAAK,MAAM,WAAW,QAAS;AAE7B,gBAAM,WAAW,aAAc,IAAI,MAAM,MAAO,CAAE,KAAK,KAAK,GAAG,GAAG,CAAE,CAAE;AAAA,QAExE;AAEA,cAAM,MAAM,eAAgB,MAAM,IAAK;AAEvC,eAAO;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MAEF;AAAA,IAEF;AAAA;AAAA;;;AC70HA;AAAA;AAAA,UAAM,gBAAgB;AAOtB,WAAO,QAAQ,YAAY,OAAO,kBAAkB,wBAAwB;AAAA,MAC1E,QAAQ,EAAC,MAAM,QAAO;AAAA,MAEtB,MAAM,WAAY;AAChB,aAAK,QAAQ;AACb,aAAK,SAAS,IAAI,MAAM,cAAc;AAAA,MACxC;AAAA,MAEA,QAAQ,WAAY;AAClB,YAAI,OAAO;AACX,YAAI,KAAK,KAAK;AACd,YAAI,MAAM,KAAK;AACf,YAAI,iBAAiB,KAAK,GAAG,QAAQ,QAAQ;AAE7C,YAAI,CAAC,KAAK;AAAE;AAAA,QAAQ;AAEpB,aAAK,OAAO;AAEZ,aAAK,OAAO,KAAK,KAAK,SAAU,cAAc;AAC5C,eAAK,QAAQ,aAAa;AAC1B,eAAK,MAAM,SAAS,SAAU,QAAQ;AACpC,gBAAI,OAAO,QAAQ;AACjB,kBAAI,WAAW,OAAO;AACtB,kBAAI,SAAS,MAAO,gBAAe,qBAAqB,SAAS,KAAK;AACtE,kBAAI,SAAS,IAAK,gBAAe,qBAAqB,SAAS,GAAG;AAClE,kBAAI,SAAS,SAAU,gBAAe,qBAAqB,SAAS,QAAQ;AAC5E,kBAAI,SAAS,YAAa,gBAAe,qBAAqB,SAAS,WAAW;AAAA,YACpF;AAAA,UACF,CAAC;AACD,aAAG,YAAY,QAAQ,KAAK,KAAK;AACjC,aAAG,KAAK,gBAAgB,EAAC,QAAQ,WAAW,OAAO,KAAK,MAAK,CAAC;AAAA,QAChE,CAAC;AAAA,MACH;AAAA,MAEA,QAAQ,WAAY;AAClB,YAAI,CAAC,KAAK,OAAO;AAAE;AAAA,QAAQ;AAC3B,aAAK,GAAG,eAAe,MAAM;AAAA,MAC/B;AAAA,IACF,CAAC;AAAA;AAAA;;;ACg9BD,SAAS,QAAQ,MAAM,IAAI;AACvB,MAAI,OAAO,QAAQ;AACf,SAAK,MAAM,OAAO,CAAC;AACvB,OAAK,SAAS;AACd,SAAO;AACX;AAyGO,SAAS,YAAY,MAAM,MAAM;AACpC,SAAO,KAAK,MAAM,QAAQ,CAAC,GAAG,GAAG,CAAC;AACtC;AA+EO,SAAS,YAAY,MAAM,MAAM;AACpC,SAAO,MAAM,MAAM,EAAE,GAAG,EAAE,GAAG,QAAQ,KAAK,KAAK,QAAQ,KAAK,UAAU;AAC1E;AAuTO,SAAS,WAAW,MAAM,MAAM;AACnC,SAAO,MAAM,KAAK,SAAS,IAAI,MAAM,QAAQ,KAAK,UAAU,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,QAAQ,KAAK,KAAK,QAAQ,KAAK,UAAU;AAC3H;AAgPO,SAAS,QAAQ,KAAK,QAAQ;AACjC,MAAI,QAAQ;AACR,QAAI,OAAO,IAAI,GAAG,IAAI,MAAM;AAC5B,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,EAAE;AAC9B,WAAK,CAAC,IAAI,IAAI,WAAW,CAAC;AAC9B,WAAO;AAAA,EACX;AACA,MAAI;AACA,WAAO,GAAG,OAAO,GAAG;AACxB,MAAI,IAAI,IAAI;AACZ,MAAI,KAAK,IAAI,GAAG,IAAI,UAAU,IAAI,UAAU,EAAE;AAC9C,MAAI,KAAK;AACT,MAAI,IAAI,SAAUoB,IAAG;AAAE,OAAG,IAAI,IAAIA;AAAA,EAAG;AACrC,WAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACxB,QAAI,KAAK,IAAI,GAAG,QAAQ;AACpB,UAAI,IAAI,IAAI,GAAG,KAAK,KAAM,IAAI,KAAM,EAAE;AACtC,QAAE,IAAI,EAAE;AACR,WAAK;AAAA,IACT;AACA,QAAI,IAAI,IAAI,WAAW,CAAC;AACxB,QAAI,IAAI,OAAO;AACX,QAAE,CAAC;AAAA,aACE,IAAI;AACT,QAAE,MAAO,KAAK,CAAE,GAAG,EAAE,MAAO,IAAI,EAAG;AAAA,aAC9B,IAAI,SAAS,IAAI;AACtB,UAAI,SAAS,IAAI,QAAQ,MAAO,IAAI,WAAW,EAAE,CAAC,IAAI,MAClD,EAAE,MAAO,KAAK,EAAG,GAAG,EAAE,MAAQ,KAAK,KAAM,EAAG,GAAG,EAAE,MAAQ,KAAK,IAAK,EAAG,GAAG,EAAE,MAAO,IAAI,EAAG;AAAA;AAE7F,QAAE,MAAO,KAAK,EAAG,GAAG,EAAE,MAAQ,KAAK,IAAK,EAAG,GAAG,EAAE,MAAO,IAAI,EAAG;AAAA,EACtE;AACA,SAAO,IAAI,IAAI,GAAG,EAAE;AACxB;AAQO,SAAS,UAAU,KAAK,QAAQ;AACnC,MAAI,QAAQ;AACR,QAAI,IAAI;AACR,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACjC,WAAK,OAAO,aAAa,MAAM,MAAM,IAAI,SAAS,GAAG,IAAI,KAAK,CAAC;AACnE,WAAO;AAAA,EACX,WACS,IAAI;AACT,WAAO,GAAG,OAAO,GAAG;AAAA,EACxB,OACK;AACD,QAAIC,MAAK,MAAM,GAAG,GAAG,IAAIA,IAAG,GAAG,IAAIA,IAAG;AACtC,QAAI,EAAE;AACF,UAAI,CAAC;AACT,WAAO;AAAA,EACX;AACJ;AA9xDA,IAgBI,KACA,IAoBA,IAAiB,KAAmB,KAEpC,MAEA,MAEA,MAEA,MAcA,IAAoB,IAAW,OAG/B,IAAoB,IAAW,OAE/B,KAGI,GAFC,GAUL,MAkDA,KACK,GAEA,GAEA,GAEA,GAGL,KACK,GAGL,KAAqC,MAErC,KAAqC,MAErC,KASA,MAKA,QAKA,MAGA,KA6BA,IAkBA,KAUA,OAqLA,OAOA,SAQA,OA8EA,IAMA,IAqCA,MAQA,OAaA,MAmEA,KAEA,IAEA,MA+HA,MAWA,KAcA,OAuBA,MAeA,KAeA,MA6BA,IAEA,MAUA,MAWA,QACA,OAIA,MAIA,MAEA,KAEA,MAcA,OAYA,UAkCA,IAEA,IACA,IAEA,QAKA,KAaA,KAYA,KAKA,MAEA,KAWA,KAgBA,SAyEA,cAkCA,SA+CA,cAmCA,MAgFA,QA2CA,aA0CA,MA8EA,QAgCA,aAwCA,YAkDA,iBAsEA,IAEA,IAEA,KAOA,OAqBA,YAmDA,YAwFA,KAUA,MAMA,MAaA,KAwCA,KAUA,gBA8CA,YAuCA,iBAoCA,KAmSA,kBAcA,cAyBA,mBA8BA;AAj1EJ;AAAA;AAgBA,IAAI,MAAM,CAAC;AACX,IAAI,KAAM,SAAU,GAAG,IAAI,KAAK,UAAU,IAAI;AAC1C,UAAI,IAAI,IAAI,OAAO,IAAI,EAAE,MAAM,IAAI,EAAE,IAAI,IAAI,gBAAgB,IAAI,KAAK;AAAA,QAClE,IAAI;AAAA,MACR,GAAG,EAAE,MAAM,kBAAkB,CAAC,CAAC,EAAE;AACjC,QAAE,YAAY,SAAU,GAAG;AACvB,YAAIC,KAAI,EAAE,MAAM,KAAKA,GAAE;AACvB,YAAI,IAAI;AACJ,cAAIC,OAAM,IAAI,MAAM,GAAG,CAAC,CAAC;AACzB,UAAAA,KAAI,MAAM,IAAI,GAAG,CAAC;AAClB,UAAAA,KAAI,QAAQ,GAAG,CAAC;AAChB,aAAGA,MAAK,IAAI;AAAA,QAChB;AAEI,aAAG,MAAMD,EAAC;AAAA,MAClB;AACA,QAAE,YAAY,KAAK,QAAQ;AAC3B,aAAO;AAAA,IACX;AAGA,IAAI,KAAK;AAAT,IAAqB,MAAM;AAA3B,IAAwC,MAAM;AAE9C,IAAI,OAAO,IAAI,GAAG;AAAA,MAAC;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA;AAAA,MAAgB;AAAA,MAAG;AAAA;AAAA,MAAoB;AAAA,IAAC,CAAC;AAEhJ,IAAI,OAAO,IAAI,GAAG;AAAA,MAAC;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA;AAAA,MAAiB;AAAA,MAAG;AAAA,IAAC,CAAC;AAEvI,IAAI,OAAO,IAAI,GAAG,CAAC,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;AAEpF,IAAI,OAAO,SAAU,IAAI,OAAO;AAC5B,UAAI,IAAI,IAAI,IAAI,EAAE;AAClB,eAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AACzB,UAAE,CAAC,IAAI,SAAS,KAAK,GAAG,IAAI,CAAC;AAAA,MACjC;AAEA,UAAI,IAAI,IAAI,IAAI,EAAE,EAAE,CAAC;AACrB,eAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AACzB,iBAAS,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG;AAClC,YAAE,CAAC,IAAM,IAAI,EAAE,CAAC,KAAM,IAAK;AAAA,QAC/B;AAAA,MACJ;AACA,aAAO,EAAE,GAAM,EAAK;AAAA,IACxB;AACA,IAAI,KAAK,KAAK,MAAM,CAAC;AAArB,IAAwB,KAAK,GAAG;AAAhC,IAAmC,QAAQ,GAAG;AAE9C,OAAG,EAAE,IAAI,KAAK,MAAM,GAAG,IAAI;AAC3B,IAAI,KAAK,KAAK,MAAM,CAAC;AAArB,IAAwB,KAAK,GAAG;AAAhC,IAAmC,QAAQ,GAAG;AAE9C,IAAI,MAAM,IAAI,IAAI,KAAK;AACvB,SAAS,IAAI,GAAG,IAAI,OAAO,EAAE,GAAG;AAExB,WAAM,IAAI,UAAW,KAAO,IAAI,UAAW;AAC/C,WAAM,IAAI,UAAW,KAAO,IAAI,UAAW;AAC3C,WAAM,IAAI,UAAW,KAAO,IAAI,SAAW;AAC3C,UAAI,CAAC,MAAO,IAAI,UAAW,KAAO,IAAI,QAAW,MAAO;AAAA,IAC5D;AAIA,IAAI,OAAQ,SAAU,IAAI,IAAI,GAAG;AAC7B,UAAI,IAAI,GAAG;AAEX,UAAI,IAAI;AAER,UAAI,IAAI,IAAI,IAAI,EAAE;AAElB,aAAO,IAAI,GAAG,EAAE,GAAG;AACf,YAAI,GAAG,CAAC;AACJ,YAAE,EAAE,GAAG,CAAC,IAAI,CAAC;AAAA,MACrB;AAEA,UAAI,KAAK,IAAI,IAAI,EAAE;AACnB,WAAK,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AACrB,WAAG,CAAC,IAAK,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAM;AAAA,MACtC;AACA,UAAI;AACJ,UAAI,GAAG;AAEH,aAAK,IAAI,IAAI,KAAK,EAAE;AAEpB,YAAI,MAAM,KAAK;AACf,aAAK,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AAEpB,cAAI,GAAG,CAAC,GAAG;AAEP,gBAAI,KAAM,KAAK,IAAK,GAAG,CAAC;AAExB,gBAAI,MAAM,KAAK,GAAG,CAAC;AAEnB,gBAAIF,KAAI,GAAG,GAAG,CAAC,IAAI,CAAC,OAAO;AAE3B,qBAAS,IAAIA,MAAM,KAAK,OAAO,GAAIA,MAAK,GAAG,EAAEA,IAAG;AAE5C,iBAAG,IAAIA,EAAC,KAAK,GAAG,IAAI;AAAA,YACxB;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ,OACK;AACD,aAAK,IAAI,IAAI,CAAC;AACd,aAAK,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACpB,cAAI,GAAG,CAAC,GAAG;AACP,eAAG,CAAC,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,KAAM,KAAK,GAAG,CAAC;AAAA,UAC9C;AAAA,QACJ;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAEA,IAAI,MAAM,IAAI,GAAG,GAAG;AACpB,SAAS,IAAI,GAAG,IAAI,KAAK,EAAE;AACvB,UAAI,CAAC,IAAI;AACb,SAAS,IAAI,KAAK,IAAI,KAAK,EAAE;AACzB,UAAI,CAAC,IAAI;AACb,SAAS,IAAI,KAAK,IAAI,KAAK,EAAE;AACzB,UAAI,CAAC,IAAI;AACb,SAAS,IAAI,KAAK,IAAI,KAAK,EAAE;AACzB,UAAI,CAAC,IAAI;AAEb,IAAI,MAAM,IAAI,GAAG,EAAE;AACnB,SAAS,IAAI,GAAG,IAAI,IAAI,EAAE;AACtB,UAAI,CAAC,IAAI;AAEb,IAAI,MAAoB,KAAK,KAAK,GAAG,CAAC;AAAtC,IAAyC,OAAqB,KAAK,KAAK,GAAG,CAAC;AAE5E,IAAI,MAAoB,KAAK,KAAK,GAAG,CAAC;AAAtC,IAAyC,OAAqB,KAAK,KAAK,GAAG,CAAC;AAE5E,IAAI,MAAM,SAAU,GAAG;AACnB,UAAI,IAAI,EAAE,CAAC;AACX,eAAS,IAAI,GAAG,IAAI,EAAE,QAAQ,EAAE,GAAG;AAC/B,YAAI,EAAE,CAAC,IAAI;AACP,cAAI,EAAE,CAAC;AAAA,MACf;AACA,aAAO;AAAA,IACX;AAEA,IAAI,OAAO,SAAUE,IAAGE,IAAG,GAAG;AAC1B,UAAI,IAAKA,KAAI,IAAK;AAClB,cAASF,GAAE,CAAC,IAAKA,GAAE,IAAI,CAAC,KAAK,OAAQE,KAAI,KAAM;AAAA,IACnD;AAEA,IAAI,SAAS,SAAUF,IAAGE,IAAG;AACzB,UAAI,IAAKA,KAAI,IAAK;AAClB,cAASF,GAAE,CAAC,IAAKA,GAAE,IAAI,CAAC,KAAK,IAAMA,GAAE,IAAI,CAAC,KAAK,QAASE,KAAI;AAAA,IAChE;AAEA,IAAI,OAAO,SAAUA,IAAG;AAAE,cAASA,KAAI,KAAK,IAAK;AAAA,IAAG;AAGpD,IAAI,MAAM,SAAUJ,IAAG,GAAG,GAAG;AACzB,UAAI,KAAK,QAAQ,IAAI;AACjB,YAAI;AACR,UAAI,KAAK,QAAQ,IAAIA,GAAE;AACnB,YAAIA,GAAE;AAEV,aAAO,IAAI,GAAGA,GAAE,SAAS,GAAG,CAAC,CAAC;AAAA,IAClC;AAsBA,IAAI,KAAK;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA;AAAA,IAEJ;AAEA,IAAI,MAAM,SAAU,KAAK,KAAK,IAAI;AAC9B,UAAI,IAAI,IAAI,MAAM,OAAO,GAAG,GAAG,CAAC;AAChC,QAAE,OAAO;AACT,UAAI,MAAM;AACN,cAAM,kBAAkB,GAAG,GAAG;AAClC,UAAI,CAAC;AACD,cAAM;AACV,aAAO;AAAA,IACX;AAEA,IAAI,QAAQ,SAAU,KAAK,IAAI,KAAK,MAAM;AAEtC,UAAI,KAAK,IAAI,QAAQ,KAAK,OAAO,KAAK,SAAS;AAC/C,UAAI,CAAC,MAAM,GAAG,KAAK,CAAC,GAAG;AACnB,eAAO,OAAO,IAAI,GAAG,CAAC;AAC1B,UAAI,QAAQ,CAAC;AAEb,UAAI,SAAS,SAAS,GAAG,KAAK;AAE9B,UAAI,OAAO,GAAG;AAEd,UAAI;AACA,cAAM,IAAI,GAAG,KAAK,CAAC;AAEvB,UAAI,OAAO,SAAUK,IAAG;AACpB,YAAI,KAAK,IAAI;AAEb,YAAIA,KAAI,IAAI;AAER,cAAI,OAAO,IAAI,GAAG,KAAK,IAAI,KAAK,GAAGA,EAAC,CAAC;AACrC,eAAK,IAAI,GAAG;AACZ,gBAAM;AAAA,QACV;AAAA,MACJ;AAEA,UAAI,QAAQ,GAAG,KAAK,GAAG,MAAM,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,KAAK,GAAG,GAAG,MAAM,GAAG,GAAG,MAAM,GAAG;AAEnG,UAAI,OAAO,KAAK;AAChB,SAAG;AACC,YAAI,CAAC,IAAI;AAEL,kBAAQ,KAAK,KAAK,KAAK,CAAC;AAExB,cAAI,OAAO,KAAK,KAAK,MAAM,GAAG,CAAC;AAC/B,iBAAO;AACP,cAAI,CAAC,MAAM;AAEP,gBAAI,IAAI,KAAK,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,IAAK,IAAI,IAAI,CAAC,KAAK,GAAI,IAAI,IAAI;AACnE,gBAAI,IAAI,IAAI;AACR,kBAAI;AACA,oBAAI,CAAC;AACT;AAAA,YACJ;AAEA,gBAAI;AACA,mBAAK,KAAK,CAAC;AAEf,gBAAI,IAAI,IAAI,SAAS,GAAG,CAAC,GAAG,EAAE;AAE9B,eAAG,IAAI,MAAM,GAAG,GAAG,IAAI,MAAM,IAAI,GAAG,GAAG,IAAI;AAC3C;AAAA,UACJ,WACS,QAAQ;AACb,iBAAK,MAAM,KAAK,MAAM,MAAM,GAAG,MAAM;AAAA,mBAChC,QAAQ,GAAG;AAEhB,gBAAI,OAAO,KAAK,KAAK,KAAK,EAAE,IAAI,KAAK,QAAQ,KAAK,KAAK,MAAM,IAAI,EAAE,IAAI;AACvE,gBAAI,KAAK,OAAO,KAAK,KAAK,MAAM,GAAG,EAAE,IAAI;AACzC,mBAAO;AAEP,gBAAI,MAAM,IAAI,GAAG,EAAE;AAEnB,gBAAI,MAAM,IAAI,GAAG,EAAE;AACnB,qBAAS,IAAI,GAAG,IAAI,OAAO,EAAE,GAAG;AAE5B,kBAAI,KAAK,CAAC,CAAC,IAAI,KAAK,KAAK,MAAM,IAAI,GAAG,CAAC;AAAA,YAC3C;AACA,mBAAO,QAAQ;AAEf,gBAAI,MAAM,IAAI,GAAG,GAAG,UAAU,KAAK,OAAO;AAE1C,gBAAI,MAAM,KAAK,KAAK,KAAK,CAAC;AAC1B,qBAAS,IAAI,GAAG,IAAI,MAAK;AACrB,kBAAI,IAAI,IAAI,KAAK,KAAK,KAAK,MAAM,CAAC;AAElC,qBAAO,IAAI;AAEX,kBAAI,IAAI,KAAK;AAEb,kBAAI,IAAI,IAAI;AACR,oBAAI,GAAG,IAAI;AAAA,cACf,OACK;AAED,oBAAI,IAAI,GAAG,IAAI;AACf,oBAAI,KAAK;AACL,sBAAI,IAAI,KAAK,KAAK,KAAK,CAAC,GAAG,OAAO,GAAG,IAAI,IAAI,IAAI,CAAC;AAAA,yBAC7C,KAAK;AACV,sBAAI,IAAI,KAAK,KAAK,KAAK,CAAC,GAAG,OAAO;AAAA,yBAC7B,KAAK;AACV,sBAAI,KAAK,KAAK,KAAK,KAAK,GAAG,GAAG,OAAO;AACzC,uBAAO;AACH,sBAAI,GAAG,IAAI;AAAA,cACnB;AAAA,YACJ;AAEA,gBAAI,KAAK,IAAI,SAAS,GAAG,IAAI,GAAG,KAAK,IAAI,SAAS,IAAI;AAEtD,kBAAM,IAAI,EAAE;AAEZ,kBAAM,IAAI,EAAE;AACZ,iBAAK,KAAK,IAAI,KAAK,CAAC;AACpB,iBAAK,KAAK,IAAI,KAAK,CAAC;AAAA,UACxB;AAEI,gBAAI,CAAC;AACT,cAAI,MAAM,MAAM;AACZ,gBAAI;AACA,kBAAI,CAAC;AACT;AAAA,UACJ;AAAA,QACJ;AAGA,YAAI;AACA,eAAK,KAAK,MAAM;AACpB,YAAI,OAAO,KAAK,OAAO,GAAG,OAAO,KAAK,OAAO;AAC7C,YAAI,OAAO;AACX,iBAAQ,OAAO,KAAK;AAEhB,cAAI,IAAI,GAAG,OAAO,KAAK,GAAG,IAAI,GAAG,GAAG,MAAM,KAAK;AAC/C,iBAAO,IAAI;AACX,cAAI,MAAM,MAAM;AACZ,gBAAI;AACA,kBAAI,CAAC;AACT;AAAA,UACJ;AACA,cAAI,CAAC;AACD,gBAAI,CAAC;AACT,cAAI,MAAM;AACN,gBAAI,IAAI,IAAI;AAAA,mBACP,OAAO,KAAK;AACjB,mBAAO,KAAK,KAAK;AACjB;AAAA,UACJ,OACK;AACD,gBAAI,MAAM,MAAM;AAEhB,gBAAI,MAAM,KAAK;AAEX,kBAAI,IAAI,MAAM,KAAK,IAAI,KAAK,CAAC;AAC7B,oBAAM,KAAK,KAAK,MAAM,KAAK,KAAK,CAAC,IAAI,GAAG,CAAC;AACzC,qBAAO;AAAA,YACX;AAEA,gBAAIH,KAAI,GAAG,OAAO,KAAK,GAAG,IAAI,GAAG,GAAG,OAAOA,MAAK;AAChD,gBAAI,CAACA;AACD,kBAAI,CAAC;AACT,mBAAOA,KAAI;AACX,gBAAI,KAAK,GAAG,IAAI;AAChB,gBAAI,OAAO,GAAG;AACV,kBAAI,IAAI,KAAK,IAAI;AACjB,oBAAM,OAAO,KAAK,GAAG,KAAK,KAAK,KAAK,GAAG,OAAO;AAAA,YAClD;AACA,gBAAI,MAAM,MAAM;AACZ,kBAAI;AACA,oBAAI,CAAC;AACT;AAAA,YACJ;AACA,gBAAI;AACA,mBAAK,KAAK,MAAM;AACpB,gBAAI,MAAM,KAAK;AACf,gBAAI,KAAK,IAAI;AACT,kBAAI,QAAQ,KAAK,IAAI,OAAO,KAAK,IAAI,IAAI,GAAG;AAC5C,kBAAI,QAAQ,KAAK;AACb,oBAAI,CAAC;AACT,qBAAO,KAAK,MAAM,EAAE;AAChB,oBAAI,EAAE,IAAI,KAAK,QAAQ,EAAE;AAAA,YACjC;AACA,mBAAO,KAAK,KAAK,EAAE;AACf,kBAAI,EAAE,IAAI,IAAI,KAAK,EAAE;AAAA,UAC7B;AAAA,QACJ;AACA,WAAG,IAAI,IAAI,GAAG,IAAI,MAAM,GAAG,IAAI,IAAI,GAAG,IAAI;AAC1C,YAAI;AACA,kBAAQ,GAAG,GAAG,IAAI,KAAK,GAAG,IAAI,IAAI,GAAG,IAAI;AAAA,MACjD,SAAS,CAAC;AAEV,aAAO,MAAM,IAAI,UAAU,QAAQ,IAAI,KAAK,GAAG,EAAE,IAAI,IAAI,SAAS,GAAG,EAAE;AAAA,IAC3E;AAEA,IAAI,QAAQ,SAAUA,IAAGE,IAAGJ,IAAG;AAC3B,MAAAA,OAAMI,KAAI;AACV,UAAI,IAAKA,KAAI,IAAK;AAClB,MAAAF,GAAE,CAAC,KAAKF;AACR,MAAAE,GAAE,IAAI,CAAC,KAAKF,MAAK;AAAA,IACrB;AAEA,IAAI,UAAU,SAAUE,IAAGE,IAAGJ,IAAG;AAC7B,MAAAA,OAAMI,KAAI;AACV,UAAI,IAAKA,KAAI,IAAK;AAClB,MAAAF,GAAE,CAAC,KAAKF;AACR,MAAAE,GAAE,IAAI,CAAC,KAAKF,MAAK;AACjB,MAAAE,GAAE,IAAI,CAAC,KAAKF,MAAK;AAAA,IACrB;AAEA,IAAI,QAAQ,SAAUE,IAAG,IAAI;AAEzB,UAAI,IAAI,CAAC;AACT,eAAS,IAAI,GAAG,IAAIA,GAAE,QAAQ,EAAE,GAAG;AAC/B,YAAIA,GAAE,CAAC;AACH,YAAE,KAAK,EAAE,GAAG,GAAG,GAAGA,GAAE,CAAC,EAAE,CAAC;AAAA,MAChC;AACA,UAAI,IAAI,EAAE;AACV,UAAI,KAAK,EAAE,MAAM;AACjB,UAAI,CAAC;AACD,eAAO,EAAE,GAAG,IAAI,GAAG,EAAE;AACzB,UAAI,KAAK,GAAG;AACR,YAAIF,KAAI,IAAI,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC;AACzB,QAAAA,GAAE,EAAE,CAAC,EAAE,CAAC,IAAI;AACZ,eAAO,EAAE,GAAGA,IAAG,GAAG,EAAE;AAAA,MACxB;AACA,QAAE,KAAK,SAAU,GAAG,GAAG;AAAE,eAAO,EAAE,IAAI,EAAE;AAAA,MAAG,CAAC;AAG5C,QAAE,KAAK,EAAE,GAAG,IAAI,GAAG,MAAM,CAAC;AAC1B,UAAI,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK;AAC7C,QAAE,CAAC,IAAI,EAAE,GAAG,IAAI,GAAG,EAAE,IAAI,EAAE,GAAG,GAAM,EAAK;AAMzC,aAAO,MAAM,IAAI,GAAG;AAChB,YAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,OAAO,IAAI;AACrC,YAAI,EAAE,MAAM,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,OAAO,IAAI;AACjD,UAAE,IAAI,IAAI,EAAE,GAAG,IAAI,GAAG,EAAE,IAAI,EAAE,GAAG,GAAM,EAAK;AAAA,MAChD;AACA,UAAI,SAAS,GAAG,CAAC,EAAE;AACnB,eAAS,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG;AACxB,YAAI,GAAG,CAAC,EAAE,IAAI;AACV,mBAAS,GAAG,CAAC,EAAE;AAAA,MACvB;AAEA,UAAI,KAAK,IAAI,IAAI,SAAS,CAAC;AAE3B,UAAI,MAAM,GAAG,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC;AAC7B,UAAI,MAAM,IAAI;AAIV,YAAI,IAAI,GAAG,KAAK;AAEhB,YAAI,MAAM,MAAM,IAAI,MAAM,KAAK;AAC/B,WAAG,KAAK,SAAU,GAAG,GAAG;AAAE,iBAAO,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,KAAK,EAAE,IAAI,EAAE;AAAA,QAAG,CAAC;AAClE,eAAO,IAAI,GAAG,EAAE,GAAG;AACf,cAAI,OAAO,GAAG,CAAC,EAAE;AACjB,cAAI,GAAG,IAAI,IAAI,IAAI;AACf,kBAAM,OAAO,KAAM,MAAM,GAAG,IAAI;AAChC,eAAG,IAAI,IAAI;AAAA,UACf;AAEI;AAAA,QACR;AACA,eAAO;AACP,eAAO,KAAK,GAAG;AACX,cAAI,OAAO,GAAG,CAAC,EAAE;AACjB,cAAI,GAAG,IAAI,IAAI;AACX,kBAAM,KAAM,KAAK,GAAG,IAAI,MAAM;AAAA;AAE9B,cAAE;AAAA,QACV;AACA,eAAO,KAAK,KAAK,IAAI,EAAE,GAAG;AACtB,cAAI,OAAO,GAAG,CAAC,EAAE;AACjB,cAAI,GAAG,IAAI,KAAK,IAAI;AAChB,cAAE,GAAG,IAAI;AACT,cAAE;AAAA,UACN;AAAA,QACJ;AACA,cAAM;AAAA,MACV;AACA,aAAO,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG,GAAG,IAAI;AAAA,IACnC;AAEA,IAAI,KAAK,SAAU,GAAG,GAAGE,IAAG;AACxB,aAAO,EAAE,KAAK,KACR,KAAK,IAAI,GAAG,EAAE,GAAG,GAAGA,KAAI,CAAC,GAAG,GAAG,EAAE,GAAG,GAAGA,KAAI,CAAC,CAAC,IAC5C,EAAE,EAAE,CAAC,IAAIA;AAAA,IACpB;AAEA,IAAI,KAAK,SAAU,GAAG;AAClB,UAAI,IAAI,EAAE;AAEV,aAAO,KAAK,CAAC,EAAE,EAAE,CAAC;AACd;AACJ,UAAI,KAAK,IAAI,IAAI,EAAE,CAAC;AAEpB,UAAI,MAAM,GAAG,MAAM,EAAE,CAAC,GAAG,MAAM;AAC/B,UAAI,IAAI,SAAUF,IAAG;AAAE,WAAG,KAAK,IAAIA;AAAA,MAAG;AACtC,eAAS,IAAI,GAAG,KAAK,GAAG,EAAE,GAAG;AACzB,YAAI,EAAE,CAAC,KAAK,OAAO,KAAK;AACpB,YAAE;AAAA,aACD;AACD,cAAI,CAAC,OAAO,MAAM,GAAG;AACjB,mBAAO,MAAM,KAAK,OAAO;AACrB,gBAAE,KAAK;AACX,gBAAI,MAAM,GAAG;AACT,gBAAE,MAAM,KAAO,MAAM,MAAO,IAAK,QAAU,MAAM,KAAM,IAAK,KAAK;AACjE,oBAAM;AAAA,YACV;AAAA,UACJ,WACS,MAAM,GAAG;AACd,cAAE,GAAG,GAAG,EAAE;AACV,mBAAO,MAAM,GAAG,OAAO;AACnB,gBAAE,IAAI;AACV,gBAAI,MAAM;AACN,gBAAI,MAAM,KAAM,IAAK,IAAI,GAAG,MAAM;AAAA,UAC1C;AACA,iBAAO;AACH,cAAE,GAAG;AACT,gBAAM;AACN,gBAAM,EAAE,CAAC;AAAA,QACb;AAAA,MACJ;AACA,aAAO,EAAE,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,GAAG,EAAE;AAAA,IAC1C;AAEA,IAAI,OAAO,SAAU,IAAI,IAAI;AACzB,UAAI,IAAI;AACR,eAAS,IAAI,GAAG,IAAI,GAAG,QAAQ,EAAE;AAC7B,aAAK,GAAG,CAAC,IAAI,GAAG,CAAC;AACrB,aAAO;AAAA,IACX;AAGA,IAAI,QAAQ,SAAU,KAAK,KAAK,KAAK;AAEjC,UAAI,IAAI,IAAI;AACZ,UAAI,IAAI,KAAK,MAAM,CAAC;AACpB,UAAI,CAAC,IAAI,IAAI;AACb,UAAI,IAAI,CAAC,IAAI,KAAK;AAClB,UAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI;AACtB,UAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI;AAC1B,eAAS,IAAI,GAAG,IAAI,GAAG,EAAE;AACrB,YAAI,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;AAC1B,cAAQ,IAAI,IAAI,KAAK;AAAA,IACzB;AAEA,IAAI,OAAO,SAAU,KAAK,KAAK,OAAO,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,IAAII,IAAG;AACnE,YAAM,KAAKA,MAAK,KAAK;AACrB,QAAE,GAAG,GAAG;AACR,UAAIH,MAAK,MAAM,IAAI,EAAE,GAAG,MAAMA,IAAG,GAAG,MAAMA,IAAG;AAC7C,UAAIK,MAAK,MAAM,IAAI,EAAE,GAAG,MAAMA,IAAG,GAAG,MAAMA,IAAG;AAC7C,UAAI,KAAK,GAAG,GAAG,GAAG,OAAO,GAAG,GAAG,MAAM,GAAG;AACxC,UAAI,KAAK,GAAG,GAAG,GAAG,OAAO,GAAG,GAAG,MAAM,GAAG;AACxC,UAAI,SAAS,IAAI,IAAI,EAAE;AACvB,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE;AAC/B,UAAE,OAAO,KAAK,CAAC,IAAI,EAAE;AACzB,eAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE;AAC/B,UAAE,OAAO,KAAK,CAAC,IAAI,EAAE;AACzB,UAAI,KAAK,MAAM,QAAQ,CAAC,GAAG,MAAM,GAAG,GAAG,OAAO,GAAG;AACjD,UAAI,OAAO;AACX,aAAO,OAAO,KAAK,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,GAAG,EAAE;AACvC;AACJ,UAAI,OAAQ,KAAK,KAAM;AACvB,UAAI,QAAQ,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI;AAC5C,UAAI,QAAQ,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,KAAK,KAAK,IAAI,OAAO,KAAK,QAAQ,GAAG,IAAI,IAAI,OAAO,EAAE,IAAI,IAAI,OAAO,EAAE,IAAI,IAAI,OAAO,EAAE;AACpI,UAAI,MAAM,KAAK,QAAQ,SAAS,QAAQ;AACpC,eAAO,MAAM,KAAKF,IAAG,IAAI,SAAS,IAAI,KAAK,EAAE,CAAC;AAClD,UAAI,IAAI,IAAI,IAAI;AAChB,YAAM,KAAKA,IAAG,KAAK,QAAQ,MAAM,GAAGA,MAAK;AACzC,UAAI,QAAQ,OAAO;AACf,aAAK,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,CAAC,GAAG,KAAK;AAC/D,YAAI,MAAM,KAAK,KAAK,MAAM,CAAC;AAC3B,cAAM,KAAKA,IAAG,MAAM,GAAG;AACvB,cAAM,KAAKA,KAAI,GAAG,MAAM,CAAC;AACzB,cAAM,KAAKA,KAAI,IAAI,OAAO,CAAC;AAC3B,QAAAA,MAAK;AACL,iBAAS,IAAI,GAAG,IAAI,MAAM,EAAE;AACxB,gBAAM,KAAKA,KAAI,IAAI,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;AACtC,QAAAA,MAAK,IAAI;AACT,YAAI,OAAO,CAAC,MAAM,IAAI;AACtB,iBAAS,KAAK,GAAG,KAAK,GAAG,EAAE,IAAI;AAC3B,cAAI,OAAO,KAAK,EAAE;AAClB,mBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAE,GAAG;AAClC,gBAAI,MAAM,KAAK,CAAC,IAAI;AACpB,kBAAM,KAAKA,IAAG,IAAI,GAAG,CAAC,GAAGA,MAAK,IAAI,GAAG;AACrC,gBAAI,MAAM;AACN,oBAAM,KAAKA,IAAI,KAAK,CAAC,KAAK,IAAK,GAAG,GAAGA,MAAK,KAAK,CAAC,KAAK;AAAA,UAC7D;AAAA,QACJ;AAAA,MACJ,OACK;AACD,aAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AAAA,MACvC;AACA,eAAS,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG;AACzB,YAAI,MAAM,KAAK,CAAC;AAChB,YAAI,MAAM,KAAK;AACX,cAAI,MAAO,OAAO,KAAM;AACxB,kBAAQ,KAAKA,IAAG,GAAG,MAAM,GAAG,CAAC,GAAGA,MAAK,GAAG,MAAM,GAAG;AACjD,cAAI,MAAM;AACN,kBAAM,KAAKA,IAAI,OAAO,KAAM,EAAE,GAAGA,MAAK,KAAK,GAAG;AAClD,cAAI,MAAM,MAAM;AAChB,kBAAQ,KAAKA,IAAG,GAAG,GAAG,CAAC,GAAGA,MAAK,GAAG,GAAG;AACrC,cAAI,MAAM;AACN,oBAAQ,KAAKA,IAAI,OAAO,IAAK,IAAI,GAAGA,MAAK,KAAK,GAAG;AAAA,QACzD,OACK;AACD,kBAAQ,KAAKA,IAAG,GAAG,GAAG,CAAC,GAAGA,MAAK,GAAG,GAAG;AAAA,QACzC;AAAA,MACJ;AACA,cAAQ,KAAKA,IAAG,GAAG,GAAG,CAAC;AACvB,aAAOA,KAAI,GAAG,GAAG;AAAA,IACrB;AAEA,IAAI,MAAoB,IAAI,IAAI,CAAC,OAAO,QAAQ,QAAQ,QAAQ,QAAQ,SAAS,SAAS,SAAS,OAAO,CAAC;AAE3G,IAAI,KAAmB,IAAI,GAAG,CAAC;AAE/B,IAAI,OAAO,SAAU,KAAK,KAAK,MAAM,KAAK,MAAM,IAAI;AAChD,UAAI,IAAI,GAAG,KAAK,IAAI;AACpB,UAAI,IAAI,IAAI,GAAG,MAAM,IAAI,KAAK,IAAI,KAAK,KAAK,IAAI,GAAI,KAAK,IAAI;AAE7D,UAAI,IAAI,EAAE,SAAS,KAAK,EAAE,SAAS,IAAI;AACvC,UAAI,MAAM,GAAG;AACb,UAAI,OAAO,GAAG,KAAK,KAAK;AACxB,UAAI,KAAK;AACL,YAAI;AACA,YAAE,CAAC,IAAI,GAAG,KAAK;AACnB,YAAI,MAAM,IAAI,MAAM,CAAC;AACrB,YAAI,IAAI,OAAO,IAAI,IAAI,MAAM;AAC7B,YAAI,SAAS,KAAK,QAAQ;AAE1B,YAAI,OAAO,GAAG,KAAK,IAAI,IAAI,KAAK,GAAG,OAAO,GAAG,KAAK,IAAI,IAAI,QAAQ,CAAC;AACnE,YAAI,QAAQ,KAAK,KAAK,OAAO,CAAC,GAAG,QAAQ,IAAI;AAC7C,YAAI,MAAM,SAAUG,IAAG;AAAE,kBAAQ,IAAIA,EAAC,IAAK,IAAIA,KAAI,CAAC,KAAK,QAAU,IAAIA,KAAI,CAAC,KAAK,SAAU;AAAA,QAAO;AAGlG,YAAI,OAAO,IAAI,IAAI,IAAK;AAExB,YAAI,KAAK,IAAI,IAAI,GAAG,GAAG,KAAK,IAAI,IAAI,EAAE;AAEtC,YAAI,OAAO,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK;AAClE,eAAO,IAAI,IAAI,GAAG,EAAE,GAAG;AAEnB,cAAI,KAAK,IAAI,CAAC;AAEd,cAAI,OAAO,IAAI,OAAO,QAAQ,KAAK,EAAE;AACrC,eAAK,IAAI,IAAI;AACb,eAAK,EAAE,IAAI;AAGX,cAAI,MAAM,GAAG;AAET,gBAAI,MAAM,IAAI;AACd,iBAAK,OAAO,OAAQ,KAAK,WAAW,MAAM,OAAO,CAAC,MAAM;AACpD,oBAAM,KAAK,KAAK,GAAG,GAAG,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG;AAC3D,mBAAK,OAAO,KAAK,GAAG,KAAK;AACzB,uBAAS,IAAI,GAAG,IAAI,KAAK,EAAE;AACvB,mBAAG,CAAC,IAAI;AACZ,uBAAS,IAAI,GAAG,IAAI,IAAI,EAAE;AACtB,mBAAG,CAAC,IAAI;AAAA,YAChB;AAEA,gBAAI,IAAI,GAAGL,KAAI,GAAG,OAAO,GAAG,MAAM,OAAO,QAAQ;AACjD,gBAAI,MAAM,KAAK,MAAM,IAAI,IAAI,GAAG,GAAG;AAC/B,kBAAI,OAAO,KAAK,IAAI,GAAG,GAAG,IAAI;AAC9B,kBAAI,OAAO,KAAK,IAAI,OAAO,CAAC;AAG5B,kBAAI,KAAK,KAAK,IAAI,KAAK,GAAG;AAC1B,qBAAO,OAAO,QAAQ,EAAE,QAAQ,QAAQ,OAAO;AAC3C,oBAAI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,IAAI,GAAG,GAAG;AAChC,sBAAI,KAAK;AACT,yBAAO,KAAK,MAAM,IAAI,IAAI,EAAE,KAAK,IAAI,IAAI,KAAK,GAAG,GAAG,EAAE;AAClD;AACJ,sBAAI,KAAK,GAAG;AACR,wBAAI,IAAIA,KAAI;AAEZ,wBAAI,KAAK;AACL;AAIJ,wBAAI,MAAM,KAAK,IAAI,KAAK,KAAK,CAAC;AAC9B,wBAAI,KAAK;AACT,6BAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC1B,0BAAI,KAAK,IAAI,MAAM,IAAI;AACvB,0BAAI,MAAM,KAAK,EAAE;AACjB,0BAAI,KAAK,KAAK,MAAM;AACpB,0BAAI,KAAK;AACL,6BAAK,IAAI,QAAQ;AAAA,oBACzB;AAAA,kBACJ;AAAA,gBACJ;AAEA,uBAAO,OAAO,QAAQ,KAAK,IAAI;AAC/B,uBAAO,OAAO,QAAQ;AAAA,cAC1B;AAAA,YACJ;AAEA,gBAAIA,IAAG;AAGH,mBAAK,IAAI,IAAI,YAAa,MAAM,CAAC,KAAK,KAAM,MAAMA,EAAC;AACnD,kBAAI,MAAM,MAAM,CAAC,IAAI,IAAI,MAAM,MAAMA,EAAC,IAAI;AAC1C,oBAAM,KAAK,GAAG,IAAI,KAAK,GAAG;AAC1B,gBAAE,GAAG,MAAM,GAAG;AACd,gBAAE,GAAG,GAAG;AACR,mBAAK,IAAI;AACT,gBAAE;AAAA,YACN,OACK;AACD,mBAAK,IAAI,IAAI,IAAI,CAAC;AAClB,gBAAE,GAAG,IAAI,CAAC,CAAC;AAAA,YACf;AAAA,UACJ;AAAA,QACJ;AACA,aAAK,IAAI,KAAK,IAAI,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE,GAAG;AAClC,eAAK,IAAI,IAAI,IAAI,CAAC;AAClB,YAAE,GAAG,IAAI,CAAC,CAAC;AAAA,QACf;AACA,cAAM,KAAK,KAAK,GAAG,KAAK,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG;AAC7D,YAAI,CAAC,KAAK;AACN,aAAG,IAAK,MAAM,IAAK,EAAG,MAAM,IAAK,CAAC,KAAK;AAEvC,iBAAO;AACP,aAAG,IAAI,MAAM,GAAG,IAAI,MAAM,GAAG,IAAI,GAAG,GAAG,IAAI;AAAA,QAC/C;AAAA,MACJ,OACK;AACD,iBAAS,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,KAAK,KAAK,OAAO;AAE7C,cAAI,IAAI,IAAI;AACZ,cAAI,KAAK,GAAG;AAER,cAAG,MAAM,IAAK,CAAC,IAAI;AACnB,gBAAI;AAAA,UACR;AACA,gBAAM,MAAM,GAAG,MAAM,GAAG,IAAI,SAAS,GAAG,CAAC,CAAC;AAAA,QAC9C;AACA,WAAG,IAAI;AAAA,MACX;AACA,aAAO,IAAI,GAAG,GAAG,MAAM,KAAK,GAAG,IAAI,IAAI;AAAA,IAC3C;AAEA,IAAI,OAAsB,WAAY;AAClC,UAAI,IAAI,IAAI,WAAW,GAAG;AAC1B,eAAS,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG;AAC1B,YAAI,IAAI,GAAG,IAAI;AACf,eAAO,EAAE;AACL,eAAM,IAAI,KAAM,cAAe,MAAM;AACzC,UAAE,CAAC,IAAI;AAAA,MACX;AACA,aAAO;AAAA,IACX,EAAG;AAEH,IAAI,MAAM,WAAY;AAClB,UAAI,IAAI;AACR,aAAO;AAAA,QACH,GAAG,SAAUA,IAAG;AAEZ,cAAI,KAAK;AACT,mBAAS,IAAI,GAAG,IAAIA,GAAE,QAAQ,EAAE;AAC5B,iBAAK,KAAM,KAAK,MAAOA,GAAE,CAAC,CAAC,IAAK,OAAO;AAC3C,cAAI;AAAA,QACR;AAAA,QACA,GAAG,WAAY;AAAE,iBAAO,CAAC;AAAA,QAAG;AAAA,MAChC;AAAA,IACJ;AAEA,IAAI,QAAQ,WAAY;AACpB,UAAI,IAAI,GAAG,IAAI;AACf,aAAO;AAAA,QACH,GAAG,SAAUA,IAAG;AAEZ,cAAI,IAAI,GAAG,IAAI;AACf,cAAI,IAAIA,GAAE,SAAS;AACnB,mBAAS,IAAI,GAAG,KAAK,KAAI;AACrB,gBAAI,IAAI,KAAK,IAAI,IAAI,MAAM,CAAC;AAC5B,mBAAO,IAAI,GAAG,EAAE;AACZ,mBAAK,KAAKA,GAAE,CAAC;AACjB,iBAAK,IAAI,SAAS,MAAM,KAAK,KAAK,KAAK,IAAI,SAAS,MAAM,KAAK;AAAA,UACnE;AACA,cAAI,GAAG,IAAI;AAAA,QACf;AAAA,QACA,GAAG,WAAY;AACX,eAAK,OAAO,KAAK;AACjB,kBAAQ,IAAI,QAAQ,MAAM,IAAI,UAAW,KAAK,IAAI,QAAQ,IAAK,KAAK;AAAA,QACxE;AAAA,MACJ;AAAA,IACJ;AAGA,IAAI,OAAO,SAAU,KAAK,KAAK,KAAK,MAAM,IAAI;AAC1C,UAAI,CAAC,IAAI;AACL,aAAK,EAAE,GAAG,EAAE;AACZ,YAAI,IAAI,YAAY;AAChB,cAAI,OAAO,IAAI,WAAW,SAAS,MAAM;AACzC,cAAI,SAAS,IAAI,GAAG,KAAK,SAAS,IAAI,MAAM;AAC5C,iBAAO,IAAI,IAAI;AACf,iBAAO,IAAI,KAAK,KAAK,MAAM;AAC3B,gBAAM;AACN,aAAG,IAAI,KAAK;AAAA,QAChB;AAAA,MACJ;AACA,aAAO,KAAK,KAAK,IAAI,SAAS,OAAO,IAAI,IAAI,OAAO,IAAI,OAAO,OAAQ,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,GAAG,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI,MAAM,CAAC,CAAC,IAAI,GAAG,IAAI,KAAO,KAAK,IAAI,KAAM,KAAK,MAAM,EAAE;AAAA,IACxL;AAEA,IAAI,MAAM,SAAU,GAAG,GAAG;AACtB,UAAI,IAAI,CAAC;AACT,eAAS,KAAK;AACV,UAAE,CAAC,IAAI,EAAE,CAAC;AACd,eAAS,KAAK;AACV,UAAE,CAAC,IAAI,EAAE,CAAC;AACd,aAAO;AAAA,IACX;AAQA,IAAI,OAAO,SAAU,IAAI,OAAOM,KAAI;AAChC,UAAI,KAAK,GAAG;AACZ,UAAI,KAAK,GAAG,SAAS;AACrB,UAAI,KAAK,GAAG,MAAM,GAAG,QAAQ,GAAG,IAAI,GAAG,GAAG,YAAY,GAAG,CAAC,EAAE,QAAQ,QAAQ,EAAE,EAAE,MAAM,GAAG;AACzF,eAAS,IAAI,GAAG,IAAI,GAAG,QAAQ,EAAE,GAAG;AAChC,YAAIR,KAAI,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC;AACvB,YAAI,OAAOA,MAAK,YAAY;AACxB,mBAAS,MAAM,IAAI;AACnB,cAAI,OAAOA,GAAE,SAAS;AACtB,cAAIA,GAAE,WAAW;AAEb,gBAAI,KAAK,QAAQ,eAAe,KAAK,IAAI;AACrC,kBAAI,QAAQ,KAAK,QAAQ,KAAK,CAAC,IAAI;AACnC,uBAAS,KAAK,MAAM,OAAO,KAAK,QAAQ,KAAK,KAAK,CAAC;AAAA,YACvD,OACK;AACD,uBAAS;AACT,uBAAS,KAAKA,GAAE;AACZ,yBAAS,MAAM,IAAI,gBAAgB,IAAI,MAAMA,GAAE,UAAU,CAAC,EAAE,SAAS;AAAA,YAC7E;AAAA,UACJ;AAEI,qBAAS;AAAA,QACjB;AAEI,UAAAQ,IAAG,CAAC,IAAIR;AAAA,MAChB;AACA,aAAO;AAAA,IACX;AACA,IAAI,KAAK,CAAC;AAEV,IAAI,OAAO,SAAUA,IAAG;AACpB,UAAI,KAAK,CAAC;AACV,eAAS,KAAKA,IAAG;AACb,YAAIA,GAAE,CAAC,EAAE,QAAQ;AACb,aAAG,MAAMA,GAAE,CAAC,IAAI,IAAIA,GAAE,CAAC,EAAE,YAAYA,GAAE,CAAC,CAAC,GAAG,MAAM;AAAA,QACtD;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAEA,IAAI,OAAO,SAAU,KAAK,MAAM,IAAI,IAAI;AACpC,UAAI,CAAC,GAAG,EAAE,GAAG;AACT,YAAI,QAAQ,IAAI,OAAO,CAAC,GAAG,IAAI,IAAI,SAAS;AAC5C,iBAAS,IAAI,GAAG,IAAI,GAAG,EAAE;AACrB,kBAAQ,KAAK,IAAI,CAAC,GAAG,OAAO,IAAI;AACpC,WAAG,EAAE,IAAI,EAAE,GAAG,KAAK,IAAI,CAAC,GAAG,OAAO,IAAI,GAAG,GAAG,KAAK;AAAA,MACrD;AACA,UAAIQ,MAAK,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC;AACzB,aAAO,GAAG,GAAG,EAAE,EAAE,IAAI,4EAA4E,KAAK,SAAS,IAAI,KAAK,IAAIA,KAAI,KAAKA,GAAE,GAAG,EAAE;AAAA,IAChJ;AAEA,IAAI,SAAS,WAAY;AAAE,aAAO,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,MAAM,IAAI,IAAI,MAAM,MAAM,KAAK,IAAI,MAAM,KAAK,MAAM,QAAQ,MAAM,KAAK,KAAK,OAAO,aAAa,KAAK,IAAI;AAAA,IAAG;AACzK,IAAI,QAAQ,WAAY;AAAE,aAAO,CAAC,IAAI,KAAK,KAAK,MAAM,MAAM,MAAM,OAAO,OAAO,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,MAAM,OAAO,SAAS,OAAO,IAAI,IAAI,MAAM,OAAO,MAAM,MAAM,KAAK,MAAM,MAAM,aAAa,GAAG;AAAA,IAAG;AAIpN,IAAI,OAAO,WAAY;AAAE,aAAO,CAAC,KAAK,GAAG;AAAA,IAAG;AAI5C,IAAI,OAAO,WAAY;AAAE,aAAO,CAAC,GAAG;AAAA,IAAG;AAEvC,IAAI,MAAM,SAAU,KAAK;AAAE,aAAO,YAAY,KAAK,CAAC,IAAI,MAAM,CAAC;AAAA,IAAG;AAElE,IAAI,OAAO,SAAU,GAAG;AAAE,aAAO,KAAK;AAAA,QAClC,KAAK,EAAE,QAAQ,IAAI,GAAG,EAAE,IAAI;AAAA,QAC5B,YAAY,EAAE;AAAA,MAClB;AAAA,IAAG;AAWH,IAAI,QAAQ,SAAU,MAAM;AACxB,WAAK,SAAS,SAAU,KAAK,OAAO;AAAE,eAAO,YAAY,CAAC,KAAK,KAAK,GAAG,CAAC,IAAI,MAAM,CAAC;AAAA,MAAG;AACtF,aAAO,SAAU,IAAI;AACjB,YAAI,GAAG,KAAK,QAAQ;AAChB,eAAK,KAAK,GAAG,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC;AAChC,sBAAY,CAAC,GAAG,KAAK,CAAC,EAAE,MAAM,CAAC;AAAA,QACnC;AAEI,eAAK,MAAM;AAAA,MACnB;AAAA,IACJ;AAEA,IAAI,WAAW,SAAU,KAAK,MAAM,MAAM,MAAM,IAAI,OAAO,KAAK;AAC5D,UAAI;AACJ,UAAI,IAAI,KAAK,KAAK,MAAM,IAAI,SAAUL,MAAK,KAAK;AAC5C,YAAIA;AACA,YAAE,UAAU,GAAG,KAAK,OAAO,KAAK,MAAMA,IAAG;AAAA,iBACpC,CAAC,MAAM,QAAQ,GAAG;AACvB,cAAI,GAAG;AAAA,iBACF,IAAI,UAAU,GAAG;AACtB,eAAK,cAAc,IAAI,CAAC;AACxB,cAAI,KAAK;AACL,iBAAK,QAAQ,IAAI,CAAC,CAAC;AAAA,QAC3B,OACK;AACD,cAAI,IAAI,CAAC;AACL,cAAE,UAAU;AAChB,eAAK,OAAO,KAAK,MAAMA,MAAK,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AAAA,QAC9C;AAAA,MACJ,CAAC;AACD,QAAE,YAAY,IAAI;AAClB,WAAK,aAAa;AAClB,WAAK,OAAO,SAAUD,IAAGO,IAAG;AACxB,YAAI,CAAC,KAAK;AACN,cAAI,CAAC;AACT,YAAI;AACA,eAAK,OAAO,IAAI,GAAG,GAAG,CAAC,GAAG,MAAM,CAAC,CAACA,EAAC;AACvC,aAAK,cAAcP,GAAE;AACrB,UAAE,YAAY,CAACA,IAAG,IAAIO,EAAC,GAAG,CAACP,GAAE,MAAM,CAAC;AAAA,MACxC;AACA,WAAK,YAAY,WAAY;AAAE,UAAE,UAAU;AAAA,MAAG;AAC9C,UAAI,OAAO;AACP,aAAK,QAAQ,WAAY;AAAE,YAAE,YAAY,CAAC,CAAC;AAAA,QAAG;AAAA,MAClD;AAAA,IACJ;AAEA,IAAI,KAAK,SAAUA,IAAG,GAAG;AAAE,aAAOA,GAAE,CAAC,IAAKA,GAAE,IAAI,CAAC,KAAK;AAAA,IAAI;AAE1D,IAAI,KAAK,SAAUA,IAAG,GAAG;AAAE,cAAQA,GAAE,CAAC,IAAKA,GAAE,IAAI,CAAC,KAAK,IAAMA,GAAE,IAAI,CAAC,KAAK,KAAOA,GAAE,IAAI,CAAC,KAAK,QAAS;AAAA,IAAG;AACxG,IAAI,KAAK,SAAUA,IAAG,GAAG;AAAE,aAAO,GAAGA,IAAG,CAAC,IAAK,GAAGA,IAAG,IAAI,CAAC,IAAI;AAAA,IAAa;AAE1E,IAAI,SAAS,SAAUA,IAAG,GAAGF,IAAG;AAC5B,aAAOA,IAAG,EAAE;AACR,QAAAE,GAAE,CAAC,IAAIF,IAAGA,QAAO;AAAA,IACzB;AAEA,IAAI,MAAM,SAAU,GAAG,GAAG;AACtB,UAAI,KAAK,EAAE;AACX,QAAE,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,QAAQ,IAAI,IAAI,EAAE,SAAS,IAAI,IAAI,GAAG,EAAE,CAAC,IAAI;AACvF,UAAI,EAAE,SAAS;AACX,eAAO,GAAG,GAAG,KAAK,MAAM,IAAI,KAAK,EAAE,SAAS,KAAK,IAAI,CAAC,IAAI,GAAI,CAAC;AACnE,UAAI,IAAI;AACJ,UAAE,CAAC,IAAI;AACP,iBAAS,IAAI,GAAG,KAAK,GAAG,QAAQ,EAAE;AAC9B,YAAE,IAAI,EAAE,IAAI,GAAG,WAAW,CAAC;AAAA,MACnC;AAAA,IACJ;AAGA,IAAI,MAAM,SAAUE,IAAG;AACnB,UAAIA,GAAE,CAAC,KAAK,MAAMA,GAAE,CAAC,KAAK,OAAOA,GAAE,CAAC,KAAK;AACrC,YAAI,GAAG,mBAAmB;AAC9B,UAAI,MAAMA,GAAE,CAAC;AACb,UAAI,KAAK;AACT,UAAI,MAAM;AACN,eAAOA,GAAE,EAAE,IAAIA,GAAE,EAAE,KAAK,KAAK;AACjC,eAAS,MAAM,OAAO,IAAI,MAAM,OAAO,IAAI,IAAI,KAAK,GAAG,MAAM,CAACA,GAAE,IAAI;AAChE;AACJ,aAAO,MAAM,MAAM;AAAA,IACvB;AAEA,IAAI,MAAM,SAAUA,IAAG;AACnB,UAAI,IAAIA,GAAE;AACV,cAAQA,GAAE,IAAI,CAAC,IAAIA,GAAE,IAAI,CAAC,KAAK,IAAIA,GAAE,IAAI,CAAC,KAAK,KAAKA,GAAE,IAAI,CAAC,KAAK,QAAQ;AAAA,IAC5E;AAEA,IAAI,OAAO,SAAU,GAAG;AAAE,aAAO,MAAM,EAAE,WAAW,EAAE,SAAS,SAAS,IAAI;AAAA,IAAI;AAEhF,IAAI,MAAM,SAAU,GAAG,GAAG;AACtB,UAAI,KAAK,EAAE,OAAOQ,MAAK,MAAM,IAAI,IAAI,KAAK,IAAI,IAAI,MAAM,IAAI,IAAI;AAChE,QAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAKA,OAAM,KAAM,EAAE,cAAc;AAChD,QAAE,CAAC,KAAK,MAAO,EAAE,CAAC,KAAK,IAAK,EAAE,CAAC,KAAK;AACpC,UAAI,EAAE,YAAY;AACd,YAAI,IAAI,MAAM;AACd,UAAE,EAAE,EAAE,UAAU;AAChB,eAAO,GAAG,GAAG,EAAE,EAAE,CAAC;AAAA,MACtB;AAAA,IACJ;AAEA,IAAI,MAAM,SAAUR,IAAG,MAAM;AACzB,WAAKA,GAAE,CAAC,IAAI,OAAO,KAAMA,GAAE,CAAC,KAAK,IAAK,MAAOA,GAAE,CAAC,KAAK,IAAIA,GAAE,CAAC,KAAK;AAC7D,YAAI,GAAG,mBAAmB;AAC9B,WAAKA,GAAE,CAAC,KAAK,IAAI,MAAM,CAAC,CAAC;AACrB,YAAI,GAAG,yBAAyBA,GAAE,CAAC,IAAI,KAAK,SAAS,gBAAgB,aAAa;AACtF,cAAQA,GAAE,CAAC,KAAK,IAAI,KAAK;AAAA,IAC7B;AAUA,IAAI,UAAyB,WAAY;AACrC,eAASS,SAAQ,MAAM,IAAI;AACvB,YAAI,OAAO,QAAQ;AACf,eAAK,MAAM,OAAO,CAAC;AACvB,aAAK,SAAS;AACd,aAAK,IAAI,QAAQ,CAAC;AAClB,aAAK,IAAI,EAAE,GAAG,GAAG,GAAG,OAAO,GAAG,OAAO,GAAG,MAAM;AAG9C,aAAK,IAAI,IAAI,GAAG,KAAK;AACrB,YAAI,KAAK,EAAE,YAAY;AACnB,cAAI,OAAO,KAAK,EAAE,WAAW,SAAS,MAAM;AAC5C,eAAK,EAAE,IAAI,MAAM,QAAQ,KAAK,MAAM;AACpC,eAAK,EAAE,IAAI,QAAQ,KAAK;AAAA,QAC5B;AAAA,MACJ;AACA,MAAAA,SAAQ,UAAU,IAAI,SAAU,GAAGF,IAAG;AAClC,aAAK,OAAO,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,GAAGA,EAAC;AAAA,MAChD;AAMA,MAAAE,SAAQ,UAAU,OAAO,SAAU,OAAO,OAAO;AAC7C,YAAI,CAAC,KAAK;AACN,cAAI,CAAC;AACT,YAAI,KAAK,EAAE;AACP,cAAI,CAAC;AACT,YAAI,SAAS,MAAM,SAAS,KAAK,EAAE;AACnC,YAAI,SAAS,KAAK,EAAE,QAAQ;AACxB,cAAI,SAAS,IAAI,KAAK,EAAE,SAAS,OAAO;AACpC,gBAAI,SAAS,IAAI,GAAG,SAAS,MAAM;AACnC,mBAAO,IAAI,KAAK,EAAE,SAAS,GAAG,KAAK,EAAE,CAAC,CAAC;AACvC,iBAAK,IAAI;AAAA,UACb;AACA,cAAI,QAAQ,KAAK,EAAE,SAAS,KAAK,EAAE;AACnC,eAAK,EAAE,IAAI,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK,EAAE,CAAC;AAC7C,eAAK,EAAE,IAAI,KAAK,EAAE;AAClB,eAAK,EAAE,KAAK,GAAG,KAAK;AACpB,eAAK,EAAE,IAAI,KAAK,EAAE,SAAS,MAAM,CAAC;AAClC,eAAK,EAAE,IAAI,MAAM,SAAS,KAAK,GAAG,KAAK;AACvC,eAAK,EAAE,IAAI,MAAM,SAAS,QAAQ;AAClC,eAAK,EAAE,IAAI,OAAO,KAAK,EAAE,IAAI;AAAA,QACjC,OACK;AACD,eAAK,EAAE,IAAI,OAAO,KAAK,EAAE,CAAC;AAC1B,eAAK,EAAE,KAAK,MAAM;AAAA,QACtB;AACA,aAAK,EAAE,IAAI,QAAQ;AACnB,YAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,QAAQ,OAAO;AACrC,eAAK,EAAE,KAAK,GAAG,SAAS,KAAK;AAC7B,eAAK,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,EAAE,KAAK;AAAA,QACrC;AAAA,MACJ;AAKA,MAAAA,SAAQ,UAAU,QAAQ,WAAY;AAClC,YAAI,CAAC,KAAK;AACN,cAAI,CAAC;AACT,YAAI,KAAK,EAAE;AACP,cAAI,CAAC;AACT,aAAK,EAAE,KAAK,GAAG,KAAK;AACpB,aAAK,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,EAAE,KAAK;AAAA,MACrC;AACA,aAAOA;AAAA,IACX,EAAE;AAKF,IAAI,eAA8B,2BAAY;AAC1C,eAASC,cAAa,MAAM,IAAI;AAC5B,iBAAS;AAAA,UACL;AAAA,UACA,WAAY;AAAE,mBAAO,CAAC,OAAO,OAAO;AAAA,UAAG;AAAA,QAC3C,GAAG,MAAM,QAAQ,KAAK,MAAM,MAAM,EAAE,GAAG,SAAU,IAAI;AACjD,cAAI,OAAO,IAAI,QAAQ,GAAG,IAAI;AAC9B,sBAAY,MAAM,IAAI;AAAA,QAC1B,GAAG,GAAG,CAAC;AAAA,MACX;AACA,aAAOA;AAAA,IACX,EAAE;AAuBF,IAAI,UAAyB,WAAY;AACrC,eAASC,SAAQ,MAAM,IAAI;AAEvB,YAAI,OAAO,QAAQ;AACf,eAAK,MAAM,OAAO,CAAC;AACvB,aAAK,SAAS;AACd,YAAI,OAAO,QAAQ,KAAK,cAAc,KAAK,WAAW,SAAS,MAAM;AACrE,aAAK,IAAI,EAAE,GAAG,GAAG,GAAG,OAAO,KAAK,SAAS,EAAE;AAC3C,aAAK,IAAI,IAAI,GAAG,KAAK;AACrB,aAAK,IAAI,IAAI,GAAG,CAAC;AACjB,YAAI;AACA,eAAK,EAAE,IAAI,IAAI;AAAA,MACvB;AACA,MAAAA,SAAQ,UAAU,IAAI,SAAU,GAAG;AAC/B,YAAI,CAAC,KAAK;AACN,cAAI,CAAC;AACT,YAAI,KAAK;AACL,cAAI,CAAC;AACT,YAAI,CAAC,KAAK,EAAE;AACR,eAAK,IAAI;AAAA,iBACJ,EAAE,QAAQ;AACf,cAAI,IAAI,IAAI,GAAG,KAAK,EAAE,SAAS,EAAE,MAAM;AACvC,YAAE,IAAI,KAAK,CAAC,GAAG,EAAE,IAAI,GAAG,KAAK,EAAE,MAAM,GAAG,KAAK,IAAI;AAAA,QACrD;AAAA,MACJ;AACA,MAAAA,SAAQ,UAAU,IAAI,SAAU,OAAO;AACnC,aAAK,EAAE,IAAI,EAAE,KAAK,IAAI,SAAS;AAC/B,YAAI,MAAM,KAAK,EAAE;AACjB,YAAI,KAAK,MAAM,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;AACrC,aAAK,OAAO,IAAI,IAAI,KAAK,KAAK,EAAE,CAAC,GAAG,KAAK,CAAC;AAC1C,aAAK,IAAI,IAAI,IAAI,KAAK,EAAE,IAAI,KAAK,GAAG,KAAK,EAAE,IAAI,KAAK,EAAE;AACtD,aAAK,IAAI,IAAI,KAAK,GAAI,KAAK,EAAE,IAAI,IAAK,CAAC,GAAG,KAAK,EAAE,KAAK;AAAA,MAC1D;AAMA,MAAAA,SAAQ,UAAU,OAAO,SAAU,OAAO,OAAO;AAC7C,aAAK,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK;AAAA,MAC/B;AACA,aAAOA;AAAA,IACX,EAAE;AAKF,IAAI,eAA8B,2BAAY;AAC1C,eAASC,cAAa,MAAM,IAAI;AAC5B,iBAAS;AAAA,UACL;AAAA,UACA,WAAY;AAAE,mBAAO,CAAC,OAAO,OAAO;AAAA,UAAG;AAAA,QAC3C,GAAG,MAAM,QAAQ,KAAK,MAAM,MAAM,EAAE,GAAG,SAAU,IAAI;AACjD,cAAI,OAAO,IAAI,QAAQ,GAAG,IAAI;AAC9B,sBAAY,MAAM,IAAI;AAAA,QAC1B,GAAG,GAAG,CAAC;AAAA,MACX;AACA,aAAOA;AAAA,IACX,EAAE;AAwBF,IAAI,OAAsB,WAAY;AAClC,eAASC,MAAK,MAAM,IAAI;AACpB,aAAK,IAAI,IAAI;AACb,aAAK,IAAI;AACT,aAAK,IAAI;AACT,gBAAQ,KAAK,MAAM,MAAM,EAAE;AAAA,MAC/B;AAMA,MAAAA,MAAK,UAAU,OAAO,SAAU,OAAO,OAAO;AAC1C,aAAK,EAAE,EAAE,KAAK;AACd,aAAK,KAAK,MAAM;AAChB,gBAAQ,UAAU,KAAK,KAAK,MAAM,OAAO,KAAK;AAAA,MAClD;AACA,MAAAA,MAAK,UAAU,IAAI,SAAU,GAAGN,IAAG;AAC/B,YAAI,MAAM,KAAK,GAAG,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK,CAAC,GAAGA,MAAK,GAAG,KAAK,CAAC;AAChE,YAAI,KAAK;AACL,cAAI,KAAK,KAAK,CAAC,GAAG,KAAK,IAAI;AAC/B,YAAIA;AACA,iBAAO,KAAK,IAAI,SAAS,GAAG,KAAK,EAAE,EAAE,CAAC,GAAG,OAAO,KAAK,IAAI,SAAS,GAAG,KAAK,CAAC;AAC/E,aAAK,OAAO,KAAKA,EAAC;AAAA,MACtB;AAKA,MAAAM,MAAK,UAAU,QAAQ,WAAY;AAC/B,gBAAQ,UAAU,MAAM,KAAK,IAAI;AAAA,MACrC;AACA,aAAOA;AAAA,IACX,EAAE;AA+CF,IAAI,SAAwB,WAAY;AACpC,eAASC,QAAO,MAAM,IAAI;AACtB,aAAK,IAAI;AACT,aAAK,IAAI;AACT,gBAAQ,KAAK,MAAM,MAAM,EAAE;AAAA,MAC/B;AAMA,MAAAA,QAAO,UAAU,OAAO,SAAU,OAAO,OAAO;AAC5C,gBAAQ,UAAU,EAAE,KAAK,MAAM,KAAK;AACpC,aAAK,KAAK,MAAM;AAChB,YAAI,KAAK,GAAG;AACR,cAAIZ,KAAI,KAAK,EAAE,SAAS,KAAK,IAAI,CAAC;AAClC,cAAI,IAAIA,GAAE,SAAS,IAAI,IAAIA,EAAC,IAAI;AAChC,cAAI,IAAIA,GAAE,QAAQ;AACd,gBAAI,CAAC;AACD;AAAA,UACR,WACS,KAAK,IAAI,KAAK,KAAK,UAAU;AAClC,iBAAK,SAAS,KAAK,IAAIA,GAAE,MAAM;AAAA,UACnC;AACA,eAAK,IAAIA,GAAE,SAAS,CAAC,GAAG,KAAK,IAAI;AAAA,QACrC;AAGA,gBAAQ,UAAU,EAAE,KAAK,MAAM,KAAK;AAEpC,YAAI,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,OAAO;AACjC,eAAK,IAAI,KAAK,KAAK,EAAE,CAAC,IAAI;AAC1B,eAAK,IAAI,EAAE,GAAG,EAAE;AAChB,eAAK,IAAI,IAAI,GAAG,CAAC;AACjB,eAAK,KAAK,IAAI,GAAG,CAAC,GAAG,KAAK;AAAA,QAC9B;AAAA,MACJ;AACA,aAAOY;AAAA,IACX,EAAE;AAKF,IAAI,cAA6B,2BAAY;AACzC,eAASC,aAAY,MAAM,IAAI;AAC3B,YAAI,QAAQ;AACZ,iBAAS;AAAA,UACL;AAAA,UACA;AAAA,UACA,WAAY;AAAE,mBAAO,CAAC,OAAO,SAAS,MAAM;AAAA,UAAG;AAAA,QACnD,GAAG,MAAM,QAAQ,KAAK,MAAM,MAAM,EAAE,GAAG,SAAU,IAAI;AACjD,cAAI,OAAO,IAAI,OAAO,GAAG,IAAI;AAC7B,eAAK,WAAW,SAAU,QAAQ;AAAE,mBAAO,YAAY,MAAM;AAAA,UAAG;AAChE,sBAAY,MAAM,IAAI;AAAA,QAC1B,GAAG,GAAG,GAAG,SAAU,QAAQ;AAAE,iBAAO,MAAM,YAAY,MAAM,SAAS,MAAM;AAAA,QAAG,CAAC;AAAA,MACnF;AACA,aAAOA;AAAA,IACX,EAAE;AA4BF,IAAI,OAAsB,WAAY;AAClC,eAASC,MAAK,MAAM,IAAI;AACpB,aAAK,IAAI,MAAM;AACf,aAAK,IAAI;AACT,gBAAQ,KAAK,MAAM,MAAM,EAAE;AAAA,MAC/B;AAMA,MAAAA,MAAK,UAAU,OAAO,SAAU,OAAO,OAAO;AAC1C,aAAK,EAAE,EAAE,KAAK;AACd,gBAAQ,UAAU,KAAK,KAAK,MAAM,OAAO,KAAK;AAAA,MAClD;AACA,MAAAA,MAAK,UAAU,IAAI,SAAU,GAAGT,IAAG;AAC/B,YAAI,MAAM,KAAK,GAAG,KAAK,GAAG,KAAK,MAAM,KAAK,EAAE,aAAa,IAAI,IAAIA,MAAK,GAAG,KAAK,CAAC;AAC/E,YAAI,KAAK;AACL,cAAI,KAAK,KAAK,CAAC,GAAG,KAAK,IAAI;AAC/B,YAAIA;AACA,iBAAO,KAAK,IAAI,SAAS,GAAG,KAAK,EAAE,EAAE,CAAC;AAC1C,aAAK,OAAO,KAAKA,EAAC;AAAA,MACtB;AAKA,MAAAS,MAAK,UAAU,QAAQ,WAAY;AAC/B,gBAAQ,UAAU,MAAM,KAAK,IAAI;AAAA,MACrC;AACA,aAAOA;AAAA,IACX,EAAE;AA+CF,IAAI,SAAwB,WAAY;AACpC,eAASC,QAAO,MAAM,IAAI;AACtB,gBAAQ,KAAK,MAAM,MAAM,EAAE;AAC3B,aAAK,IAAI,QAAQ,KAAK,aAAa,IAAI;AAAA,MAC3C;AAMA,MAAAA,QAAO,UAAU,OAAO,SAAU,OAAO,OAAO;AAC5C,gBAAQ,UAAU,EAAE,KAAK,MAAM,KAAK;AACpC,YAAI,KAAK,GAAG;AACR,cAAI,KAAK,EAAE,SAAS,KAAK,CAAC;AACtB;AACJ,eAAK,IAAI,KAAK,EAAE,SAAS,IAAI,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC,GAAG,KAAK,IAAI;AAAA,QAChE;AACA,YAAI,OAAO;AACP,cAAI,KAAK,EAAE,SAAS;AAChB,gBAAI,GAAG,mBAAmB;AAC9B,eAAK,IAAI,KAAK,EAAE,SAAS,GAAG,EAAE;AAAA,QAClC;AAGA,gBAAQ,UAAU,EAAE,KAAK,MAAM,KAAK;AAAA,MACxC;AACA,aAAOA;AAAA,IACX,EAAE;AAKF,IAAI,cAA6B,2BAAY;AACzC,eAASC,aAAY,MAAM,IAAI;AAC3B,iBAAS;AAAA,UACL;AAAA,UACA;AAAA,UACA,WAAY;AAAE,mBAAO,CAAC,OAAO,SAAS,MAAM;AAAA,UAAG;AAAA,QACnD,GAAG,MAAM,QAAQ,KAAK,MAAM,MAAM,EAAE,GAAG,SAAU,IAAI;AACjD,cAAI,OAAO,IAAI,OAAO,GAAG,IAAI;AAC7B,sBAAY,MAAM,IAAI;AAAA,QAC1B,GAAG,IAAI,CAAC;AAAA,MACZ;AACA,aAAOA;AAAA,IACX,EAAE;AA4BF,IAAI,aAA4B,WAAY;AACxC,eAASC,YAAW,MAAM,IAAI;AAC1B,aAAK,IAAI,QAAQ,KAAK,MAAM,MAAM,EAAE,KAAK,CAAC;AAC1C,aAAK,IAAI;AACT,aAAK,IAAI;AACT,aAAK,IAAI;AAAA,MACb;AAGA,MAAAA,YAAW,UAAU,IAAI,WAAY;AACjC,YAAI,QAAQ;AACZ,aAAK,EAAE,SAAS,SAAU,KAAK,OAAO;AAClC,gBAAM,OAAO,KAAK,KAAK;AAAA,QAC3B;AAAA,MACJ;AAMA,MAAAA,YAAW,UAAU,OAAO,SAAU,OAAO,OAAO;AAChD,YAAI,CAAC,KAAK;AACN,cAAI,CAAC;AACT,YAAI,CAAC,KAAK,GAAG;AACT,cAAI,KAAK,KAAK,KAAK,EAAE,QAAQ;AACzB,gBAAI,IAAI,IAAI,GAAG,KAAK,EAAE,SAAS,MAAM,MAAM;AAC3C,cAAE,IAAI,KAAK,CAAC,GAAG,EAAE,IAAI,OAAO,KAAK,EAAE,MAAM;AAAA,UAC7C;AAEI,iBAAK,IAAI;AACb,cAAI,KAAK,EAAE,SAAS,GAAG;AACnB,iBAAK,IAAK,KAAK,EAAE,CAAC,KAAK,MAAM,KAAK,EAAE,CAAC,KAAK,OAAO,KAAK,EAAE,CAAC,KAAK,IACxD,IAAI,KAAK,EAAE,KAAK,CAAC,KACf,KAAK,EAAE,CAAC,IAAI,OAAO,KAAM,KAAK,EAAE,CAAC,KAAK,IAAK,MAAO,KAAK,EAAE,CAAC,KAAK,IAAI,KAAK,EAAE,CAAC,KAAK,KAC9E,IAAI,KAAK,EAAE,KAAK,CAAC,IACjB,IAAI,KAAK,EAAE,KAAK,CAAC;AAC3B,iBAAK,EAAE;AACP,iBAAK,EAAE,KAAK,KAAK,GAAG,KAAK;AACzB,iBAAK,IAAI;AAAA,UACb;AAAA,QACJ;AAEI,eAAK,EAAE,KAAK,OAAO,KAAK;AAAA,MAChC;AACA,aAAOA;AAAA,IACX,EAAE;AAKF,IAAI,kBAAiC,WAAY;AAC7C,eAASC,iBAAgB,MAAM,IAAI;AAC/B,mBAAW,KAAK,MAAM,MAAM,EAAE;AAC9B,aAAK,aAAa;AAClB,aAAK,IAAI;AACT,aAAK,IAAI;AACT,aAAK,IAAI;AAAA,MACb;AACA,MAAAA,iBAAgB,UAAU,IAAI,WAAY;AACtC,YAAI,QAAQ;AACZ,aAAK,EAAE,SAAS,SAAUnB,MAAK,KAAK,OAAO;AACvC,gBAAM,OAAOA,MAAK,KAAK,KAAK;AAAA,QAChC;AACA,aAAK,EAAE,UAAU,SAAU,MAAM;AAC7B,gBAAM,cAAc;AACpB,cAAI,MAAM;AACN,kBAAM,QAAQ,IAAI;AAAA,QAC1B;AAAA,MACJ;AAMA,MAAAmB,iBAAgB,UAAU,OAAO,SAAU,OAAO,OAAO;AACrD,aAAK,cAAc,MAAM;AACzB,mBAAW,UAAU,KAAK,KAAK,MAAM,OAAO,KAAK;AAAA,MACrD;AACA,aAAOA;AAAA,IACX,EAAE;AAyCF,IAAI,KAAK,OAAO,eAAe,eAA6B,IAAI,YAAY;AAE5E,IAAI,KAAK,OAAO,eAAe,eAA6B,IAAI,YAAY;AAE5E,IAAI,MAAM;AACV,QAAI;AACA,SAAG,OAAO,IAAI,EAAE,QAAQ,KAAK,CAAC;AAC9B,YAAM;AAAA,IACV,SACO,GAAG;AAAA,IAAE;AAEZ,IAAI,QAAQ,SAAUpB,IAAG;AACrB,eAAS,IAAI,IAAI,IAAI,OAAK;AACtB,YAAI,IAAIA,GAAE,GAAG;AACb,YAAI,MAAM,IAAI,QAAQ,IAAI,QAAQ,IAAI;AACtC,YAAI,IAAI,KAAKA,GAAE;AACX,iBAAO,EAAE,GAAG,GAAG,GAAG,IAAIA,IAAG,IAAI,CAAC,EAAE;AACpC,YAAI,CAAC;AACD,eAAK,OAAO,aAAa,CAAC;AAAA,iBACrB,MAAM,GAAG;AACd,gBAAM,IAAI,OAAO,MAAMA,GAAE,GAAG,IAAI,OAAO,MAAMA,GAAE,GAAG,IAAI,OAAO,IAAKA,GAAE,GAAG,IAAI,MAAO,OAC9E,KAAK,OAAO,aAAa,QAAS,KAAK,IAAK,QAAS,IAAI,IAAK;AAAA,QACtE,WACS,KAAK;AACV,eAAK,OAAO,cAAc,IAAI,OAAO,IAAKA,GAAE,GAAG,IAAI,EAAG;AAAA;AAEtD,eAAK,OAAO,cAAc,IAAI,OAAO,MAAMA,GAAE,GAAG,IAAI,OAAO,IAAKA,GAAE,GAAG,IAAI,EAAG;AAAA,MACpF;AAAA,IACJ;AAIA,IAAI,aAA4B,WAAY;AAKxC,eAASqB,YAAW,IAAI;AACpB,aAAK,SAAS;AACd,YAAI;AACA,eAAK,IAAI,IAAI,YAAY;AAAA;AAEzB,eAAK,IAAI;AAAA,MACjB;AAMA,MAAAA,YAAW,UAAU,OAAO,SAAU,OAAO,OAAO;AAChD,YAAI,CAAC,KAAK;AACN,cAAI,CAAC;AACT,gBAAQ,CAAC,CAAC;AACV,YAAI,KAAK,GAAG;AACR,eAAK,OAAO,KAAK,EAAE,OAAO,OAAO,EAAE,QAAQ,KAAK,CAAC,GAAG,KAAK;AACzD,cAAI,OAAO;AACP,gBAAI,KAAK,EAAE,OAAO,EAAE;AAChB,kBAAI,CAAC;AACT,iBAAK,IAAI;AAAA,UACb;AACA;AAAA,QACJ;AACA,YAAI,CAAC,KAAK;AACN,cAAI,CAAC;AACT,YAAI,MAAM,IAAI,GAAG,KAAK,EAAE,SAAS,MAAM,MAAM;AAC7C,YAAI,IAAI,KAAK,CAAC;AACd,YAAI,IAAI,OAAO,KAAK,EAAE,MAAM;AAC5B,YAAItB,MAAK,MAAM,GAAG,GAAG,IAAIA,IAAG,GAAG,IAAIA,IAAG;AACtC,YAAI,OAAO;AACP,cAAI,EAAE;AACF,gBAAI,CAAC;AACT,eAAK,IAAI;AAAA,QACb;AAEI,eAAK,IAAI;AACb,aAAK,OAAO,GAAG,KAAK;AAAA,MACxB;AACA,aAAOsB;AAAA,IACX,EAAE;AAKF,IAAI,aAA4B,WAAY;AAKxC,eAASC,YAAW,IAAI;AACpB,aAAK,SAAS;AAAA,MAClB;AAMA,MAAAA,YAAW,UAAU,OAAO,SAAU,OAAO,OAAO;AAChD,YAAI,CAAC,KAAK;AACN,cAAI,CAAC;AACT,YAAI,KAAK;AACL,cAAI,CAAC;AACT,aAAK,OAAO,QAAQ,KAAK,GAAG,KAAK,IAAI,SAAS,KAAK;AAAA,MACvD;AACA,aAAOA;AAAA,IACX,EAAE;AAmEF,IAAI,MAAM,SAAU,GAAG;AAAE,aAAO,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI;AAAA,IAAG;AAUzE,IAAI,OAAO,SAAUtB,IAAG,GAAG;AACvB,aAAO,GAAGA,IAAG,CAAC,KAAK,GAAG,KAAK,IAAI,GAAGA,IAAG,IAAI,CAAC;AACtC;AACJ,aAAO,CAAC,GAAGA,IAAG,IAAI,EAAE,GAAG,GAAGA,IAAG,IAAI,CAAC,GAAG,GAAGA,IAAG,IAAI,EAAE,CAAC;AAAA,IACtD;AAEA,IAAI,OAAO,SAAU,IAAI;AACrB,UAAI,KAAK;AACT,UAAI,IAAI;AACJ,iBAAS,KAAK,IAAI;AACd,cAAI,IAAI,GAAG,CAAC,EAAE;AACd,cAAI,IAAI;AACJ,gBAAI,CAAC;AACT,gBAAM,IAAI;AAAA,QACd;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAEA,IAAI,MAAM,SAAUA,IAAG,GAAGO,IAAG,IAAI,GAAG,GAAG,IAAI,IAAI;AAC3C,UAAIC,MAAK,GAAG,QAAQ,KAAKD,GAAE,OAAO,MAAM,MAAM,GAAG;AACjD,UAAI,MAAM,KAAK,EAAE;AACjB,aAAOP,IAAG,GAAG,MAAM,OAAO,WAAY,QAAS,GAAG,KAAK;AACvD,UAAI,MAAM;AACN,QAAAA,GAAE,GAAG,IAAI,IAAIA,GAAE,GAAG,IAAIO,GAAE;AAC5B,MAAAP,GAAE,CAAC,IAAI,IAAI,KAAK;AAChB,MAAAA,GAAE,GAAG,IAAKO,GAAE,QAAQ,KAAM,IAAI,KAAK,IAAIP,GAAE,GAAG,IAAI,KAAK;AACrD,MAAAA,GAAE,GAAG,IAAIO,GAAE,cAAc,KAAKP,GAAE,GAAG,IAAIO,GAAE,eAAe;AACxD,UAAI,KAAK,IAAI,KAAKA,GAAE,SAAS,OAAO,KAAK,IAAI,IAAIA,GAAE,KAAK,GAAG,IAAI,GAAG,YAAY,IAAI;AAClF,UAAI,IAAI,KAAK,IAAI;AACb,YAAI,EAAE;AACV,aAAOP,IAAG,GAAI,KAAK,KAAQ,GAAG,SAAS,IAAI,KAAM,KAAO,GAAG,QAAQ,KAAK,KAAO,GAAG,SAAS,KAAK,KAAO,GAAG,WAAW,KAAK,IAAM,GAAG,WAAW,KAAK,CAAE,GAAG,KAAK;AAC7J,UAAI,KAAK,IAAI;AACT,eAAOA,IAAG,GAAGO,GAAE,GAAG;AAClB,eAAOP,IAAG,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;AACnC,eAAOA,IAAG,IAAI,GAAGO,GAAE,IAAI;AAAA,MAC3B;AACA,aAAOP,IAAG,IAAI,IAAIQ,GAAE;AACpB,aAAOR,IAAG,IAAI,IAAI,GAAG,GAAG,KAAK;AAC7B,UAAI,MAAM,MAAM;AACZ,eAAOA,IAAG,GAAG,GAAG;AAChB,eAAOA,IAAG,IAAI,GAAGO,GAAE,KAAK;AACxB,eAAOP,IAAG,IAAI,IAAI,EAAE,GAAG,KAAK;AAAA,MAChC;AACA,MAAAA,GAAE,IAAI,IAAI,CAAC;AACX,WAAKQ;AACL,UAAI,KAAK;AACL,iBAAS,KAAK,IAAI;AACd,cAAI,MAAM,GAAG,CAAC,GAAG,IAAI,IAAI;AACzB,iBAAOR,IAAG,GAAG,CAAC,CAAC;AACf,iBAAOA,IAAG,IAAI,GAAG,CAAC;AAClB,UAAAA,GAAE,IAAI,KAAK,IAAI,CAAC,GAAG,KAAK,IAAI;AAAA,QAChC;AAAA,MACJ;AACA,UAAI;AACA,QAAAA,GAAE,IAAI,IAAI,CAAC,GAAG,KAAK;AACvB,aAAO;AAAA,IACX;AAEA,IAAI,MAAM,SAAU,GAAG,GAAG,GAAGA,IAAG,GAAG;AAC/B,aAAO,GAAG,GAAG,SAAS;AACtB,aAAO,GAAG,IAAI,GAAG,CAAC;AAClB,aAAO,GAAG,IAAI,IAAI,CAAC;AACnB,aAAO,GAAG,IAAI,IAAIA,EAAC;AACnB,aAAO,GAAG,IAAI,IAAI,CAAC;AAAA,IACvB;AAIA,IAAI,iBAAgC,WAAY;AAK5C,eAASuB,gBAAe,UAAU;AAC9B,aAAK,WAAW;AAChB,aAAK,IAAI,IAAI;AACb,aAAK,OAAO;AACZ,aAAK,cAAc;AAAA,MACvB;AASA,MAAAA,gBAAe,UAAU,UAAU,SAAU,OAAO,OAAO;AACvD,aAAK,OAAO,MAAM,OAAO,KAAK;AAAA,MAClC;AAQA,MAAAA,gBAAe,UAAU,OAAO,SAAU,OAAO,OAAO;AACpD,YAAI,CAAC,KAAK;AACN,cAAI,CAAC;AACT,aAAK,EAAE,EAAE,KAAK;AACd,aAAK,QAAQ,MAAM;AACnB,YAAI;AACA,eAAK,MAAM,KAAK,EAAE,EAAE;AACxB,aAAK,QAAQ,OAAO,SAAS,KAAK;AAAA,MACtC;AACA,aAAOA;AAAA,IACX,EAAE;AAOF,IAAI,aAA4B,WAAY;AAMxC,eAASC,YAAW,UAAU,MAAM;AAChC,YAAI,QAAQ;AACZ,YAAI,CAAC;AACD,iBAAO,CAAC;AACZ,uBAAe,KAAK,MAAM,QAAQ;AAClC,aAAK,IAAI,IAAI,QAAQ,MAAM,SAAU,KAAK,OAAO;AAC7C,gBAAM,OAAO,MAAM,KAAK,KAAK;AAAA,QACjC,CAAC;AACD,aAAK,cAAc;AACnB,aAAK,OAAO,IAAI,KAAK,KAAK;AAAA,MAC9B;AACA,MAAAA,YAAW,UAAU,UAAU,SAAU,OAAO,OAAO;AACnD,YAAI;AACA,eAAK,EAAE,KAAK,OAAO,KAAK;AAAA,QAC5B,SACO,GAAG;AACN,eAAK,OAAO,GAAG,MAAM,KAAK;AAAA,QAC9B;AAAA,MACJ;AAMA,MAAAA,YAAW,UAAU,OAAO,SAAU,OAAO,OAAO;AAChD,uBAAe,UAAU,KAAK,KAAK,MAAM,OAAO,KAAK;AAAA,MACzD;AACA,aAAOA;AAAA,IACX,EAAE;AAKF,IAAI,kBAAiC,WAAY;AAM7C,eAASC,iBAAgB,UAAU,MAAM;AACrC,YAAI,QAAQ;AACZ,YAAI,CAAC;AACD,iBAAO,CAAC;AACZ,uBAAe,KAAK,MAAM,QAAQ;AAClC,aAAK,IAAI,IAAI,aAAa,MAAM,SAAUxB,MAAK,KAAK,OAAO;AACvD,gBAAM,OAAOA,MAAK,KAAK,KAAK;AAAA,QAChC,CAAC;AACD,aAAK,cAAc;AACnB,aAAK,OAAO,IAAI,KAAK,KAAK;AAC1B,aAAK,YAAY,KAAK,EAAE;AAAA,MAC5B;AACA,MAAAwB,iBAAgB,UAAU,UAAU,SAAU,OAAO,OAAO;AACxD,aAAK,EAAE,KAAK,OAAO,KAAK;AAAA,MAC5B;AAMA,MAAAA,iBAAgB,UAAU,OAAO,SAAU,OAAO,OAAO;AACrD,uBAAe,UAAU,KAAK,KAAK,MAAM,OAAO,KAAK;AAAA,MACzD;AACA,aAAOA;AAAA,IACX,EAAE;AAMF,IAAI,MAAqB,WAAY;AAMjC,eAASC,KAAI,IAAI;AACb,aAAK,SAAS;AACd,aAAK,IAAI,CAAC;AACV,aAAK,IAAI;AAAA,MACb;AAKA,MAAAA,KAAI,UAAU,MAAM,SAAU,MAAM;AAChC,YAAI,QAAQ;AACZ,YAAI,CAAC,KAAK;AACN,cAAI,CAAC;AAET,YAAI,KAAK,IAAI;AACT,eAAK,OAAO,IAAI,KAAK,KAAK,IAAI,KAAK,GAAG,GAAG,CAAC,GAAG,MAAM,KAAK;AAAA,aACvD;AACD,cAAInB,KAAI,QAAQ,KAAK,QAAQ,GAAG,OAAOA,GAAE;AACzC,cAAI,MAAM,KAAK,SAAS,IAAI,OAAO,QAAQ,GAAG;AAC9C,cAAI,IAAI,QAAQ,KAAK,SAAS,UAAW,KAAM,IAAI,UAAU,EAAE;AAC/D,cAAI,OAAO,OAAO,KAAK,KAAK,KAAK,IAAI;AACrC,cAAI,OAAO;AACP,iBAAK,OAAO,IAAI,IAAI,GAAG,CAAC,GAAG,MAAM,KAAK;AAC1C,cAAI,SAAS,IAAI,GAAG,IAAI;AACxB,cAAI,QAAQ,GAAG,MAAMA,IAAG,GAAG,EAAE;AAC7B,cAAI,SAAS,CAAC,MAAM;AACpB,cAAI,SAAS,WAAY;AACrB,qBAAS,KAAK,GAAG,SAAS,QAAQ,KAAK,OAAO,QAAQ,MAAM;AACxD,kBAAI,MAAM,OAAO,EAAE;AACnB,oBAAM,OAAO,MAAM,KAAK,KAAK;AAAA,YACjC;AACA,qBAAS,CAAC;AAAA,UACd;AACA,cAAI,OAAO,KAAK;AAChB,eAAK,IAAI;AACT,cAAI,QAAQ,KAAK,EAAE;AACnB,cAAI,OAAO,IAAI,MAAM;AAAA,YACjB,GAAGA;AAAA,YACH;AAAA,YACA;AAAA,YACA,GAAG,WAAY;AACX,kBAAI,KAAK;AACL,qBAAK,UAAU;AAAA,YACvB;AAAA,YACA,GAAG,WAAY;AACX,qBAAO;AACP,kBAAI,MAAM;AACN,oBAAI,MAAM,MAAM,EAAE,QAAQ,CAAC;AAC3B,oBAAI;AACA,sBAAI,EAAE;AAAA;AAEN,wBAAM,IAAI;AAAA,cAClB;AACA,qBAAO;AAAA,YACX;AAAA,UACJ,CAAC;AACD,cAAI,OAAO;AACX,eAAK,SAAS,SAAUN,MAAK,KAAK,OAAO;AACrC,gBAAIA,MAAK;AACL,oBAAM,OAAOA,MAAK,KAAK,KAAK;AAC5B,oBAAM,UAAU;AAAA,YACpB,OACK;AACD,sBAAQ,IAAI;AACZ,qBAAO,KAAK,GAAG;AACf,kBAAI,OAAO;AACP,oBAAI,KAAK,IAAI,GAAG,EAAE;AAClB,uBAAO,IAAI,GAAG,SAAS;AACvB,uBAAO,IAAI,GAAG,KAAK,GAAG;AACtB,uBAAO,IAAI,GAAG,IAAI;AAClB,uBAAO,IAAI,IAAI,KAAK,IAAI;AACxB,uBAAO,KAAK,EAAE;AACd,qBAAK,IAAI,MAAM,KAAK,IAAI,OAAO,OAAO,IAAI,KAAK,MAAM,KAAK,KAAK,KAAK,OAAO,KAAK;AAChF,oBAAI;AACA,uBAAK,EAAE;AACX,uBAAO;AAAA,cACX,WACS;AACL,uBAAO;AAAA,YACf;AAAA,UACJ;AACA,eAAK,EAAE,KAAK,IAAI;AAAA,QACpB;AAAA,MACJ;AAMA,MAAAyB,KAAI,UAAU,MAAM,WAAY;AAC5B,YAAI,QAAQ;AACZ,YAAI,KAAK,IAAI,GAAG;AACZ,eAAK,OAAO,IAAI,KAAK,KAAK,IAAI,KAAK,GAAG,GAAG,CAAC,GAAG,MAAM,IAAI;AACvD;AAAA,QACJ;AACA,YAAI,KAAK;AACL,eAAK,EAAE;AAAA;AAEP,eAAK,EAAE,KAAK;AAAA,YACR,GAAG,WAAY;AACX,kBAAI,EAAE,MAAM,IAAI;AACZ;AACJ,oBAAM,EAAE,OAAO,IAAI,CAAC;AACpB,oBAAM,EAAE;AAAA,YACZ;AAAA,YACA,GAAG,WAAY;AAAA,YAAE;AAAA,UACrB,CAAC;AACL,aAAK,IAAI;AAAA,MACb;AACA,MAAAA,KAAI,UAAU,IAAI,WAAY;AAC1B,YAAI,KAAK,GAAG,IAAI,GAAG,KAAK;AACxB,iBAAS,KAAK,GAAG3B,MAAK,KAAK,GAAG,KAAKA,IAAG,QAAQ,MAAM;AAChD,cAAIQ,KAAIR,IAAG,EAAE;AACb,gBAAM,KAAKQ,GAAE,EAAE,SAAS,KAAKA,GAAE,KAAK,KAAKA,GAAE,IAAIA,GAAE,EAAE,SAAS;AAAA,QAChE;AACA,YAAI,MAAM,IAAI,GAAG,KAAK,EAAE;AACxB,iBAASH,MAAK,GAAG,KAAK,KAAK,GAAGA,MAAK,GAAG,QAAQA,OAAM;AAChD,cAAIG,KAAI,GAAGH,GAAE;AACb,cAAI,KAAK,IAAIG,IAAGA,GAAE,GAAGA,GAAE,GAAG,CAACA,GAAE,IAAI,GAAG,GAAGA,GAAE,CAAC;AAC1C,gBAAM,KAAKA,GAAE,EAAE,SAAS,KAAKA,GAAE,KAAK,KAAKA,GAAE,IAAIA,GAAE,EAAE,SAAS,IAAI,KAAKA,GAAE;AAAA,QAC3E;AACA,YAAI,KAAK,IAAI,KAAK,EAAE,QAAQ,IAAI,CAAC;AACjC,aAAK,OAAO,MAAM,KAAK,IAAI;AAC3B,aAAK,IAAI;AAAA,MACb;AAKA,MAAAmB,KAAI,UAAU,YAAY,WAAY;AAClC,iBAAS,KAAK,GAAG3B,MAAK,KAAK,GAAG,KAAKA,IAAG,QAAQ,MAAM;AAChD,cAAIQ,KAAIR,IAAG,EAAE;AACb,UAAAQ,GAAE,EAAE;AAAA,QACR;AACA,aAAK,IAAI;AAAA,MACb;AACA,aAAOmB;AAAA,IACX,EAAE;AAoJF,IAAI,mBAAkC,WAAY;AAC9C,eAASC,oBAAmB;AAAA,MAC5B;AACA,MAAAA,kBAAiB,UAAU,OAAO,SAAU,MAAM,OAAO;AACrD,aAAK,OAAO,MAAM,MAAM,KAAK;AAAA,MACjC;AACA,MAAAA,kBAAiB,cAAc;AAC/B,aAAOA;AAAA,IACX,EAAE;AAMF,IAAI,eAA8B,WAAY;AAI1C,eAASC,gBAAe;AACpB,YAAI,QAAQ;AACZ,aAAK,IAAI,IAAI,QAAQ,SAAU,KAAK,OAAO;AACvC,gBAAM,OAAO,MAAM,KAAK,KAAK;AAAA,QACjC,CAAC;AAAA,MACL;AACA,MAAAA,cAAa,UAAU,OAAO,SAAU,MAAM,OAAO;AACjD,YAAI;AACA,eAAK,EAAE,KAAK,MAAM,KAAK;AAAA,QAC3B,SACO,GAAG;AACN,eAAK,OAAO,GAAG,MAAM,KAAK;AAAA,QAC9B;AAAA,MACJ;AACA,MAAAA,cAAa,cAAc;AAC3B,aAAOA;AAAA,IACX,EAAE;AAKF,IAAI,oBAAmC,WAAY;AAI/C,eAASC,mBAAkB,GAAG,IAAI;AAC9B,YAAI,QAAQ;AACZ,YAAI,KAAK,MAAQ;AACb,eAAK,IAAI,IAAI,QAAQ,SAAU,KAAK,OAAO;AACvC,kBAAM,OAAO,MAAM,KAAK,KAAK;AAAA,UACjC,CAAC;AAAA,QACL,OACK;AACD,eAAK,IAAI,IAAI,aAAa,SAAU5B,MAAK,KAAK,OAAO;AACjD,kBAAM,OAAOA,MAAK,KAAK,KAAK;AAAA,UAChC,CAAC;AACD,eAAK,YAAY,KAAK,EAAE;AAAA,QAC5B;AAAA,MACJ;AACA,MAAA4B,mBAAkB,UAAU,OAAO,SAAU,MAAM,OAAO;AACtD,YAAI,KAAK,EAAE;AACP,iBAAO,IAAI,MAAM,CAAC;AACtB,aAAK,EAAE,KAAK,MAAM,KAAK;AAAA,MAC3B;AACA,MAAAA,mBAAkB,cAAc;AAChC,aAAOA;AAAA,IACX,EAAE;AAKF,IAAI,QAAuB,WAAY;AAKnC,eAASC,OAAM,IAAI;AACf,aAAK,SAAS;AACd,aAAK,IAAI,CAAC;AACV,aAAK,IAAI;AAAA,UACL,GAAG;AAAA,QACP;AACA,aAAK,IAAI;AAAA,MACb;AAMA,MAAAA,OAAM,UAAU,OAAO,SAAU,OAAO,OAAO;AAC3C,YAAI,QAAQ;AACZ,YAAI,CAAC,KAAK;AACN,cAAI,CAAC;AACT,YAAI,CAAC,KAAK;AACN,cAAI,CAAC;AACT,YAAI,KAAK,IAAI,GAAG;AACZ,cAAI,MAAM,KAAK,IAAI,KAAK,GAAG,MAAM,MAAM;AACvC,cAAI,QAAQ,MAAM,SAAS,GAAG,GAAG;AACjC,eAAK,KAAK;AACV,cAAI,KAAK;AACL,iBAAK,EAAE,KAAK,OAAO,CAAC,KAAK,CAAC;AAAA;AAE1B,iBAAK,EAAE,CAAC,EAAE,KAAK,KAAK;AACxB,kBAAQ,MAAM,SAAS,GAAG;AAC1B,cAAI,MAAM;AACN,mBAAO,KAAK,KAAK,OAAO,KAAK;AAAA,QACrC,OACK;AACD,cAAIvB,KAAI,GAAG,IAAI,GAAG,KAAK,QAAQ,MAAM;AACrC,cAAI,CAAC,KAAK,EAAE;AACR,kBAAM;AAAA,mBACD,CAAC,MAAM;AACZ,kBAAM,KAAK;AAAA,eACV;AACD,kBAAM,IAAI,GAAG,KAAK,EAAE,SAAS,MAAM,MAAM;AACzC,gBAAI,IAAI,KAAK,CAAC,GAAG,IAAI,IAAI,OAAO,KAAK,EAAE,MAAM;AAAA,UACjD;AACA,cAAI,IAAI,IAAI,QAAQ,KAAK,KAAK,GAAG,MAAM,MAAM,KAAK;AAClD,cAAI,UAAU,WAAY;AACtB,gBAAIR;AACJ,gBAAI,MAAM,GAAG,KAAK,CAAC;AACnB,gBAAI,OAAO,UAAW;AAClB,cAAAQ,KAAI,GAAG,KAAK;AACZ,qBAAO,IAAI;AACX,qBAAO,IAAI;AACX,kBAAI,KAAK,GAAG,KAAK,IAAI,CAAC,GAAG,QAAQ,GAAG,KAAK,IAAI,CAAC,GAAG,IAAI,KAAK,MAAM,KAAK,KAAK,GAAG,MAAM,GAAG,KAAK,IAAI,EAAE,GAAG,KAAK,GAAG,KAAK,IAAI,EAAE;AACvH,kBAAI,IAAI,IAAI,KAAK,MAAM,IAAI;AACvB,oBAAI,SAAS,CAAC;AACd,uBAAO,EAAE,QAAQ,MAAM;AACvB,gBAAAA,KAAI;AACJ,oBAAI,OAAO,GAAG,KAAK,IAAI,EAAE,GAAG,OAAO,GAAG,KAAK,IAAI,EAAE;AACjD,oBAAI,OAAO,UAAU,IAAI,SAAS,IAAI,IAAI,KAAK,KAAK,GAAG,GAAG,CAAC,CAAC;AAC5D,oBAAI,QAAQ,YAAY;AACpB,kBAAAR,MAAK,KAAK,CAAC,EAAE,IAAI,KAAK,KAAK,CAAC,GAAG,OAAOA,IAAG,CAAC,GAAG,OAAOA,IAAG,CAAC;AAAA,gBAC5D,WACS;AACL,yBAAO;AACX,qBAAK;AACL,uBAAO,IAAI;AACX,oBAAI;AACJ,oBAAI,SAAS;AAAA,kBACT,MAAM;AAAA,kBACN,aAAa;AAAA,kBACb,OAAO,WAAY;AACf,wBAAI,CAAC,OAAO;AACR,0BAAI,CAAC;AACT,wBAAI,CAAC;AACD,6BAAO,OAAO,MAAM,IAAI,IAAI;AAAA,yBAC3B;AACD,0BAAI,MAAM,MAAM,EAAE,KAAK;AACvB,0BAAI,CAAC;AACD,+BAAO,OAAO,IAAI,IAAI,8BAA8B,OAAO,CAAC,GAAG,MAAM,KAAK;AAC9E,4BAAM,OAAO,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,MAAM,MAAM,IAAI;AACzD,0BAAI,SAAS,SAAUE,MAAK8B,MAAKC,QAAO;AAAE,+BAAO,OAAO/B,MAAK8B,MAAKC,MAAK;AAAA,sBAAG;AAC1E,+BAAS,KAAK,GAAG,SAAS,QAAQ,KAAK,OAAO,QAAQ,MAAM;AACxD,4BAAID,OAAM,OAAO,EAAE;AACnB,4BAAI,KAAKA,MAAK,KAAK;AAAA,sBACvB;AACA,0BAAI,MAAM,EAAE,CAAC,KAAK,UAAU,MAAM;AAC9B,8BAAM,IAAI;AAAA;AAEV,4BAAI,KAAK,IAAI,IAAI;AAAA,oBACzB;AAAA,kBACJ;AAAA,kBACA,WAAW,WAAY;AACnB,wBAAI,OAAO,IAAI;AACX,0BAAI,UAAU;AAAA,kBACtB;AAAA,gBACJ;AACA,oBAAI,QAAQ;AACR,yBAAO,OAAO,MAAM,OAAO,eAAe;AAC9C,uBAAO,OAAO,MAAM;AAAA,cACxB;AACA,qBAAO;AAAA,YACX,WACS,IAAI;AACT,kBAAI,OAAO,WAAW;AAClB,qBAAK,KAAK,MAAM,MAAM,MAAM,IAAIxB,KAAI,GAAG,OAAO,IAAI;AAClD,uBAAO;AAAA,cACX,WACS,OAAO,UAAW;AACvB,qBAAK,KAAK,GAAGA,KAAI,GAAG,OAAO,IAAI;AAC/B,uBAAO;AAAA,cACX;AAAA,YACJ;AAAA,UACJ;AACA,cAAI,SAAS;AACb,iBAAO,IAAI,IAAI,GAAG,EAAE,GAAG;AACnB,gBAAI,UAAU,QAAQ;AACtB,gBAAI,YAAY;AACZ;AAAA,UACR;AACA,eAAK,IAAI;AACT,cAAI,KAAK,GAAG;AACR,gBAAI,MAAMA,KAAI,IAAI,SAAS,GAAG,KAAK,MAAM,MAAM,MAAM,MAAM,GAAG,KAAK,KAAK,EAAE,KAAK,aAAa,EAAE,IAAI,IAAI,SAAS,GAAG,CAAC;AACnH,gBAAI;AACA,kBAAI,KAAK,KAAK,CAAC,CAACA,EAAC;AAAA;AAEjB,mBAAK,EAAE,EAAEA,MAAK,EAAE,EAAE,KAAK,GAAG;AAAA,UAClC;AACA,cAAIA,KAAI;AACJ,mBAAO,KAAK,KAAK,IAAI,SAAS,CAAC,GAAG,KAAK;AAC3C,eAAK,IAAI,IAAI,SAAS,CAAC;AAAA,QAC3B;AACA,YAAI,OAAO;AACP,cAAI,KAAK;AACL,gBAAI,EAAE;AACV,eAAK,IAAI;AAAA,QACb;AAAA,MACJ;AAMA,MAAAuB,OAAM,UAAU,WAAW,SAAU,SAAS;AAC1C,aAAK,EAAE,QAAQ,WAAW,IAAI;AAAA,MAClC;AACA,aAAOA;AAAA,IACX,EAAE;AAAA;AAAA;;;AC58EF,SAAS,SAAUG,IAAG,GAAG,GAAI;AAE5B,QAAM,IAAI,EAAE,SAASA,KAAI;AAEzB,MAAK,KAAK,EAAG,CAAE,GAAI;AAElB,WAAO,IAAI;AAAA,EAEZ;AAEA,MAAK,KAAK,EAAGA,EAAE,GAAI;AAElB,WAAOA;AAAA,EAER;AAEA,MAAI,MAAMA;AACV,MAAI,OAAO;AACX,MAAI,MAAM,KAAK,OAAS,MAAM,QAAS,CAAE;AAEzC,SAAQ,IAAI,EAAG,GAAI,KAAK,KAAK,EAAG,MAAM,CAAE,GAAI;AAE3C,QAAK,IAAI,EAAG,GAAI,GAAI;AAEnB,aAAO;AAAA,IAER,OAAO;AAEN,YAAM;AAAA,IAEP;AAEA,UAAM,KAAK,OAAS,MAAM,QAAS,CAAE;AAAA,EAEtC;AAEA,SAAO;AAER;AAaA,SAAS,mBAAoB,MAAM,GAAGA,IAAG,GAAI;AAE5C,QAAM,IAAI,CAAC;AACX,QAAM,OAAO,CAAC;AACd,QAAM,QAAQ,CAAC;AACf,IAAG,CAAE,IAAI;AAET,WAAU,IAAI,GAAG,KAAKA,IAAG,EAAG,GAAI;AAE/B,SAAM,CAAE,IAAI,IAAI,EAAG,OAAO,IAAI,CAAE;AAChC,UAAO,CAAE,IAAI,EAAG,OAAO,CAAE,IAAI;AAE7B,QAAI,QAAQ;AAEZ,aAAU,IAAI,GAAG,IAAI,GAAG,EAAG,GAAI;AAE9B,YAAM,KAAK,MAAO,IAAI,CAAE;AACxB,YAAM,KAAK,KAAM,IAAI,CAAE;AACvB,YAAM,OAAO,EAAG,CAAE,KAAM,KAAK;AAC7B,QAAG,CAAE,IAAI,QAAQ,KAAK;AACtB,cAAQ,KAAK;AAAA,IAEd;AAEA,MAAG,CAAE,IAAI;AAAA,EAEV;AAEA,SAAO;AAER;AAaA,SAAS,iBAAkBA,IAAG,GAAG,GAAG,GAAI;AAEvC,QAAM,OAAO,SAAUA,IAAG,GAAG,CAAE;AAC/B,QAAM,IAAI,mBAAoB,MAAM,GAAGA,IAAG,CAAE;AAC5C,QAAM,IAAI,IAAI,QAAS,GAAG,GAAG,GAAG,CAAE;AAElC,WAAU,IAAI,GAAG,KAAKA,IAAG,EAAG,GAAI;AAE/B,UAAM,QAAQ,EAAG,OAAOA,KAAI,CAAE;AAC9B,UAAM,KAAK,EAAG,CAAE;AAChB,UAAM,MAAM,MAAM,IAAI;AACtB,MAAE,KAAK,MAAM,IAAI;AACjB,MAAE,KAAK,MAAM,IAAI;AACjB,MAAE,KAAK,MAAM,IAAI;AACjB,MAAE,KAAK,MAAM,IAAI;AAAA,EAElB;AAEA,SAAO;AAER;AAcA,SAAS,6BAA8B,MAAM,GAAGA,IAAG,GAAG,GAAI;AAEzD,QAAM,UAAU,CAAC;AACjB,WAAU,IAAI,GAAG,KAAKA,IAAG,EAAG;AAC3B,YAAS,CAAE,IAAI;AAEhB,QAAM,OAAO,CAAC;AAEd,WAAU,IAAI,GAAG,KAAK,GAAG,EAAG;AAC3B,SAAM,CAAE,IAAI,QAAQ,MAAO,CAAE;AAE9B,QAAM,MAAM,CAAC;AAEb,WAAU,IAAI,GAAG,KAAKA,IAAG,EAAG;AAC3B,QAAK,CAAE,IAAI,QAAQ,MAAO,CAAE;AAE7B,MAAK,CAAE,EAAG,CAAE,IAAI;AAEhB,QAAM,OAAO,QAAQ,MAAO,CAAE;AAC9B,QAAM,QAAQ,QAAQ,MAAO,CAAE;AAE/B,WAAU,IAAI,GAAG,KAAKA,IAAG,EAAG,GAAI;AAE/B,SAAM,CAAE,IAAI,IAAI,EAAG,OAAO,IAAI,CAAE;AAChC,UAAO,CAAE,IAAI,EAAG,OAAO,CAAE,IAAI;AAE7B,QAAI,QAAQ;AAEZ,aAAUC,KAAI,GAAGA,KAAI,GAAG,EAAGA,IAAI;AAE9B,YAAM,KAAK,MAAOA,KAAI,CAAE;AACxB,YAAM,KAAK,KAAM,IAAIA,EAAE;AACvB,UAAK,CAAE,EAAGA,EAAE,IAAI,KAAK;AAErB,YAAM,OAAO,IAAKA,EAAE,EAAG,IAAI,CAAE,IAAI,IAAK,CAAE,EAAGA,EAAE;AAC7C,UAAKA,EAAE,EAAG,CAAE,IAAI,QAAQ,KAAK;AAC7B,cAAQ,KAAK;AAAA,IAEd;AAEA,QAAK,CAAE,EAAG,CAAE,IAAI;AAAA,EAEjB;AAEA,WAAU,IAAI,GAAG,KAAKD,IAAG,EAAG,GAAI;AAE/B,SAAM,CAAE,EAAG,CAAE,IAAI,IAAK,CAAE,EAAGA,EAAE;AAAA,EAE9B;AAEA,WAAUC,KAAI,GAAGA,MAAKD,IAAG,EAAGC,IAAI;AAE/B,QAAI,KAAK;AACT,QAAI,KAAK;AAET,UAAM,IAAI,CAAC;AACX,aAAU,IAAI,GAAG,KAAKD,IAAG,EAAG,GAAI;AAE/B,QAAG,CAAE,IAAI,QAAQ,MAAO,CAAE;AAAA,IAE3B;AAEA,MAAG,CAAE,EAAG,CAAE,IAAI;AAEd,aAAU,IAAI,GAAG,KAAK,GAAG,EAAG,GAAI;AAE/B,UAAIE,KAAI;AACR,YAAM,KAAKD,KAAI;AACf,YAAM,KAAKD,KAAI;AAEf,UAAKC,MAAK,GAAI;AAEb,UAAG,EAAG,EAAG,CAAE,IAAI,EAAG,EAAG,EAAG,CAAE,IAAI,IAAK,KAAK,CAAE,EAAG,EAAG;AAChD,QAAAC,KAAI,EAAG,EAAG,EAAG,CAAE,IAAI,IAAK,EAAG,EAAG,EAAG;AAAA,MAElC;AAEA,YAAM,KAAO,MAAM,KAAQ,IAAI,CAAE;AACjC,YAAM,KAAOD,KAAI,KAAK,KAAO,IAAI,IAAID,KAAIC;AAEzC,eAAUE,KAAI,IAAIA,MAAK,IAAI,EAAGA,IAAI;AAEjC,UAAG,EAAG,EAAGA,EAAE,KAAM,EAAG,EAAG,EAAGA,EAAE,IAAI,EAAG,EAAG,EAAGA,KAAI,CAAE,KAAM,IAAK,KAAK,CAAE,EAAG,KAAKA,EAAE;AAC3E,QAAAD,MAAK,EAAG,EAAG,EAAGC,EAAE,IAAI,IAAK,KAAKA,EAAE,EAAG,EAAG;AAAA,MAEvC;AAEA,UAAKF,MAAK,IAAK;AAEd,UAAG,EAAG,EAAG,CAAE,IAAI,CAAE,EAAG,EAAG,EAAG,IAAI,CAAE,IAAI,IAAK,KAAK,CAAE,EAAGA,EAAE;AACrD,QAAAC,MAAK,EAAG,EAAG,EAAG,CAAE,IAAI,IAAKD,EAAE,EAAG,EAAG;AAAA,MAElC;AAEA,WAAM,CAAE,EAAGA,EAAE,IAAIC;AAEjB,YAAM,IAAI;AACV,WAAK;AACL,WAAK;AAAA,IAEN;AAAA,EAED;AAEA,MAAI,IAAIF;AAER,WAAU,IAAI,GAAG,KAAK,GAAG,EAAG,GAAI;AAE/B,aAAU,IAAI,GAAG,KAAKA,IAAG,EAAG,GAAI;AAE/B,WAAM,CAAE,EAAG,CAAE,KAAK;AAAA,IAEnB;AAEA,SAAKA,KAAI;AAAA,EAEV;AAEA,SAAO;AAER;AAcA,SAAS,uBAAwBA,IAAG,GAAG,GAAG,GAAG,IAAK;AAEjD,QAAM,KAAK,KAAKA,KAAI,KAAKA;AACzB,QAAM,KAAK,CAAC;AACZ,QAAM,OAAO,SAAUA,IAAG,GAAG,CAAE;AAC/B,QAAM,QAAQ,6BAA8B,MAAM,GAAGA,IAAG,IAAI,CAAE;AAC9D,QAAM,KAAK,CAAC;AAEZ,WAAU,IAAI,GAAG,IAAI,EAAE,QAAQ,EAAG,GAAI;AAErC,UAAM,QAAQ,EAAG,CAAE,EAAE,MAAM;AAC3B,UAAM,IAAI,MAAM;AAEhB,UAAM,KAAK;AACX,UAAM,KAAK;AACX,UAAM,KAAK;AAEX,OAAI,CAAE,IAAI;AAAA,EAEX;AAEA,WAAU,IAAI,GAAG,KAAK,IAAI,EAAG,GAAI;AAEhC,UAAM,QAAQ,GAAI,OAAOA,EAAE,EAAE,MAAM,EAAE,eAAgB,MAAO,CAAE,EAAG,CAAE,CAAE;AAErE,aAAU,IAAI,GAAG,KAAKA,IAAG,EAAG,GAAI;AAE/B,YAAM,IAAK,GAAI,OAAOA,KAAI,CAAE,EAAE,MAAM,EAAE,eAAgB,MAAO,CAAE,EAAG,CAAE,CAAE,CAAE;AAAA,IAEzE;AAEA,OAAI,CAAE,IAAI;AAAA,EAEX;AAEA,WAAU,IAAI,KAAK,GAAG,KAAK,KAAK,GAAG,EAAG,GAAI;AAEzC,OAAI,CAAE,IAAI,IAAI,QAAS,GAAG,GAAG,CAAE;AAAA,EAEhC;AAEA,SAAO;AAER;AAQA,SAAS,WAAY,GAAG,GAAI;AAE3B,MAAI,MAAM;AAEV,WAAU,IAAI,GAAG,KAAK,GAAG,EAAG,GAAI;AAE/B,WAAO;AAAA,EAER;AAEA,MAAI,QAAQ;AAEZ,WAAU,IAAI,GAAG,KAAK,GAAG,EAAG,GAAI;AAE/B,aAAS;AAAA,EAEV;AAEA,WAAU,IAAI,GAAG,KAAK,IAAI,GAAG,EAAG,GAAI;AAEnC,aAAS;AAAA,EAEV;AAEA,SAAO,MAAM;AAEd;AAUA,SAAS,6BAA8B,OAAQ;AAE9C,QAAM,KAAK,MAAM;AACjB,QAAM,QAAQ,CAAC;AACf,QAAM,QAAQ,CAAC;AAEf,WAAU,IAAI,GAAG,IAAI,IAAI,EAAG,GAAI;AAE/B,UAAM,QAAQ,MAAO,CAAE;AACvB,UAAO,CAAE,IAAI,IAAI,QAAS,MAAM,GAAG,MAAM,GAAG,MAAM,CAAE;AACpD,UAAO,CAAE,IAAI,MAAM;AAAA,EAEpB;AAEA,QAAM,KAAK,CAAC;AAEZ,WAAU,IAAI,GAAG,IAAI,IAAI,EAAG,GAAI;AAE/B,UAAMI,KAAI,MAAO,CAAE,EAAE,MAAM;AAE3B,aAAU,IAAI,GAAG,KAAK,GAAG,EAAG,GAAI;AAE/B,MAAAA,GAAE,IAAK,GAAI,IAAI,CAAE,EAAE,MAAM,EAAE,eAAgB,WAAY,GAAG,CAAE,IAAI,MAAO,CAAE,CAAE,CAAE;AAAA,IAE9E;AAEA,OAAI,CAAE,IAAIA,GAAE,aAAc,MAAO,CAAE,CAAE;AAAA,EAEtC;AAEA,SAAO;AAER;AAcA,SAAS,qBAAsBJ,IAAG,GAAG,GAAG,GAAG,IAAK;AAE/C,QAAM,QAAQ,uBAAwBA,IAAG,GAAG,GAAG,GAAG,EAAG;AACrD,SAAO,6BAA8B,KAAM;AAE5C;AAzaA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAgBM;AAhBN;AAAA;AAAA;AAKA;AAWA,IAAM,aAAN,cAAyB,MAAM;AAAA,MAE9B,YACC,QACA,OACA,eACA,WACA,SACC;AAED,cAAM;AAEN,aAAK,SAAS;AACd,aAAK,QAAQ;AACb,aAAK,gBAAgB,CAAC;AAEtB,aAAK,YAAY,aAAa;AAC9B,aAAK,UAAU,WAAa,KAAK,MAAM,SAAS;AAEhD,iBAAU,IAAI,GAAG,IAAI,cAAc,QAAQ,EAAG,GAAI;AAGjD,gBAAM,QAAQ,cAAe,CAAE;AAC/B,eAAK,cAAe,CAAE,IAAI,IAAI,QAAS,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,CAAE;AAAA,QAE3E;AAAA,MAED;AAAA,MAEA,SAAU,GAAG,iBAAiB,IAAI,QAAQ,GAAI;AAE7C,cAAM,QAAQ;AAEd,cAAM,IAAI,KAAK,MAAO,KAAK,SAAU,IAAI,KAAM,KAAK,MAAO,KAAK,OAAQ,IAAI,KAAK,MAAO,KAAK,SAAU;AAGvG,cAAM,SAAoB,iBAAkB,KAAK,QAAQ,KAAK,OAAO,KAAK,eAAe,CAAE;AAE3F,YAAK,OAAO,MAAM,GAAM;AAGvB,iBAAO,aAAc,OAAO,CAAE;AAAA,QAE/B;AAEA,eAAO,MAAM,IAAK,OAAO,GAAG,OAAO,GAAG,OAAO,CAAE;AAAA,MAEhD;AAAA,MAEA,WAAY,GAAG,iBAAiB,IAAI,QAAQ,GAAI;AAE/C,cAAM,UAAU;AAEhB,cAAM,IAAI,KAAK,MAAO,CAAE,IAAI,KAAM,KAAK,MAAO,KAAK,MAAM,SAAS,CAAE,IAAI,KAAK,MAAO,CAAE;AACtF,cAAM,OAAkB,qBAAsB,KAAK,QAAQ,KAAK,OAAO,KAAK,eAAe,GAAG,CAAE;AAChG,gBAAQ,KAAM,KAAM,CAAE,CAAE,EAAE,UAAU;AAEpC,eAAO;AAAA,MAER;AAAA,IAED;AAAA;AAAA;;;AC22HA,SAAS,kBAAmB,QAAS;AAEpC,QAAM,UAAU;AAEhB,SAAO,OAAO,cAAc,QAAQ,UAAU,YAAY,2BAA4B,QAAQ,GAAG,QAAQ,MAAO;AAEjH;AAEA,SAAS,iBAAkB,MAAO;AAEjC,QAAM,UAAU,CAAE,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,IAAK;AAEzH,MAAI,SAAS;AAEb,WAAS,KAAM,QAAS;AAEvB,UAAM,SAAS,KAAM,SAAS,CAAE;AAChC,WAAO,KAAK,MAAO,SAAS,MAAO;AACnC;AACA,WAAO;AAAA,EAER;AAEA,WAAU,IAAI,GAAG,IAAI,QAAQ,QAAQ,EAAG,GAAI;AAE3C,UAAM,MAAM,KAAM,CAAE;AACpB,QAAK,QAAQ,QAAS,CAAE,GAAI;AAE3B,aAAO;AAAA,IAER;AAAA,EAED;AAEA,SAAO;AAER;AAEA,SAAS,cAAe,MAAO;AAE9B,QAAM,gBAAgB;AACtB,QAAM,QAAQ,KAAK,MAAO,aAAc;AAExC,MAAK,OAAQ;AAEZ,UAAM,UAAU,SAAU,MAAO,CAAE,CAAE;AACrC,WAAO;AAAA,EAER;AAEA,QAAM,IAAI,MAAO,qEAAsE;AAExF;AAGA,SAAS,wBAAyB,MAAO;AAExC,SAAO,OAAO;AAEf;AAKA,SAAS,QAAS,oBAAoB,cAAc,aAAa,YAAa;AAE7E,MAAI;AAEJ,UAAS,WAAW,aAAc;AAAA,IAEjC,KAAK;AACJ,cAAQ;AACR;AAAA,IACD,KAAK;AACJ,cAAQ;AACR;AAAA,IACD,KAAK;AACJ,cAAQ;AACR;AAAA,IACD,KAAK;AACJ,cAAQ,WAAW,QAAS,CAAE;AAC9B;AAAA,IACD;AACC,cAAQ,KAAM,qDAAqD,WAAW,WAAY;AAAA,EAE5F;AAEA,MAAK,WAAW,kBAAkB,gBAAkB,SAAQ,WAAW,QAAS,KAAM;AAEtF,QAAM,OAAO,QAAQ,WAAW;AAChC,QAAM,KAAK,OAAO,WAAW;AAE7B,SAAO,MAAO,WAAW,WAAW,QAAQ,MAAM,EAAG;AAEtD;AAQA,SAAS,kBAAmB,eAAgB;AAE3C,QAAM,gBAAgB,IAAI,QAAQ;AAClC,QAAM,gBAAgB,IAAI,QAAQ;AAClC,QAAM,aAAa,IAAI,QAAQ;AAC/B,QAAM,iBAAiB,IAAI,QAAQ;AAEnC,QAAM,YAAY,IAAI,QAAQ;AAC9B,QAAM,iBAAiB,IAAI,QAAQ;AACnC,QAAM,kBAAkB,IAAI,QAAQ;AACpC,QAAM,mBAAmB,IAAI,QAAQ;AACrC,QAAM,kBAAkB,IAAI,QAAQ;AAEpC,QAAM,YAAY,IAAI,QAAQ;AAC9B,QAAM,YAAY,IAAI,QAAQ;AAC9B,QAAM,WAAW,IAAI,QAAQ;AAE7B,QAAM,cAAgB,cAAc,cAAgB,cAAc,cAAc;AAEhF,MAAK,cAAc,YAAc,eAAc,YAAa,QAAQ,UAAW,cAAc,WAAY,CAAE;AAE3G,MAAK,cAAc,aAAc;AAEhC,UAAM,QAAQ,cAAc,YAAY,IAAK,UAAU,QAAS;AAChE,UAAM,KAAM,cAAc,cAAc,MAAM,aAAc;AAC5D,kBAAc,sBAAuB,UAAU,UAAW,KAAM,CAAE;AAAA,EAEnE;AAEA,MAAK,cAAc,UAAW;AAE7B,UAAM,QAAQ,cAAc,SAAS,IAAK,UAAU,QAAS;AAC7D,UAAM,KAAM,cAAc,cAAc,MAAM,aAAc;AAC5D,eAAW,sBAAuB,UAAU,UAAW,KAAM,CAAE;AAAA,EAEhE;AAEA,MAAK,cAAc,cAAe;AAEjC,UAAM,QAAQ,cAAc,aAAa,IAAK,UAAU,QAAS;AACjE,UAAM,KAAM,cAAc,cAAc,MAAM,aAAc;AAC5D,mBAAe,sBAAuB,UAAU,UAAW,KAAM,CAAE;AACnE,mBAAe,OAAO;AAAA,EAEvB;AAEA,MAAK,cAAc,MAAQ,WAAU,MAAO,QAAQ,UAAW,cAAc,KAAM,CAAE;AAGrF,MAAK,cAAc,cAAgB,iBAAgB,YAAa,QAAQ,UAAW,cAAc,aAAc,CAAE;AACjH,MAAK,cAAc,aAAe,gBAAe,YAAa,QAAQ,UAAW,cAAc,YAAa,CAAE;AAC9G,MAAK,cAAc,eAAiB,kBAAiB,YAAa,QAAQ,UAAW,cAAc,cAAe,CAAE;AACpH,MAAK,cAAc,cAAgB,iBAAgB,YAAa,QAAQ,UAAW,cAAc,aAAc,CAAE;AAGjH,MAAK,cAAc,mBAAoB;AAEtC,cAAU,KAAM,cAAc,YAAa;AAC3C,cAAU,KAAM,cAAc,iBAAkB;AAAA,EAEjD;AAEA,QAAM,OAAO,cAAc,MAAM,EAAE,SAAU,UAAW,EAAE,SAAU,cAAe;AAEnF,QAAM,aAAa,IAAI,QAAQ;AAC/B,aAAW,gBAAiB,SAAU;AAGtC,QAAM,YAAY,IAAI,QAAQ;AAC9B,YAAU,aAAc,SAAU;AAElC,QAAM,cAAc,UAAU,MAAM,EAAE,OAAO,EAAE,SAAU,SAAU;AACnE,QAAM,aAAa,WAAW,MAAM,EAAE,OAAO,EAAE,SAAU,WAAY;AACrE,QAAM,OAAO;AAEb,QAAM,YAAY,IAAI,QAAQ;AAE9B,MAAK,gBAAgB,GAAI;AAExB,cAAU,KAAM,UAAW,EAAE,SAAU,IAAK,EAAE,SAAU,UAAW,EAAE,SAAU,IAAK;AAAA,EAErF,WAAY,gBAAgB,GAAI;AAE/B,cAAU,KAAM,UAAW,EAAE,SAAU,UAAW,EAAE,SAAU,IAAK,EAAE,SAAU,IAAK;AAAA,EAErF,OAAO;AAEN,UAAM,aAAa,IAAI,QAAQ,EAAE,MAAO,IAAI,QAAQ,EAAE,mBAAoB,SAAU,CAAE;AACtF,UAAM,iBAAiB,WAAW,MAAM,EAAE,OAAO;AACjD,UAAM,qBAAqB,WAAW,MAAM,EAAE,SAAU,cAAe;AAEvE,cAAU,KAAM,UAAW,EAAE,SAAU,IAAK,EAAE,SAAU,kBAAmB,EAAE,SAAU,IAAK;AAAA,EAE7F;AAEA,QAAM,sBAAsB,gBAAgB,MAAM,EAAE,OAAO;AAC3D,QAAM,qBAAqB,eAAe,MAAM,EAAE,OAAO;AAEzD,MAAI,aAAa,cAAc,MAAM,EAAE,SAAU,gBAAiB,EAAE,SAAU,eAAgB,EAAE,SAAU,aAAc,EAAE,SAAU,UAAW,EAAE,SAAU,cAAe,EAAE,SAAU,mBAAoB,EAAE,SAAU,eAAgB,EAAE,SAAU,cAAe,EAAE,SAAU,SAAU,EAAE,SAAU,kBAAmB;AAEtT,QAAM,mCAAmC,IAAI,QAAQ,EAAE,aAAc,UAAW;AAEhF,QAAM,qBAAqB,UAAU,MAAM,EAAE,SAAU,gCAAiC;AACxF,WAAS,aAAc,kBAAmB;AAE1C,eAAa,SAAS,MAAM,EAAE,SAAU,SAAU;AAGlD,aAAW,YAAa,UAAU,OAAO,CAAE;AAE3C,SAAO;AAER;AAIA,SAAS,cAAe,OAAQ;AAE/B,UAAQ,SAAS;AAEjB,QAAM,QAAQ;AAAA,IACb;AAAA;AAAA,IACA;AAAA;AAAA,IACA;AAAA;AAAA,IACA;AAAA;AAAA,IACA;AAAA;AAAA,IACA;AAAA;AAAA;AAAA,EAED;AAEA,MAAK,UAAU,GAAI;AAElB,YAAQ,KAAM,qGAAsG;AACpH,WAAO,MAAO,CAAE;AAAA,EAEjB;AAEA,SAAO,MAAO,KAAM;AAErB;AAIA,SAAS,iBAAkB,OAAQ;AAElC,QAAM,QAAQ,MAAM,MAAO,GAAI,EAAE,IAAK,SAAW,KAAM;AAEtD,WAAO,WAAY,GAAI;AAAA,EAExB,CAAE;AAEF,SAAO;AAER;AAEA,SAAS,2BAA4B,QAAQ,MAAM,IAAK;AAEvD,MAAK,SAAS,OAAY,QAAO;AACjC,MAAK,OAAO,OAAY,MAAK,OAAO;AAEpC,SAAO,IAAI,YAAY,EAAE,OAAQ,IAAI,WAAY,QAAQ,MAAM,EAAG,CAAE;AAErE;AAEA,SAAS,OAAQ,GAAG,GAAI;AAEvB,WAAU,IAAI,GAAG,IAAI,EAAE,QAAQ,IAAI,EAAE,QAAQ,IAAI,GAAG,KAAM,KAAO;AAEhE,MAAG,CAAE,IAAI,EAAG,CAAE;AAAA,EAEf;AAED;AAEA,SAAS,MAAO,GAAG,GAAG,MAAM,IAAK;AAEhC,WAAU,IAAI,MAAM,IAAI,GAAG,IAAI,IAAI,KAAM,KAAO;AAE/C,MAAG,CAAE,IAAI,EAAG,CAAE;AAAA,EAEf;AAEA,SAAO;AAER;AAttIA,IAgEI,SACA,aACA,YAEE,WAmFA,eA01CA,gBAu5BA,iBAgqBA,YA8UA,cAoUA,cAkPA,SAyEA,WAmCA,WACA;AAzhIN;AAAA;AAAA;AA6CA;AACA;AAsBA,IAAM,YAAN,cAAwB,OAAO;AAAA,MAE9B,YAAa,SAAU;AAEtB,cAAO,OAAQ;AAAA,MAEhB;AAAA,MAEA,KAAM,KAAK,QAAQ,YAAY,SAAU;AAExC,cAAM,QAAQ;AAEd,cAAM,OAAS,MAAM,SAAS,KAAO,YAAY,eAAgB,GAAI,IAAI,MAAM;AAE/E,cAAM,SAAS,IAAI,WAAY,KAAK,OAAQ;AAC5C,eAAO,QAAS,MAAM,IAAK;AAC3B,eAAO,gBAAiB,aAAc;AACtC,eAAO,iBAAkB,MAAM,aAAc;AAC7C,eAAO,mBAAoB,MAAM,eAAgB;AAEjD,eAAO,KAAM,KAAK,SAAW,QAAS;AAErC,cAAI;AAEH,mBAAQ,MAAM,MAAO,QAAQ,IAAK,CAAE;AAAA,UAErC,SAAU,GAAI;AAEb,gBAAK,SAAU;AAEd,sBAAS,CAAE;AAAA,YAEZ,OAAO;AAEN,sBAAQ,MAAO,CAAE;AAAA,YAElB;AAEA,kBAAM,QAAQ,UAAW,GAAI;AAAA,UAE9B;AAAA,QAED,GAAG,YAAY,OAAQ;AAAA,MAExB;AAAA,MAEA,MAAO,WAAW,MAAO;AAExB,YAAK,kBAAmB,SAAU,GAAI;AAErC,oBAAU,IAAI,aAAa,EAAE,MAAO,SAAU;AAAA,QAE/C,OAAO;AAEN,gBAAM,UAAU,2BAA4B,SAAU;AAEtD,cAAK,CAAE,iBAAkB,OAAQ,GAAI;AAEpC,kBAAM,IAAI,MAAO,kCAAmC;AAAA,UAErD;AAEA,cAAK,cAAe,OAAQ,IAAI,KAAO;AAEtC,kBAAM,IAAI,MAAO,8DAA8D,cAAe,OAAQ,CAAE;AAAA,UAEzG;AAEA,oBAAU,IAAI,WAAW,EAAE,MAAO,OAAQ;AAAA,QAE3C;AAIA,cAAM,gBAAgB,IAAI,cAAe,KAAK,OAAQ,EAAE,QAAS,KAAK,gBAAgB,IAAK,EAAE,eAAgB,KAAK,WAAY;AAE9H,eAAO,IAAI,cAAe,eAAe,KAAK,OAAQ,EAAE,MAAO,OAAQ;AAAA,MAExE;AAAA,IAED;AAGA,IAAM,gBAAN,MAAoB;AAAA,MAEnB,YAAa,eAAe,SAAU;AAErC,aAAK,gBAAgB;AACrB,aAAK,UAAU;AAAA,MAEhB;AAAA,MAEA,QAAQ;AAEP,sBAAc,KAAK,iBAAiB;AAEpC,cAAM,SAAS,KAAK,YAAY;AAChC,cAAM,WAAW,KAAK,cAAe,MAAO;AAC5C,cAAM,YAAY,KAAK,eAAgB,QAAS;AAChD,cAAM,YAAY,KAAK,eAAe;AACtC,cAAM,cAAc,IAAI,eAAe,EAAE,MAAO,SAAU;AAE1D,aAAK,WAAY,WAAW,aAAa,SAAU;AAEnD,eAAO;AAAA,MAER;AAAA;AAAA;AAAA,MAIA,mBAAmB;AAElB,cAAM,gBAAgB,oBAAI,IAAI;AAE9B,YAAK,iBAAiB,SAAU;AAE/B,gBAAM,iBAAiB,QAAQ,YAAY;AAE3C,yBAAe,QAAS,SAAW,eAAgB;AAElD,kBAAM,SAAS,cAAe,CAAE;AAChC,kBAAM,OAAO,cAAe,CAAE;AAC9B,kBAAM,eAAe,cAAe,CAAE;AAEtC,gBAAK,CAAE,cAAc,IAAK,MAAO,GAAI;AAEpC,4BAAc,IAAK,QAAQ;AAAA,gBAC1B,SAAS,CAAC;AAAA,gBACV,UAAU,CAAC;AAAA,cACZ,CAAE;AAAA,YAEH;AAEA,kBAAM,qBAAqB,EAAE,IAAI,MAAM,aAA2B;AAClE,0BAAc,IAAK,MAAO,EAAE,QAAQ,KAAM,kBAAmB;AAE7D,gBAAK,CAAE,cAAc,IAAK,IAAK,GAAI;AAElC,4BAAc,IAAK,MAAM;AAAA,gBACxB,SAAS,CAAC;AAAA,gBACV,UAAU,CAAC;AAAA,cACZ,CAAE;AAAA,YAEH;AAEA,kBAAM,oBAAoB,EAAE,IAAI,QAAQ,aAA2B;AACnE,0BAAc,IAAK,IAAK,EAAE,SAAS,KAAM,iBAAkB;AAAA,UAE5D,CAAE;AAAA,QAEH;AAEA,eAAO;AAAA,MAER;AAAA;AAAA;AAAA;AAAA,MAKA,cAAc;AAEb,cAAM,SAAS,CAAC;AAChB,cAAM,QAAQ,CAAC;AAEf,YAAK,WAAW,QAAQ,SAAU;AAEjC,gBAAM,aAAa,QAAQ,QAAQ;AAEnC,qBAAY,UAAU,YAAa;AAElC,kBAAM,YAAY,WAAY,MAAO;AAErC,kBAAM,KAAK,SAAU,MAAO;AAE5B,mBAAQ,EAAG,IAAI,UAAU,oBAAoB,UAAU;AAGvD,gBAAK,aAAa,WAAY;AAE7B,oBAAM,qBAAuB,UAAU,mBAAmB,eAAmB,UAAU,QAAQ,aAAa;AAC5G,oBAAM,gBAAkB,OAAO,UAAU,YAAY,YAAgB,UAAU,YAAY;AAE3F,kBAAK,sBAAsB,eAAgB;AAE1C,sBAAM,QAAQ,KAAK,WAAY,WAAY,MAAO,CAAE;AAEpD,sBAAO,UAAU,oBAAoB,UAAU,QAAS,IAAI;AAAA,cAE7D;AAAA,YAED;AAAA,UAED;AAAA,QAED;AAEA,mBAAY,MAAM,QAAS;AAE1B,gBAAM,WAAW,OAAQ,EAAG;AAE5B,cAAK,MAAO,QAAS,MAAM,OAAY,QAAQ,EAAG,IAAI,MAAO,QAAS;AAAA,cACjE,QAAQ,EAAG,IAAI,OAAQ,EAAG,EAAE,MAAO,IAAK,EAAE,IAAI;AAAA,QAEpD;AAEA,eAAO;AAAA,MAER;AAAA;AAAA,MAGA,WAAY,WAAY;AAEvB,cAAM,UAAU,UAAU;AAC1B,cAAM,WAAW,UAAU,oBAAoB,UAAU;AACzD,cAAM,YAAY,SAAS,MAAO,SAAS,YAAa,GAAI,IAAI,CAAE,EAAE,YAAY;AAEhF,YAAI;AAEJ,gBAAS,WAAY;AAAA,UAEpB,KAAK;AAEJ,mBAAO;AACP;AAAA,UAED,KAAK;AAAA,UACL,KAAK;AAEJ,mBAAO;AACP;AAAA,UAED,KAAK;AAEJ,mBAAO;AACP;AAAA,UAED,KAAK;AAEJ,mBAAO;AACP;AAAA,UAED,KAAK;AAEJ,gBAAK,KAAK,QAAQ,WAAY,MAAO,MAAM,MAAO;AAEjD,sBAAQ,KAAM,8CAA8C,QAAS;AAAA,YAEtE;AAEA,mBAAO;AACP;AAAA,UAED;AAEC,oBAAQ,KAAM,4BAA4B,YAAY,qBAAsB;AAC5E;AAAA,QAEF;AAEA,YAAK,OAAO,YAAY,UAAW;AAElC,iBAAO,UAAU,OAAO,aAAa;AAAA,QAEtC,OAAO;AAEN,gBAAM,QAAQ,IAAI,WAAY,OAAQ;AACtC,iBAAO,OAAO,IAAI,gBAAiB,IAAI,KAAM,CAAE,KAAM,GAAG,EAAE,KAAW,CAAE,CAAE;AAAA,QAE1E;AAAA,MAED;AAAA;AAAA;AAAA;AAAA,MAKA,cAAe,QAAS;AAEvB,cAAM,aAAa,oBAAI,IAAI;AAE3B,YAAK,aAAa,QAAQ,SAAU;AAEnC,gBAAM,eAAe,QAAQ,QAAQ;AACrC,qBAAY,UAAU,cAAe;AAEpC,kBAAM,UAAU,KAAK,aAAc,aAAc,MAAO,GAAG,MAAO;AAClE,uBAAW,IAAK,SAAU,MAAO,GAAG,OAAQ;AAAA,UAE7C;AAAA,QAED;AAEA,eAAO;AAAA,MAER;AAAA;AAAA,MAGA,aAAc,aAAa,QAAS;AAEnC,cAAM,UAAU,KAAK,YAAa,aAAa,MAAO;AAEtD,gBAAQ,KAAK,YAAY;AAEzB,gBAAQ,OAAO,YAAY;AAE3B,cAAM,YAAY,YAAY;AAC9B,cAAM,YAAY,YAAY;AAE9B,cAAM,SAAS,cAAc,SAAY,UAAU,QAAQ;AAC3D,cAAM,SAAS,cAAc,SAAY,UAAU,QAAQ;AAK3D,gBAAQ,QAAQ,WAAW,IAAI,iBAAiB;AAChD,gBAAQ,QAAQ,WAAW,IAAI,iBAAiB;AAEhD,YAAK,aAAa,aAAc;AAE/B,gBAAM,SAAS,YAAY,QAAQ;AAEnC,kBAAQ,OAAO,IAAI,OAAQ,CAAE;AAC7B,kBAAQ,OAAO,IAAI,OAAQ,CAAE;AAAA,QAE9B;AAEA,YAAK,iBAAiB,aAAc;AAEnC,gBAAM,SAAS,YAAY,YAAY;AAEvC,kBAAQ,OAAO,IAAI,OAAQ,CAAE;AAC7B,kBAAQ,OAAO,IAAI,OAAQ,CAAE;AAAA,QAE9B;AAEA,eAAO;AAAA,MAER;AAAA;AAAA,MAGA,YAAa,aAAa,QAAS;AAElC,YAAI;AAEJ,cAAM,cAAc,KAAK,cAAc;AAEvC,cAAM,WAAW,YAAY,IAAK,YAAY,EAAG,EAAE;AAEnD,YAAK,aAAa,UAAa,SAAS,SAAS,KAAK,OAAQ,SAAU,CAAE,EAAE,EAAG,MAAM,QAAY;AAEhG,qBAAW,OAAQ,SAAU,CAAE,EAAE,EAAG;AAEpC,cAAK,SAAS,QAAS,OAAQ,MAAM,KAAK,SAAS,QAAS,OAAQ,MAAM,GAAI;AAE7E,iBAAK,cAAc,QAAS,MAAU;AAAA,UAEvC;AAAA,QAED;AAEA,YAAI;AAEJ,cAAM,YAAY,YAAY,SAAS,MAAO,EAAI,EAAE,YAAY;AAEhE,YAAK,cAAc,OAAQ;AAE1B,gBAAM,SAAS,KAAK,QAAQ,WAAY,MAAO;AAE/C,cAAK,WAAW,MAAO;AAEtB,oBAAQ,KAAM,qEAAqE,YAAY,gBAAiB;AAChH,sBAAU,IAAI,QAAQ;AAAA,UAEvB,OAAO;AAEN,mBAAO,QAAS,KAAK,cAAc,IAAK;AACxC,sBAAU,OAAO,KAAM,QAAS;AAAA,UAEjC;AAAA,QAED,WAAY,cAAc,OAAQ;AAEjC,gBAAM,SAAS,KAAK,QAAQ,WAAY,MAAO;AAE/C,cAAK,WAAW,MAAO;AAEtB,oBAAQ,KAAM,qEAAqE,YAAY,gBAAiB;AAChH,sBAAU,IAAI,QAAQ;AAAA,UAEvB,OAAO;AAEN,mBAAO,QAAS,KAAK,cAAc,IAAK;AACxC,sBAAU,OAAO,KAAM,QAAS;AAAA,UAEjC;AAAA,QAED,WAAY,cAAc,OAAQ;AAEjC,kBAAQ,KAAM,+EAA+E,YAAY,gBAAiB;AAC1H,oBAAU,IAAI,QAAQ;AAAA,QAEvB,OAAO;AAEN,oBAAU,KAAK,cAAc,KAAM,QAAS;AAAA,QAE7C;AAEA,aAAK,cAAc,QAAS,WAAY;AAExC,eAAO;AAAA,MAER;AAAA;AAAA,MAGA,eAAgB,YAAa;AAE5B,cAAM,cAAc,oBAAI,IAAI;AAE5B,YAAK,cAAc,QAAQ,SAAU;AAEpC,gBAAM,gBAAgB,QAAQ,QAAQ;AAEtC,qBAAY,UAAU,eAAgB;AAErC,kBAAM,WAAW,KAAK,cAAe,cAAe,MAAO,GAAG,UAAW;AAEzE,gBAAK,aAAa,KAAO,aAAY,IAAK,SAAU,MAAO,GAAG,QAAS;AAAA,UAExE;AAAA,QAED;AAEA,eAAO;AAAA,MAER;AAAA;AAAA;AAAA;AAAA,MAKA,cAAe,cAAc,YAAa;AAEzC,cAAM,KAAK,aAAa;AACxB,cAAM,OAAO,aAAa;AAC1B,YAAI,OAAO,aAAa;AAGxB,YAAK,OAAO,SAAS,UAAW;AAE/B,iBAAO,KAAK;AAAA,QAEb;AAGA,YAAK,CAAE,YAAY,IAAK,EAAG,EAAI,QAAO;AAEtC,cAAM,aAAa,KAAK,gBAAiB,cAAc,YAAY,EAAG;AAEtE,YAAI;AAEJ,gBAAS,KAAK,YAAY,GAAI;AAAA,UAE7B,KAAK;AACJ,uBAAW,IAAI,kBAAkB;AACjC;AAAA,UACD,KAAK;AACJ,uBAAW,IAAI,oBAAoB;AACnC;AAAA,UACD;AACC,oBAAQ,KAAM,iFAAiF,IAAK;AACpG,uBAAW,IAAI,kBAAkB;AACjC;AAAA,QAEF;AAEA,iBAAS,UAAW,UAAW;AAC/B,iBAAS,OAAO;AAEhB,eAAO;AAAA,MAER;AAAA;AAAA;AAAA,MAIA,gBAAiB,cAAc,YAAY,IAAK;AAE/C,cAAM,aAAa,CAAC;AAEpB,YAAK,aAAa,YAAa;AAE9B,qBAAW,YAAY,aAAa,WAAW;AAAA,QAEhD;AAEA,YAAK,aAAa,SAAU;AAE3B,qBAAW,QAAQ,IAAI,MAAM,EAAE,UAAW,aAAa,QAAQ,KAAM,EAAE,oBAAoB;AAAA,QAE5F,WAAY,aAAa,iBAAkB,aAAa,aAAa,SAAS,WAAW,aAAa,aAAa,SAAS,aAAe;AAG1I,qBAAW,QAAQ,IAAI,MAAM,EAAE,UAAW,aAAa,aAAa,KAAM,EAAE,oBAAoB;AAAA,QAEjG;AAEA,YAAK,aAAa,oBAAqB;AAEtC,qBAAW,oBAAoB,aAAa,mBAAmB;AAAA,QAEhE;AAEA,YAAK,aAAa,UAAW;AAE5B,qBAAW,WAAW,IAAI,MAAM,EAAE,UAAW,aAAa,SAAS,KAAM,EAAE,oBAAoB;AAAA,QAEhG,WAAY,aAAa,kBAAmB,aAAa,cAAc,SAAS,WAAW,aAAa,cAAc,SAAS,aAAe;AAG7I,qBAAW,WAAW,IAAI,MAAM,EAAE,UAAW,aAAa,cAAc,KAAM,EAAE,oBAAoB;AAAA,QAErG;AAEA,YAAK,aAAa,gBAAiB;AAElC,qBAAW,oBAAoB,WAAY,aAAa,eAAe,KAAM;AAAA,QAE9E;AAEA,YAAK,aAAa,SAAU;AAE3B,qBAAW,UAAU,WAAY,aAAa,QAAQ,KAAM;AAAA,QAE7D;AAEA,YAAK,WAAW,UAAU,GAAM;AAE/B,qBAAW,cAAc;AAAA,QAE1B;AAEA,YAAK,aAAa,kBAAmB;AAEpC,qBAAW,eAAe,aAAa,iBAAiB;AAAA,QAEzD;AAEA,YAAK,aAAa,WAAY;AAE7B,qBAAW,YAAY,aAAa,UAAU;AAAA,QAE/C;AAEA,YAAK,aAAa,UAAW;AAE5B,qBAAW,WAAW,IAAI,MAAM,EAAE,UAAW,aAAa,SAAS,KAAM,EAAE,oBAAoB;AAAA,QAEhG,WAAY,aAAa,iBAAiB,aAAa,cAAc,SAAS,SAAU;AAGvF,qBAAW,WAAW,IAAI,MAAM,EAAE,UAAW,aAAa,cAAc,KAAM,EAAE,oBAAoB;AAAA,QAErG;AAEA,cAAM,QAAQ;AACd,oBAAY,IAAK,EAAG,EAAE,SAAS,QAAS,SAAW,OAAQ;AAE1D,gBAAM,OAAO,MAAM;AAEnB,kBAAS,MAAO;AAAA,YAEf,KAAK;AACJ,yBAAW,UAAU,MAAM,WAAY,YAAY,MAAM,EAAG;AAC5D;AAAA,YAED,KAAK;AACJ,yBAAW,QAAQ,MAAM,WAAY,YAAY,MAAM,EAAG;AAC1D;AAAA,YAED,KAAK;AAAA,YACL,KAAK;AACJ,yBAAW,MAAM,MAAM,WAAY,YAAY,MAAM,EAAG;AACxD,kBAAK,WAAW,QAAQ,QAAY;AAEnC,2BAAW,IAAI,aAAa;AAAA,cAE7B;AAEA;AAAA,YAED,KAAK;AACJ,yBAAW,kBAAkB,MAAM,WAAY,YAAY,MAAM,EAAG;AACpE;AAAA,YAED,KAAK;AACJ,yBAAW,cAAc,MAAM,WAAY,YAAY,MAAM,EAAG;AAChE,kBAAK,WAAW,gBAAgB,QAAY;AAE3C,2BAAW,YAAY,aAAa;AAAA,cAErC;AAEA;AAAA,YAED,KAAK;AAAA,YACL,KAAK;AACJ,yBAAW,YAAY,MAAM,WAAY,YAAY,MAAM,EAAG;AAC9D;AAAA,YAED,KAAK;AACJ,yBAAW,SAAS,MAAM,WAAY,YAAY,MAAM,EAAG;AAC3D,kBAAK,WAAW,WAAW,QAAY;AAEtC,2BAAW,OAAO,UAAU;AAC5B,2BAAW,OAAO,aAAa;AAAA,cAEhC;AAEA;AAAA,YAED,KAAK;AACJ,yBAAW,cAAc,MAAM,WAAY,YAAY,MAAM,EAAG;AAChE,kBAAK,WAAW,gBAAgB,QAAY;AAE3C,2BAAW,YAAY,aAAa;AAAA,cAErC;AAEA;AAAA,YAED,KAAK;AAAA,YACL,KAAK;AACJ,yBAAW,WAAW,MAAM,WAAY,YAAY,MAAM,EAAG;AAC7D,yBAAW,cAAc;AACzB;AAAA,YAED,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AAAA,YACL,KAAK;AAAA,YACL;AACC,sBAAQ,KAAM,2EAA2E,IAAK;AAC9F;AAAA,UAEF;AAAA,QAED,CAAE;AAEF,eAAO;AAAA,MAER;AAAA;AAAA,MAGA,WAAY,YAAY,IAAK;AAG5B,YAAK,oBAAoB,QAAQ,WAAW,MAAM,QAAQ,QAAQ,gBAAiB;AAElF,kBAAQ,KAAM,kGAAmG;AACjH,eAAK,YAAY,IAAK,EAAG,EAAE,SAAU,CAAE,EAAE;AAAA,QAE1C;AAEA,eAAO,WAAW,IAAK,EAAG;AAAA,MAE3B;AAAA;AAAA;AAAA;AAAA,MAKA,iBAAiB;AAEhB,cAAM,YAAY,CAAC;AACnB,cAAM,eAAe,CAAC;AAEtB,YAAK,cAAc,QAAQ,SAAU;AAEpC,gBAAM,gBAAgB,QAAQ,QAAQ;AAEtC,qBAAY,UAAU,eAAgB;AAErC,kBAAM,eAAe,cAAe,MAAO;AAE3C,kBAAM,gBAAgB,YAAY,IAAK,SAAU,MAAO,CAAE;AAE1D,gBAAK,aAAa,aAAa,QAAS;AAEvC,oBAAM,WAAW,KAAK,cAAe,eAAe,aAAc;AAClE,uBAAS,KAAK;AAEd,kBAAK,cAAc,QAAQ,SAAS,EAAI,SAAQ,KAAM,gFAAiF;AACvI,uBAAS,aAAa,cAAc,QAAS,CAAE,EAAE;AAEjD,wBAAW,MAAO,IAAI;AAAA,YAEvB,WAAY,aAAa,aAAa,cAAe;AAEpD,oBAAM,cAAc;AAAA,gBACnB,IAAI;AAAA,cACL;AAEA,0BAAY,aAAa,KAAK,kBAAmB,eAAe,aAAc;AAC9E,0BAAY,KAAK;AAEjB,kBAAK,cAAc,QAAQ,SAAS,EAAI,SAAQ,KAAM,oFAAqF;AAE3I,2BAAc,MAAO,IAAI;AAAA,YAE1B;AAAA,UAED;AAAA,QAED;AAEA,eAAO;AAAA,UAEN;AAAA,UACA;AAAA,QAED;AAAA,MAED;AAAA;AAAA;AAAA;AAAA,MAKA,cAAe,eAAe,eAAgB;AAE7C,cAAM,WAAW,CAAC;AAElB,sBAAc,SAAS,QAAS,SAAW,OAAQ;AAElD,gBAAM,WAAW,cAAe,MAAM,EAAG;AAEzC,cAAK,SAAS,aAAa,UAAY;AAEvC,gBAAM,UAAU;AAAA,YAEf,IAAI,MAAM;AAAA,YACV,SAAS,CAAC;AAAA,YACV,SAAS,CAAC;AAAA,YACV,eAAe,IAAI,QAAQ,EAAE,UAAW,SAAS,cAAc,CAAE;AAAA;AAAA;AAAA,UAIlE;AAEA,cAAK,aAAa,UAAW;AAE5B,oBAAQ,UAAU,SAAS,QAAQ;AACnC,oBAAQ,UAAU,SAAS,QAAQ;AAAA,UAEpC;AAEA,mBAAS,KAAM,OAAQ;AAAA,QAExB,CAAE;AAEF,eAAO;AAAA,UAEN;AAAA,UACA,OAAO,CAAC;AAAA,QAET;AAAA,MAED;AAAA;AAAA,MAGA,kBAAmB,eAAe,eAAgB;AAEjD,cAAM,kBAAkB,CAAC;AAEzB,iBAAU,IAAI,GAAG,IAAI,cAAc,SAAS,QAAQ,KAAO;AAE1D,gBAAM,QAAQ,cAAc,SAAU,CAAE;AAExC,gBAAM,kBAAkB,cAAe,MAAM,EAAG;AAEhD,gBAAM,iBAAiB;AAAA,YAEtB,MAAM,gBAAgB;AAAA,YACtB,eAAe,gBAAgB;AAAA,YAC/B,IAAI,gBAAgB;AAAA,YACpB,aAAa,gBAAgB,YAAY;AAAA,UAE1C;AAEA,cAAK,gBAAgB,aAAa,oBAAsB;AAExD,yBAAe,QAAQ,YAAY,IAAK,SAAU,MAAM,EAAG,CAAE,EAAE,SAAS,OAAQ,SAAWK,QAAQ;AAElG,mBAAOA,OAAM,iBAAiB;AAAA,UAE/B,CAAE,EAAG,CAAE,EAAE;AAET,0BAAgB,KAAM,cAAe;AAAA,QAEtC;AAEA,eAAO;AAAA,MAER;AAAA;AAAA,MAGA,WAAY,WAAW,aAAa,aAAc;AAEjD,qBAAa,IAAI,MAAM;AAEvB,cAAM,WAAW,KAAK,YAAa,UAAU,WAAW,aAAa,WAAY;AAEjF,cAAM,aAAa,QAAQ,QAAQ;AAEnC,cAAM,QAAQ;AACd,iBAAS,QAAS,SAAW,OAAQ;AAEpC,gBAAM,YAAY,WAAY,MAAM,EAAG;AACvC,gBAAM,oBAAqB,OAAO,SAAU;AAE5C,gBAAM,oBAAoB,YAAY,IAAK,MAAM,EAAG,EAAE;AAEtD,4BAAkB,QAAS,SAAW,YAAa;AAElD,kBAAM,SAAS,SAAS,IAAK,WAAW,EAAG;AAC3C,gBAAK,WAAW,OAAY,QAAO,IAAK,KAAM;AAAA,UAE/C,CAAE;AAEF,cAAK,MAAM,WAAW,MAAO;AAE5B,uBAAW,IAAK,KAAM;AAAA,UAEvB;AAAA,QAGD,CAAE;AAEF,aAAK,aAAc,UAAU,WAAW,aAAa,QAAS;AAE9D,aAAK,uBAAuB;AAE5B,mBAAW,SAAU,SAAW,MAAO;AAEtC,cAAK,KAAK,SAAS,eAAgB;AAElC,gBAAK,KAAK,QAAS;AAElB,mBAAK,SAAS,cAAc,eAAe,KAAK,OAAO;AACvD,mBAAK,SAAS,cAAc,oBAAoB,KAAK,OAAO;AAAA,YAE7D;AAEA,kBAAM,YAAY,kBAAmB,KAAK,SAAS,aAAc;AAEjE,iBAAK,aAAc,SAAU;AAC7B,iBAAK,kBAAkB;AAAA,UAExB;AAAA,QAED,CAAE;AAEF,cAAM,aAAa,IAAI,gBAAgB,EAAE,MAAM;AAG/C,YAAK,WAAW,SAAS,WAAW,KAAK,WAAW,SAAU,CAAE,EAAE,SAAU;AAE3E,qBAAW,SAAU,CAAE,EAAE,aAAa;AACtC,uBAAa,WAAW,SAAU,CAAE;AAAA,QAErC;AAEA,mBAAW,aAAa;AAAA,MAEzB;AAAA;AAAA,MAGA,YAAa,WAAW,aAAa,aAAc;AAElD,cAAM,WAAW,oBAAI,IAAI;AACzB,cAAM,aAAa,QAAQ,QAAQ;AAEnC,mBAAY,UAAU,YAAa;AAElC,gBAAM,KAAK,SAAU,MAAO;AAC5B,gBAAM,OAAO,WAAY,MAAO;AAChC,gBAAM,gBAAgB,YAAY,IAAK,EAAG;AAE1C,cAAI,QAAQ,KAAK,cAAe,eAAe,WAAW,IAAI,KAAK,QAAS;AAE5E,cAAK,CAAE,OAAQ;AAEd,oBAAS,KAAK,UAAW;AAAA,cAExB,KAAK;AACJ,wBAAQ,KAAK,aAAc,aAAc;AACzC;AAAA,cACD,KAAK;AACJ,wBAAQ,KAAK,YAAa,aAAc;AACxC;AAAA,cACD,KAAK;AACJ,wBAAQ,KAAK,WAAY,eAAe,aAAa,WAAY;AACjE;AAAA,cACD,KAAK;AACJ,wBAAQ,KAAK,YAAa,eAAe,WAAY;AACrD;AAAA,cACD,KAAK;AAAA,cACL,KAAK;AACJ,wBAAQ,IAAI,KAAK;AACjB;AAAA,cACD,KAAK;AAAA,cACL;AACC,wBAAQ,IAAI,MAAM;AAClB;AAAA,YAEF;AAEA,kBAAM,OAAO,KAAK,WAAW,gBAAgB,iBAAkB,KAAK,QAAS,IAAI;AACjF,kBAAM,SAAS,eAAe,KAAK;AAEnC,kBAAM,KAAK;AAAA,UAEZ;AAEA,eAAK,iBAAkB,OAAO,IAAK;AACnC,mBAAS,IAAK,IAAI,KAAM;AAAA,QAEzB;AAEA,eAAO;AAAA,MAER;AAAA,MAEA,cAAe,eAAe,WAAW,IAAI,MAAO;AAEnD,YAAI,OAAO;AAEX,sBAAc,QAAQ,QAAS,SAAW,QAAS;AAElD,qBAAY,MAAM,WAAY;AAE7B,kBAAM,WAAW,UAAW,EAAG;AAE/B,qBAAS,SAAS,QAAS,SAAW,SAAS,GAAI;AAElD,kBAAK,QAAQ,OAAO,OAAO,IAAK;AAE/B,sBAAM,UAAU;AAChB,uBAAO,IAAI,KAAK;AAEhB,qBAAK,YAAY,KAAM,QAAQ,aAAc;AAI7C,qBAAK,OAAO,OAAO,gBAAgB,iBAAkB,IAAK,IAAI;AAC9D,qBAAK,SAAS,eAAe;AAC7B,qBAAK,KAAK;AAEV,yBAAS,MAAO,CAAE,IAAI;AAItB,oBAAK,YAAY,MAAO;AAEvB,uBAAK,IAAK,OAAQ;AAAA,gBAEnB;AAAA,cAED;AAAA,YAED,CAAE;AAAA,UAEH;AAAA,QAED,CAAE;AAEF,eAAO;AAAA,MAER;AAAA;AAAA,MAGA,aAAc,eAAgB;AAE7B,YAAI;AACJ,YAAI;AAEJ,sBAAc,SAAS,QAAS,SAAW,OAAQ;AAElD,gBAAM,OAAO,QAAQ,QAAQ,cAAe,MAAM,EAAG;AAErD,cAAK,SAAS,QAAY;AAEzB,8BAAkB;AAAA,UAEnB;AAAA,QAED,CAAE;AAEF,YAAK,oBAAoB,QAAY;AAEpC,kBAAQ,IAAI,SAAS;AAAA,QAEtB,OAAO;AAEN,cAAI,OAAO;AACX,cAAK,gBAAgB,yBAAyB,UAAa,gBAAgB,qBAAqB,UAAU,GAAI;AAE7G,mBAAO;AAAA,UAER;AAEA,cAAI,oBAAoB;AACxB,cAAK,gBAAgB,cAAc,QAAY;AAE9C,gCAAoB,gBAAgB,UAAU,QAAQ;AAAA,UAEvD;AAEA,cAAI,mBAAmB;AACvB,cAAK,gBAAgB,aAAa,QAAY;AAE7C,+BAAmB,gBAAgB,SAAS,QAAQ;AAAA,UAErD;AAGA,cAAI,QAAQ,OAAO;AACnB,cAAI,SAAS,OAAO;AAEpB,cAAK,gBAAgB,gBAAgB,UAAa,gBAAgB,iBAAiB,QAAY;AAE9F,oBAAQ,gBAAgB,YAAY;AACpC,qBAAS,gBAAgB,aAAa;AAAA,UAEvC;AAEA,gBAAM,SAAS,QAAQ;AAEvB,cAAI,MAAM;AACV,cAAK,gBAAgB,gBAAgB,QAAY;AAEhD,kBAAM,gBAAgB,YAAY;AAAA,UAEnC;AAEA,gBAAM,cAAc,gBAAgB,cAAc,gBAAgB,YAAY,QAAQ;AAEtF,kBAAS,MAAO;AAAA,YAEf,KAAK;AACJ,sBAAQ,IAAI,kBAAmB,KAAK,QAAQ,mBAAmB,gBAAiB;AAChF,kBAAK,gBAAgB,KAAO,OAAM,eAAgB,WAAY;AAC9D;AAAA,YAED,KAAK;AACJ,sBAAQ,IAAI,mBAAoB,CAAE,QAAQ,GAAG,QAAQ,GAAG,SAAS,GAAG,CAAE,SAAS,GAAG,mBAAmB,gBAAiB;AACtH;AAAA,YAED;AACC,sBAAQ,KAAM,0CAA0C,OAAO,GAAI;AACnE,sBAAQ,IAAI,SAAS;AACrB;AAAA,UAEF;AAAA,QAED;AAEA,eAAO;AAAA,MAER;AAAA;AAAA,MAGA,YAAa,eAAgB;AAE5B,YAAI;AACJ,YAAI;AAEJ,sBAAc,SAAS,QAAS,SAAW,OAAQ;AAElD,gBAAM,OAAO,QAAQ,QAAQ,cAAe,MAAM,EAAG;AAErD,cAAK,SAAS,QAAY;AAEzB,6BAAiB;AAAA,UAElB;AAAA,QAED,CAAE;AAEF,YAAK,mBAAmB,QAAY;AAEnC,kBAAQ,IAAI,SAAS;AAAA,QAEtB,OAAO;AAEN,cAAI;AAGJ,cAAK,eAAe,cAAc,QAAY;AAE7C,mBAAO;AAAA,UAER,OAAO;AAEN,mBAAO,eAAe,UAAU;AAAA,UAEjC;AAEA,cAAI,QAAQ;AAEZ,cAAK,eAAe,UAAU,QAAY;AAEzC,oBAAQ,IAAI,MAAM,EAAE,UAAW,eAAe,MAAM,KAAM,EAAE,oBAAoB;AAAA,UAEjF;AAEA,cAAI,YAAc,eAAe,cAAc,SAAc,IAAI,eAAe,UAAU,QAAQ;AAGlG,cAAK,eAAe,sBAAsB,UAAa,eAAe,kBAAkB,UAAU,GAAI;AAErG,wBAAY;AAAA,UAEb;AAEA,cAAIC,YAAW;AACf,cAAK,eAAe,sBAAsB,QAAY;AAErD,gBAAK,eAAe,yBAAyB,UAAa,eAAe,qBAAqB,UAAU,GAAI;AAE3G,cAAAA,YAAW;AAAA,YAEZ,OAAO;AAEN,cAAAA,YAAW,eAAe,kBAAkB;AAAA,YAE7C;AAAA,UAED;AAGA,gBAAM,QAAQ;AAEd,kBAAS,MAAO;AAAA,YAEf,KAAK;AACJ,sBAAQ,IAAI,WAAY,OAAO,WAAWA,WAAU,KAAM;AAC1D;AAAA,YAED,KAAK;AACJ,sBAAQ,IAAI,iBAAkB,OAAO,SAAU;AAC/C;AAAA,YAED,KAAK;AACJ,kBAAIC,SAAQ,KAAK,KAAK;AAEtB,kBAAK,eAAe,eAAe,QAAY;AAE9C,gBAAAA,SAAQ,UAAU,SAAU,eAAe,WAAW,KAAM;AAAA,cAE7D;AAEA,kBAAI,WAAW;AACf,kBAAK,eAAe,eAAe,QAAY;AAK9C,2BAAW,UAAU,SAAU,eAAe,WAAW,KAAM;AAC/D,2BAAW,KAAK,IAAK,UAAU,CAAE;AAAA,cAElC;AAEA,sBAAQ,IAAI,UAAW,OAAO,WAAWD,WAAUC,QAAO,UAAU,KAAM;AAC1E;AAAA,YAED;AACC,sBAAQ,KAAM,yCAAyC,eAAe,UAAU,QAAQ,+BAAgC;AACxH,sBAAQ,IAAI,WAAY,OAAO,SAAU;AACzC;AAAA,UAEF;AAEA,cAAK,eAAe,gBAAgB,UAAa,eAAe,YAAY,UAAU,GAAI;AAEzF,kBAAM,aAAa;AAAA,UAEpB;AAAA,QAED;AAEA,eAAO;AAAA,MAER;AAAA,MAEA,WAAY,eAAe,aAAa,aAAc;AAErD,YAAI;AACJ,YAAI,WAAW;AACf,YAAI,WAAW;AACf,cAAM,YAAY,CAAC;AAGnB,sBAAc,SAAS,QAAS,SAAW,OAAQ;AAElD,cAAK,YAAY,IAAK,MAAM,EAAG,GAAI;AAElC,uBAAW,YAAY,IAAK,MAAM,EAAG;AAAA,UAEtC;AAEA,cAAK,YAAY,IAAK,MAAM,EAAG,GAAI;AAElC,sBAAU,KAAM,YAAY,IAAK,MAAM,EAAG,CAAE;AAAA,UAE7C;AAAA,QAED,CAAE;AAEF,YAAK,UAAU,SAAS,GAAI;AAE3B,qBAAW;AAAA,QAEZ,WAAY,UAAU,SAAS,GAAI;AAElC,qBAAW,UAAW,CAAE;AAAA,QAEzB,OAAO;AAEN,qBAAW,IAAI,kBAAmB;AAAA,YACjC,MAAM,OAAO;AAAA,YACb,OAAO;AAAA,UACR,CAAE;AACF,oBAAU,KAAM,QAAS;AAAA,QAE1B;AAEA,YAAK,WAAW,SAAS,YAAa;AAErC,oBAAU,QAAS,SAAWC,WAAW;AAExC,YAAAA,UAAS,eAAe;AAAA,UAEzB,CAAE;AAAA,QAEH;AAEA,YAAK,SAAS,cAAe;AAE5B,kBAAQ,IAAI,YAAa,UAAU,QAAS;AAC5C,gBAAM,qBAAqB;AAAA,QAE5B,OAAO;AAEN,kBAAQ,IAAI,KAAM,UAAU,QAAS;AAAA,QAEtC;AAEA,eAAO;AAAA,MAER;AAAA,MAEA,YAAa,eAAe,aAAc;AAEzC,cAAM,WAAW,cAAc,SAAS,OAAQ,SAAW,KAAK,OAAQ;AAEvE,cAAK,YAAY,IAAK,MAAM,EAAG,EAAI,OAAM,YAAY,IAAK,MAAM,EAAG;AAEnE,iBAAO;AAAA,QAER,GAAG,IAAK;AAGR,cAAM,WAAW,IAAI,kBAAmB;AAAA,UACvC,MAAM,OAAO;AAAA,UACb,OAAO;AAAA,UACP,WAAW;AAAA,QACZ,CAAE;AACF,eAAO,IAAI,KAAM,UAAU,QAAS;AAAA,MAErC;AAAA;AAAA,MAGA,iBAAkB,OAAO,WAAY;AAEpC,cAAM,gBAAgB,CAAC;AAEvB,YAAK,iBAAiB,UAAY,eAAc,cAAc,SAAU,UAAU,YAAY,KAAM;AAEpG,YAAK,mBAAmB,UAAY,eAAc,aAAa,cAAe,UAAU,cAAc,KAAM;AAAA,YACvG,eAAc,aAAa;AAEhC,YAAK,qBAAqB,UAAY,eAAc,cAAc,UAAU,gBAAgB;AAE5F,YAAK,iBAAiB,UAAY,eAAc,cAAc,UAAU,YAAY;AACpF,YAAK,kBAAkB,UAAY,eAAc,WAAW,UAAU,aAAa;AACnF,YAAK,kBAAkB,UAAY,eAAc,eAAe,UAAU,aAAa;AAEvF,YAAK,iBAAiB,UAAY,eAAc,QAAQ,UAAU,YAAY;AAE9E,YAAK,mBAAmB,UAAY,eAAc,gBAAgB,UAAU,cAAc;AAC1F,YAAK,kBAAkB,UAAY,eAAc,eAAe,UAAU,aAAa;AAEvF,YAAK,oBAAoB,UAAY,eAAc,iBAAiB,UAAU,eAAe;AAC7F,YAAK,mBAAmB,UAAY,eAAc,gBAAgB,UAAU,cAAc;AAE1F,cAAM,SAAS,gBAAgB;AAAA,MAEhC;AAAA,MAEA,oBAAqB,OAAO,WAAY;AAEvC,YAAK,oBAAoB,WAAY;AAEpC,gBAAM,WAAW,YAAY,IAAK,MAAM,EAAG,EAAE;AAE7C,mBAAS,QAAS,SAAW,OAAQ;AAEpC,gBAAK,MAAM,iBAAiB,kBAAmB;AAE9C,oBAAM,eAAe,QAAQ,QAAQ,MAAO,MAAM,EAAG;AAErD,kBAAK,qBAAqB,cAAe;AAExC,sBAAM,MAAM,aAAa,gBAAgB;AAGzC,oBAAK,MAAM,WAAW,QAAY;AAEjC,wBAAM,OAAO,SAAS,UAAW,GAAI;AACrC,6BAAW,IAAK,MAAM,MAAO;AAAA,gBAE9B,OAAO;AAEN,wBAAM,OAAQ,IAAI,QAAQ,EAAE,UAAW,GAAI,CAAE;AAAA,gBAE9C;AAAA,cAED;AAAA,YAED;AAAA,UAED,CAAE;AAAA,QAEH;AAAA,MAED;AAAA,MAEA,aAAc,WAAW,aAAa,UAAW;AAEhD,cAAM,eAAe,KAAK,eAAe;AAEzC,mBAAY,MAAM,WAAY;AAE7B,gBAAM,WAAW,UAAW,EAAG;AAE/B,gBAAM,UAAU,YAAY,IAAK,SAAU,SAAS,EAAG,CAAE,EAAE;AAE3D,kBAAQ,QAAS,SAAW,QAAS;AAEpC,gBAAK,YAAY,IAAK,OAAO,EAAG,GAAI;AAEnC,oBAAM,QAAQ,OAAO;AACrB,oBAAM,mBAAmB,YAAY,IAAK,KAAM;AAEhD,+BAAiB,QAAQ,QAAS,SAAW,eAAgB;AAE5D,oBAAK,SAAS,IAAK,cAAc,EAAG,GAAI;AAEvC,wBAAM,QAAQ,SAAS,IAAK,cAAc,EAAG;AAE7C,wBAAM,KAAM,IAAI,SAAU,SAAS,KAAM,GAAG,aAAc,cAAc,EAAG,CAAE;AAAA,gBAE9E;AAAA,cAED,CAAE;AAAA,YAEH;AAAA,UAED,CAAE;AAAA,QAEH;AAAA,MAED;AAAA,MAEA,iBAAiB;AAEhB,cAAM,eAAe,CAAC;AAEtB,YAAK,UAAU,QAAQ,SAAU;AAEhC,gBAAM,eAAe,QAAQ,QAAQ;AAErC,qBAAY,UAAU,cAAe;AAEpC,gBAAK,aAAc,MAAO,EAAE,aAAa,cAAc,aAAc,MAAO,EAAE,cAAc,GAAI;AAE/F,oBAAM,YAAY,aAAc,MAAO,EAAE;AAEzC,kBAAK,MAAM,QAAS,SAAU,GAAI;AAEjC,0BAAU,QAAS,SAAW,UAAW;AAExC,+BAAc,SAAS,IAAK,IAAI,IAAI,QAAQ,EAAE,UAAW,SAAS,OAAO,CAAE;AAAA,gBAE5E,CAAE;AAAA,cAEH,OAAO;AAEN,6BAAc,UAAU,IAAK,IAAI,IAAI,QAAQ,EAAE,UAAW,UAAU,OAAO,CAAE;AAAA,cAE9E;AAAA,YAED;AAAA,UAED;AAAA,QAED;AAEA,eAAO;AAAA,MAER;AAAA,MAEA,yBAAyB;AAExB,YAAK,oBAAoB,SAAU;AAElC,cAAK,kBAAkB,QAAQ,gBAAiB;AAI/C,kBAAM,eAAe,QAAQ,eAAe,aAAa;AACzD,kBAAM,IAAI,aAAc,CAAE;AAC1B,kBAAMC,KAAI,aAAc,CAAE;AAC1B,kBAAM,IAAI,aAAc,CAAE;AAE1B,gBAAK,MAAM,KAAKA,OAAM,KAAK,MAAM,GAAI;AAEpC,oBAAM,QAAQ,IAAI,MAAO,GAAGA,IAAG,CAAE,EAAE,oBAAoB;AACvD,yBAAW,IAAK,IAAI,aAAc,OAAO,CAAE,CAAE;AAAA,YAE9C;AAAA,UAED;AAEA,cAAK,qBAAqB,QAAQ,gBAAiB;AAElD,uBAAW,SAAS,kBAAkB,QAAQ,eAAe,gBAAgB;AAAA,UAE9E;AAAA,QAED;AAAA,MAED;AAAA,IAED;AAGA,IAAM,iBAAN,MAAqB;AAAA,MAEpB,cAAc;AAEb,aAAK,0BAA0B;AAAA,MAEhC;AAAA;AAAA,MAGA,MAAO,WAAY;AAElB,cAAM,cAAc,oBAAI,IAAI;AAE5B,YAAK,cAAc,QAAQ,SAAU;AAEpC,gBAAM,WAAW,QAAQ,QAAQ;AAEjC,qBAAY,UAAU,UAAW;AAEhC,kBAAM,gBAAgB,YAAY,IAAK,SAAU,MAAO,CAAE;AAC1D,kBAAM,MAAM,KAAK,cAAe,eAAe,SAAU,MAAO,GAAG,SAAU;AAE7E,wBAAY,IAAK,SAAU,MAAO,GAAG,GAAI;AAAA,UAE1C;AAAA,QAED;AAIA,YAAK,KAAK,4BAA4B,MAAO;AAE5C,kBAAQ,KAAM,qHAAsH;AAAA,QAErI;AAEA,eAAO;AAAA,MAER;AAAA;AAAA,MAGA,cAAe,eAAe,SAAS,WAAY;AAElD,gBAAS,QAAQ,UAAW;AAAA,UAE3B,KAAK;AACJ,mBAAO,KAAK,kBAAmB,eAAe,SAAS,SAAU;AACjE;AAAA,UAED,KAAK;AACJ,mBAAO,KAAK,mBAAoB,OAAQ;AACxC;AAAA,QAEF;AAAA,MAED;AAAA;AAAA,MAGA,kBAAmB,eAAe,SAAS,WAAY;AAEtD,cAAM,YAAY,UAAU;AAC5B,cAAM,eAAe,CAAC;AAEtB,cAAM,aAAa,cAAc,QAAQ,IAAK,SAAW,QAAS;AAEjE,iBAAO,QAAQ,QAAQ,MAAO,OAAO,EAAG;AAAA,QAEzC,CAAE;AAGF,YAAK,WAAW,WAAW,EAAI;AAE/B,cAAM,WAAW,cAAc,SAAS,OAAQ,SAAWC,WAAU,OAAQ;AAE5E,cAAK,UAAW,MAAM,EAAG,MAAM,OAAY,CAAAA,YAAW,UAAW,MAAM,EAAG;AAE1E,iBAAOA;AAAA,QAER,GAAG,IAAK;AAER,sBAAc,SAAS,QAAS,SAAW,OAAQ;AAElD,cAAK,UAAU,aAAc,MAAM,EAAG,MAAM,QAAY;AAEvD,yBAAa,KAAM,UAAU,aAAc,MAAM,EAAG,CAAE;AAAA,UAEvD;AAAA,QAED,CAAE;AAIF,cAAM,YAAY,WAAY,CAAE;AAEhC,cAAM,gBAAgB,CAAC;AAEvB,YAAK,mBAAmB,UAAY,eAAc,aAAa,cAAe,UAAU,cAAc,KAAM;AAC5G,YAAK,iBAAiB,UAAY,eAAc,cAAc,SAAU,UAAU,YAAY,KAAM;AAEpG,YAAK,0BAA0B,UAAY,eAAc,cAAc,UAAU,qBAAqB;AACtG,YAAK,uBAAuB,UAAY,eAAc,WAAW,UAAU,kBAAkB;AAC7F,YAAK,sBAAsB,UAAY,eAAc,QAAQ,UAAU,iBAAiB;AAExF,cAAM,YAAY,kBAAmB,aAAc;AAEnD,eAAO,KAAK,YAAa,SAAS,UAAU,cAAc,SAAU;AAAA,MAErE;AAAA;AAAA,MAGA,YAAa,SAAS,UAAU,cAAc,cAAe;AAE5D,cAAM,MAAM,IAAI,eAAe;AAC/B,YAAK,QAAQ,SAAW,KAAI,OAAO,QAAQ;AAE3C,cAAM,UAAU,KAAK,aAAc,SAAS,QAAS;AACrD,cAAM,UAAU,KAAK,WAAY,OAAQ;AAEzC,cAAM,oBAAoB,IAAI,uBAAwB,QAAQ,QAAQ,CAAE;AAExE,0BAAkB,aAAc,YAAa;AAE7C,YAAI,aAAc,YAAY,iBAAkB;AAEhD,YAAK,QAAQ,OAAO,SAAS,GAAI;AAEhC,cAAI,aAAc,SAAS,IAAI,uBAAwB,QAAQ,QAAQ,CAAE,CAAE;AAAA,QAE5E;AAEA,YAAK,UAAW;AAEf,cAAI,aAAc,aAAa,IAAI,sBAAuB,QAAQ,gBAAgB,CAAE,CAAE;AAEtF,cAAI,aAAc,cAAc,IAAI,uBAAwB,QAAQ,eAAe,CAAE,CAAE;AAGvF,cAAI,eAAe;AAAA,QAEpB;AAEA,YAAK,QAAQ,OAAO,SAAS,GAAI;AAEhC,gBAAM,eAAe,IAAI,QAAQ,EAAE,gBAAiB,YAAa;AAEjE,gBAAM,kBAAkB,IAAI,uBAAwB,QAAQ,QAAQ,CAAE;AACtE,0BAAgB,kBAAmB,YAAa;AAEhD,cAAI,aAAc,UAAU,eAAgB;AAAA,QAE7C;AAEA,gBAAQ,IAAI,QAAS,SAAW,UAAU,GAAI;AAE7C,gBAAM,OAAO,MAAM,IAAI,OAAO,KAAM,CAAE;AAEtC,cAAI,aAAc,MAAM,IAAI,uBAAwB,QAAQ,IAAK,CAAE,GAAG,CAAE,CAAE;AAAA,QAE3E,CAAE;AAEF,YAAK,QAAQ,YAAY,QAAQ,SAAS,gBAAgB,WAAY;AAGrE,cAAI,oBAAoB,QAAQ,cAAe,CAAE;AACjD,cAAI,aAAa;AAEjB,kBAAQ,cAAc,QAAS,SAAW,cAAc,GAAI;AAE3D,gBAAK,iBAAiB,mBAAoB;AAEzC,kBAAI,SAAU,YAAY,IAAI,YAAY,iBAAkB;AAE5D,kCAAoB;AACpB,2BAAa;AAAA,YAEd;AAAA,UAED,CAAE;AAGF,cAAK,IAAI,OAAO,SAAS,GAAI;AAE5B,kBAAM,YAAY,IAAI,OAAQ,IAAI,OAAO,SAAS,CAAE;AACpD,kBAAM,YAAY,UAAU,QAAQ,UAAU;AAE9C,gBAAK,cAAc,QAAQ,cAAc,QAAS;AAEjD,kBAAI,SAAU,WAAW,QAAQ,cAAc,SAAS,WAAW,iBAAkB;AAAA,YAEtF;AAAA,UAED;AAIA,cAAK,IAAI,OAAO,WAAW,GAAI;AAE9B,gBAAI,SAAU,GAAG,QAAQ,cAAc,QAAQ,QAAQ,cAAe,CAAE,CAAE;AAAA,UAE3E;AAAA,QAED;AAEA,aAAK,gBAAiB,KAAK,SAAS,cAAc,YAAa;AAE/D,eAAO;AAAA,MAER;AAAA,MAEA,aAAc,SAAS,UAAW;AAEjC,cAAM,UAAU,CAAC;AAEjB,gBAAQ,kBAAoB,QAAQ,aAAa,SAAc,QAAQ,SAAS,IAAI,CAAC;AACrF,gBAAQ,gBAAkB,QAAQ,uBAAuB,SAAc,QAAQ,mBAAmB,IAAI,CAAC;AAEvG,YAAK,QAAQ,mBAAoB;AAEhC,kBAAQ,QAAQ,KAAK,kBAAmB,QAAQ,kBAAmB,CAAE,CAAE;AAAA,QAExE;AAEA,YAAK,QAAQ,sBAAuB;AAEnC,kBAAQ,WAAW,KAAK,qBAAsB,QAAQ,qBAAsB,CAAE,CAAE;AAAA,QAEjF;AAEA,YAAK,QAAQ,oBAAqB;AAEjC,kBAAQ,SAAS,KAAK,aAAc,QAAQ,mBAAoB,CAAE,CAAE;AAAA,QAErE;AAEA,YAAK,QAAQ,gBAAiB;AAE7B,kBAAQ,KAAK,CAAC;AAEd,cAAI,IAAI;AACR,iBAAQ,QAAQ,eAAgB,CAAE,GAAI;AAErC,gBAAK,QAAQ,eAAgB,CAAE,EAAE,IAAK;AAErC,sBAAQ,GAAG,KAAM,KAAK,SAAU,QAAQ,eAAgB,CAAE,CAAE,CAAE;AAAA,YAE/D;AAEA;AAAA,UAED;AAAA,QAED;AAEA,gBAAQ,cAAc,CAAC;AAEvB,YAAK,aAAa,MAAO;AAExB,kBAAQ,WAAW;AAEnB,mBAAS,SAAS,QAAS,SAAW,SAAS,GAAI;AAGlD,oBAAQ,QAAQ,QAAS,SAAW,OAAO,GAAI;AAE9C,kBAAK,QAAQ,YAAa,KAAM,MAAM,OAAY,SAAQ,YAAa,KAAM,IAAI,CAAC;AAElF,sBAAQ,YAAa,KAAM,EAAE,KAAM;AAAA,gBAElC,IAAI;AAAA,gBACJ,QAAQ,QAAQ,QAAS,CAAE;AAAA,cAE5B,CAAE;AAAA,YAEH,CAAE;AAAA,UAEH,CAAE;AAAA,QAEH;AAEA,eAAO;AAAA,MAER;AAAA,MAEA,WAAY,SAAU;AAErB,cAAM,UAAU;AAAA,UACf,QAAQ,CAAC;AAAA,UACT,QAAQ,CAAC;AAAA,UACT,QAAQ,CAAC;AAAA,UACT,KAAK,CAAC;AAAA,UACN,eAAe,CAAC;AAAA,UAChB,eAAe,CAAC;AAAA,UAChB,gBAAgB,CAAC;AAAA,QAClB;AAEA,YAAI,eAAe;AACnB,YAAI,aAAa;AACjB,YAAI,0BAA0B;AAG9B,YAAI,sBAAsB,CAAC;AAC3B,YAAI,cAAc,CAAC;AACnB,YAAI,aAAa,CAAC;AAClB,YAAI,UAAU,CAAC;AACf,YAAI,cAAc,CAAC;AACnB,YAAI,oBAAoB,CAAC;AAEzB,cAAM,QAAQ;AACd,gBAAQ,cAAc,QAAS,SAAW,aAAa,oBAAqB;AAE3E,cAAI;AACJ,cAAI,YAAY;AAShB,cAAK,cAAc,GAAI;AAEtB,0BAAc,cAAc;AAC5B,wBAAY;AAAA,UAEb;AAEA,cAAI,gBAAgB,CAAC;AACrB,cAAI,UAAU,CAAC;AAEf,8BAAoB,KAAM,cAAc,GAAG,cAAc,IAAI,GAAG,cAAc,IAAI,CAAE;AAEpF,cAAK,QAAQ,OAAQ;AAEpB,kBAAM,OAAO,QAAS,oBAAoB,cAAc,aAAa,QAAQ,KAAM;AAEnF,uBAAW,KAAM,KAAM,CAAE,GAAG,KAAM,CAAE,GAAG,KAAM,CAAE,CAAE;AAAA,UAElD;AAEA,cAAK,QAAQ,UAAW;AAEvB,gBAAK,QAAQ,YAAa,WAAY,MAAM,QAAY;AAEvD,sBAAQ,YAAa,WAAY,EAAE,QAAS,SAAW,IAAK;AAE3D,wBAAQ,KAAM,GAAG,MAAO;AACxB,8BAAc,KAAM,GAAG,EAAG;AAAA,cAE3B,CAAE;AAAA,YAGH;AAEA,gBAAK,QAAQ,SAAS,GAAI;AAEzB,kBAAK,CAAE,yBAA0B;AAEhC,wBAAQ,KAAM,2GAA4G;AAC1H,0CAA0B;AAAA,cAE3B;AAEA,oBAAM,SAAS,CAAE,GAAG,GAAG,GAAG,CAAE;AAC5B,oBAAM,SAAS,CAAE,GAAG,GAAG,GAAG,CAAE;AAE5B,sBAAQ,QAAS,SAAW,QAAQ,aAAc;AAEjD,oBAAI,gBAAgB;AACpB,oBAAI,eAAe,cAAe,WAAY;AAE9C,uBAAO,QAAS,SAAW,gBAAgB,qBAAqB,qBAAsB;AAErF,sBAAK,gBAAgB,gBAAiB;AAErC,wCAAqB,mBAAoB,IAAI;AAC7C,oCAAgB;AAEhB,0BAAM,MAAM,OAAQ,mBAAoB;AACxC,2BAAQ,mBAAoB,IAAI;AAChC,mCAAe;AAAA,kBAEhB;AAAA,gBAED,CAAE;AAAA,cAEH,CAAE;AAEF,8BAAgB;AAChB,wBAAU;AAAA,YAEX;AAGA,mBAAQ,QAAQ,SAAS,GAAI;AAE5B,sBAAQ,KAAM,CAAE;AAChB,4BAAc,KAAM,CAAE;AAAA,YAEvB;AAEA,qBAAU,IAAI,GAAG,IAAI,GAAG,EAAG,GAAI;AAE9B,0BAAY,KAAM,QAAS,CAAE,CAAE;AAC/B,gCAAkB,KAAM,cAAe,CAAE,CAAE;AAAA,YAE5C;AAAA,UAED;AAEA,cAAK,QAAQ,QAAS;AAErB,kBAAM,OAAO,QAAS,oBAAoB,cAAc,aAAa,QAAQ,MAAO;AAEpF,wBAAY,KAAM,KAAM,CAAE,GAAG,KAAM,CAAE,GAAG,KAAM,CAAE,CAAE;AAAA,UAEnD;AAEA,cAAK,QAAQ,YAAY,QAAQ,SAAS,gBAAgB,WAAY;AAErE,4BAAgB,QAAS,oBAAoB,cAAc,aAAa,QAAQ,QAAS,EAAG,CAAE;AAE9F,gBAAK,gBAAgB,GAAI;AAExB,oBAAM,0BAA0B;AAChC,8BAAgB;AAAA,YAEjB;AAAA,UAED;AAEA,cAAK,QAAQ,IAAK;AAEjB,oBAAQ,GAAG,QAAS,SAAW,IAAI,GAAI;AAEtC,oBAAM,OAAO,QAAS,oBAAoB,cAAc,aAAa,EAAG;AAExE,kBAAK,QAAS,CAAE,MAAM,QAAY;AAEjC,wBAAS,CAAE,IAAI,CAAC;AAAA,cAEjB;AAEA,sBAAS,CAAE,EAAE,KAAM,KAAM,CAAE,CAAE;AAC7B,sBAAS,CAAE,EAAE,KAAM,KAAM,CAAE,CAAE;AAAA,YAE9B,CAAE;AAAA,UAEH;AAEA;AAEA,cAAK,WAAY;AAEhB,kBAAM,QAAS,SAAS,SAAS,qBAAqB,eAAe,aAAa,YAAY,SAAS,aAAa,mBAAmB,UAAW;AAElJ;AACA,yBAAa;AAGb,kCAAsB,CAAC;AACvB,0BAAc,CAAC;AACf,yBAAa,CAAC;AACd,sBAAU,CAAC;AACX,0BAAc,CAAC;AACf,gCAAoB,CAAC;AAAA,UAEtB;AAAA,QAED,CAAE;AAEF,eAAO;AAAA,MAER;AAAA;AAAA,MAGA,gBAAiB,UAAW;AAE3B,cAAM,SAAS,IAAI,QAAS,GAAK,GAAK,CAAI;AAE1C,iBAAU,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAO;AAE5C,gBAAM,UAAU,SAAU,CAAE;AAC5B,gBAAM,OAAO,UAAY,IAAI,KAAM,SAAS,MAAO;AAEnD,iBAAO,MAAO,QAAQ,IAAI,KAAK,MAAQ,QAAQ,IAAI,KAAK;AACxD,iBAAO,MAAO,QAAQ,IAAI,KAAK,MAAQ,QAAQ,IAAI,KAAK;AACxD,iBAAO,MAAO,QAAQ,IAAI,KAAK,MAAQ,QAAQ,IAAI,KAAK;AAAA,QAEzD;AAEA,eAAO,UAAU;AAEjB,eAAO;AAAA,MAER;AAAA,MAEA,6BAA8B,UAAW;AAExC,cAAM,eAAe,KAAK,gBAAiB,QAAS;AAEpD,cAAM,KAAK,KAAK,IAAK,aAAa,CAAE,IAAI,MAAM,IAAI,QAAS,GAAK,GAAK,CAAI,IAAI,IAAI,QAAS,GAAK,GAAK,CAAI;AACxG,cAAM,UAAU,GAAG,MAAO,YAAa,EAAE,UAAU;AACnD,cAAM,YAAY,aAAa,MAAM,EAAE,MAAO,OAAQ,EAAE,UAAU;AAElE,eAAO;AAAA,UACN,QAAQ;AAAA,UACR;AAAA,UACA;AAAA,QACD;AAAA,MAED;AAAA,MAEA,cAAe,QAAQ,eAAe,iBAAkB;AAEvD,eAAO,IAAI;AAAA,UACV,OAAO,IAAK,aAAc;AAAA,UAC1B,OAAO,IAAK,eAAgB;AAAA,QAC7B;AAAA,MAED;AAAA;AAAA,MAGA,QAAS,SAAS,SAAS,qBAAqB,eAAe,aAAa,YAAY,SAAS,aAAa,mBAAmB,YAAa;AAE7I,YAAI;AAEJ,YAAK,aAAa,GAAI;AAIrB,gBAAM,WAAW,CAAC;AAElB,mBAAU,IAAI,GAAG,IAAI,oBAAoB,QAAQ,KAAK,GAAI;AAEzD,qBAAS,KAAM,IAAI;AAAA,cAClB,QAAQ,gBAAiB,oBAAqB,CAAE,CAAE;AAAA,cAClD,QAAQ,gBAAiB,oBAAqB,IAAI,CAAE,CAAE;AAAA,cACtD,QAAQ,gBAAiB,oBAAqB,IAAI,CAAE,CAAE;AAAA,YACvD,CAAE;AAAA,UAEH;AAEA,gBAAM,EAAE,SAAS,UAAU,IAAI,KAAK,6BAA8B,QAAS;AAC3E,gBAAM,qBAAqB,CAAC;AAE5B,qBAAY,UAAU,UAAW;AAEhC,+BAAmB,KAAM,KAAK,cAAe,QAAQ,SAAS,SAAU,CAAE;AAAA,UAE3E;AAEA,sBAAY,WAAW,iBAAkB,oBAAoB,CAAC,CAAE;AAAA,QAEjE,OAAO;AAGN,sBAAY,CAAC,CAAE,GAAG,GAAG,CAAE,CAAC;AAAA,QAEzB;AAEA,mBAAY,CAAE,IAAI,IAAI,EAAG,KAAK,WAAY;AAEzC,kBAAQ,OAAO,KAAM,QAAQ,gBAAiB,oBAAqB,KAAK,CAAE,CAAE,CAAE;AAC9E,kBAAQ,OAAO,KAAM,QAAQ,gBAAiB,oBAAqB,KAAK,IAAI,CAAE,CAAE,CAAE;AAClF,kBAAQ,OAAO,KAAM,QAAQ,gBAAiB,oBAAqB,KAAK,IAAI,CAAE,CAAE,CAAE;AAElF,kBAAQ,OAAO,KAAM,QAAQ,gBAAiB,oBAAqB,KAAK,CAAE,CAAE,CAAE;AAC9E,kBAAQ,OAAO,KAAM,QAAQ,gBAAiB,oBAAqB,KAAK,IAAI,CAAE,CAAE,CAAE;AAClF,kBAAQ,OAAO,KAAM,QAAQ,gBAAiB,oBAAqB,KAAK,IAAI,CAAE,CAAE,CAAE;AAElF,kBAAQ,OAAO,KAAM,QAAQ,gBAAiB,oBAAqB,KAAK,CAAE,CAAE,CAAE;AAC9E,kBAAQ,OAAO,KAAM,QAAQ,gBAAiB,oBAAqB,KAAK,IAAI,CAAE,CAAE,CAAE;AAClF,kBAAQ,OAAO,KAAM,QAAQ,gBAAiB,oBAAqB,KAAK,IAAI,CAAE,CAAE,CAAE;AAElF,cAAK,QAAQ,UAAW;AAEvB,oBAAQ,cAAc,KAAM,YAAa,KAAK,CAAE,CAAE;AAClD,oBAAQ,cAAc,KAAM,YAAa,KAAK,IAAI,CAAE,CAAE;AACtD,oBAAQ,cAAc,KAAM,YAAa,KAAK,IAAI,CAAE,CAAE;AACtD,oBAAQ,cAAc,KAAM,YAAa,KAAK,IAAI,CAAE,CAAE;AAEtD,oBAAQ,cAAc,KAAM,YAAa,KAAK,CAAE,CAAE;AAClD,oBAAQ,cAAc,KAAM,YAAa,KAAK,IAAI,CAAE,CAAE;AACtD,oBAAQ,cAAc,KAAM,YAAa,KAAK,IAAI,CAAE,CAAE;AACtD,oBAAQ,cAAc,KAAM,YAAa,KAAK,IAAI,CAAE,CAAE;AAEtD,oBAAQ,cAAc,KAAM,YAAa,KAAK,CAAE,CAAE;AAClD,oBAAQ,cAAc,KAAM,YAAa,KAAK,IAAI,CAAE,CAAE;AACtD,oBAAQ,cAAc,KAAM,YAAa,KAAK,IAAI,CAAE,CAAE;AACtD,oBAAQ,cAAc,KAAM,YAAa,KAAK,IAAI,CAAE,CAAE;AAEtD,oBAAQ,eAAe,KAAM,kBAAmB,KAAK,CAAE,CAAE;AACzD,oBAAQ,eAAe,KAAM,kBAAmB,KAAK,IAAI,CAAE,CAAE;AAC7D,oBAAQ,eAAe,KAAM,kBAAmB,KAAK,IAAI,CAAE,CAAE;AAC7D,oBAAQ,eAAe,KAAM,kBAAmB,KAAK,IAAI,CAAE,CAAE;AAE7D,oBAAQ,eAAe,KAAM,kBAAmB,KAAK,CAAE,CAAE;AACzD,oBAAQ,eAAe,KAAM,kBAAmB,KAAK,IAAI,CAAE,CAAE;AAC7D,oBAAQ,eAAe,KAAM,kBAAmB,KAAK,IAAI,CAAE,CAAE;AAC7D,oBAAQ,eAAe,KAAM,kBAAmB,KAAK,IAAI,CAAE,CAAE;AAE7D,oBAAQ,eAAe,KAAM,kBAAmB,KAAK,CAAE,CAAE;AACzD,oBAAQ,eAAe,KAAM,kBAAmB,KAAK,IAAI,CAAE,CAAE;AAC7D,oBAAQ,eAAe,KAAM,kBAAmB,KAAK,IAAI,CAAE,CAAE;AAC7D,oBAAQ,eAAe,KAAM,kBAAmB,KAAK,IAAI,CAAE,CAAE;AAAA,UAE9D;AAEA,cAAK,QAAQ,OAAQ;AAEpB,oBAAQ,OAAO,KAAM,WAAY,KAAK,CAAE,CAAE;AAC1C,oBAAQ,OAAO,KAAM,WAAY,KAAK,IAAI,CAAE,CAAE;AAC9C,oBAAQ,OAAO,KAAM,WAAY,KAAK,IAAI,CAAE,CAAE;AAE9C,oBAAQ,OAAO,KAAM,WAAY,KAAK,CAAE,CAAE;AAC1C,oBAAQ,OAAO,KAAM,WAAY,KAAK,IAAI,CAAE,CAAE;AAC9C,oBAAQ,OAAO,KAAM,WAAY,KAAK,IAAI,CAAE,CAAE;AAE9C,oBAAQ,OAAO,KAAM,WAAY,KAAK,CAAE,CAAE;AAC1C,oBAAQ,OAAO,KAAM,WAAY,KAAK,IAAI,CAAE,CAAE;AAC9C,oBAAQ,OAAO,KAAM,WAAY,KAAK,IAAI,CAAE,CAAE;AAAA,UAE/C;AAEA,cAAK,QAAQ,YAAY,QAAQ,SAAS,gBAAgB,WAAY;AAErE,oBAAQ,cAAc,KAAM,aAAc;AAC1C,oBAAQ,cAAc,KAAM,aAAc;AAC1C,oBAAQ,cAAc,KAAM,aAAc;AAAA,UAE3C;AAEA,cAAK,QAAQ,QAAS;AAErB,oBAAQ,OAAO,KAAM,YAAa,KAAK,CAAE,CAAE;AAC3C,oBAAQ,OAAO,KAAM,YAAa,KAAK,IAAI,CAAE,CAAE;AAC/C,oBAAQ,OAAO,KAAM,YAAa,KAAK,IAAI,CAAE,CAAE;AAE/C,oBAAQ,OAAO,KAAM,YAAa,KAAK,CAAE,CAAE;AAC3C,oBAAQ,OAAO,KAAM,YAAa,KAAK,IAAI,CAAE,CAAE;AAC/C,oBAAQ,OAAO,KAAM,YAAa,KAAK,IAAI,CAAE,CAAE;AAE/C,oBAAQ,OAAO,KAAM,YAAa,KAAK,CAAE,CAAE;AAC3C,oBAAQ,OAAO,KAAM,YAAa,KAAK,IAAI,CAAE,CAAE;AAC/C,oBAAQ,OAAO,KAAM,YAAa,KAAK,IAAI,CAAE,CAAE;AAAA,UAEhD;AAEA,cAAK,QAAQ,IAAK;AAEjB,oBAAQ,GAAG,QAAS,SAAW,IAAI,GAAI;AAEtC,kBAAK,QAAQ,IAAK,CAAE,MAAM,OAAY,SAAQ,IAAK,CAAE,IAAI,CAAC;AAE1D,sBAAQ,IAAK,CAAE,EAAE,KAAM,QAAS,CAAE,EAAG,KAAK,CAAE,CAAE;AAC9C,sBAAQ,IAAK,CAAE,EAAE,KAAM,QAAS,CAAE,EAAG,KAAK,IAAI,CAAE,CAAE;AAElD,sBAAQ,IAAK,CAAE,EAAE,KAAM,QAAS,CAAE,EAAG,KAAK,CAAE,CAAE;AAC9C,sBAAQ,IAAK,CAAE,EAAE,KAAM,QAAS,CAAE,EAAG,KAAK,IAAI,CAAE,CAAE;AAElD,sBAAQ,IAAK,CAAE,EAAE,KAAM,QAAS,CAAE,EAAG,KAAK,CAAE,CAAE;AAC9C,sBAAQ,IAAK,CAAE,EAAE,KAAM,QAAS,CAAE,EAAG,KAAK,IAAI,CAAE,CAAE;AAAA,YAEnD,CAAE;AAAA,UAEH;AAAA,QAED;AAAA,MAED;AAAA,MAEA,gBAAiB,WAAW,eAAe,cAAc,cAAe;AAEvE,YAAK,aAAa,WAAW,EAAI;AAEjC,kBAAU,uBAAuB;AAEjC,kBAAU,gBAAgB,WAAW,CAAC;AAGtC,cAAM,QAAQ;AACd,qBAAa,QAAS,SAAW,aAAc;AAE9C,sBAAY,WAAW,QAAS,SAAW,WAAY;AAEtD,kBAAM,eAAe,QAAQ,QAAQ,SAAU,UAAU,KAAM;AAE/D,gBAAK,iBAAiB,QAAY;AAEjC,oBAAM,iBAAkB,WAAW,eAAe,cAAc,cAAc,UAAU,IAAK;AAAA,YAE9F;AAAA,UAED,CAAE;AAAA,QAEH,CAAE;AAAA,MAEH;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,iBAAkB,WAAW,eAAe,cAAc,cAAc,MAAO;AAE9E,cAAM,gBAAkB,cAAc,uBAAuB,SAAc,cAAc,mBAAmB,IAAI,CAAC;AAEjH,cAAM,uBAAyB,aAAa,aAAa,SAAc,aAAa,SAAS,IAAI,CAAC;AAClG,cAAM,UAAY,aAAa,YAAY,SAAc,aAAa,QAAQ,IAAI,CAAC;AAEnF,cAAM,SAAS,UAAU,WAAW,SAAS,QAAQ;AACrD,cAAM,iBAAiB,IAAI,aAAc,MAAO;AAEhD,iBAAU,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAO;AAE3C,gBAAM,aAAa,QAAS,CAAE,IAAI;AAElC,yBAAgB,UAAW,IAAI,qBAAsB,IAAI,CAAE;AAC3D,yBAAgB,aAAa,CAAE,IAAI,qBAAsB,IAAI,IAAI,CAAE;AACnE,yBAAgB,aAAa,CAAE,IAAI,qBAAsB,IAAI,IAAI,CAAE;AAAA,QAEpE;AAGA,cAAM,eAAe;AAAA,UACpB;AAAA,UACA,iBAAiB;AAAA,QAElB;AAEA,cAAM,eAAe,KAAK,WAAY,YAAa;AAEnD,cAAM,oBAAoB,IAAI,uBAAwB,aAAa,QAAQ,CAAE;AAC7E,0BAAkB,OAAO,QAAQ,aAAa;AAE9C,0BAAkB,aAAc,YAAa;AAE7C,kBAAU,gBAAgB,SAAS,KAAM,iBAAkB;AAAA,MAE5D;AAAA;AAAA,MAGA,aAAc,YAAa;AAE1B,cAAM,cAAc,WAAW;AAC/B,cAAM,gBAAgB,WAAW;AACjC,cAAM,SAAS,WAAW,QAAQ;AAClC,YAAI,cAAc,CAAC;AACnB,YAAK,kBAAkB,iBAAkB;AAExC,cAAK,iBAAiB,YAAa;AAElC,0BAAc,WAAW,YAAY;AAAA,UAEtC,WAAY,kBAAkB,YAAa;AAE1C,0BAAc,WAAW,aAAa;AAAA,UAEvC;AAAA,QAED;AAEA,eAAO;AAAA,UACN,UAAU;AAAA,UACV;AAAA,UACA,SAAS;AAAA,UACT;AAAA,UACA;AAAA,QACD;AAAA,MAED;AAAA;AAAA,MAGA,SAAU,QAAS;AAElB,cAAM,cAAc,OAAO;AAC3B,cAAM,gBAAgB,OAAO;AAC7B,cAAM,SAAS,OAAO,GAAG;AACzB,YAAI,cAAc,CAAC;AACnB,YAAK,kBAAkB,iBAAkB;AAExC,wBAAc,OAAO,QAAQ;AAAA,QAE9B;AAEA,eAAO;AAAA,UACN,UAAU;AAAA,UACV;AAAA,UACA,SAAS;AAAA,UACT;AAAA,UACA;AAAA,QACD;AAAA,MAED;AAAA;AAAA,MAGA,kBAAmB,WAAY;AAE9B,cAAM,cAAc,UAAU;AAC9B,cAAM,gBAAgB,UAAU;AAChC,cAAM,SAAS,UAAU,OAAO;AAChC,YAAI,cAAc,CAAC;AACnB,YAAK,kBAAkB,iBAAkB;AAExC,wBAAc,UAAU,WAAW;AAAA,QAEpC;AAEA,iBAAU,IAAI,GAAG,IAAI,IAAI,MAAM,GAAG,IAAI,OAAO,QAAQ,KAAK,GAAI;AAE7D,YAAE,UAAW,QAAQ,CAAE,EAAE,oBAAoB,EAAE,QAAS,QAAQ,CAAE;AAAA,QAEnE;AAEA,eAAO;AAAA,UACN,UAAU;AAAA,UACV;AAAA,UACA,SAAS;AAAA,UACT;AAAA,UACA;AAAA,QACD;AAAA,MAED;AAAA;AAAA,MAGA,qBAAsB,cAAe;AAEpC,cAAM,cAAc,aAAa;AACjC,cAAM,gBAAgB,aAAa;AAEnC,YAAK,gBAAgB,wBAAyB;AAE7C,iBAAO;AAAA,YACN,UAAU;AAAA,YACV,QAAQ,CAAE,CAAE;AAAA,YACZ,SAAS,CAAE,CAAE;AAAA,YACb,aAAa;AAAA,YACb;AAAA,UACD;AAAA,QAED;AAEA,cAAM,sBAAsB,aAAa,UAAU;AAKnD,cAAM,kBAAkB,CAAC;AAEzB,iBAAU,IAAI,GAAG,IAAI,oBAAoB,QAAQ,EAAG,GAAI;AAEvD,0BAAgB,KAAM,CAAE;AAAA,QAEzB;AAEA,eAAO;AAAA,UACN,UAAU;AAAA,UACV,QAAQ;AAAA,UACR,SAAS;AAAA,UACT;AAAA,UACA;AAAA,QACD;AAAA,MAED;AAAA;AAAA,MAGA,mBAAoB,SAAU;AAE7B,cAAM,QAAQ,SAAU,QAAQ,KAAM;AAEtC,YAAK,MAAO,KAAM,GAAI;AAErB,kBAAQ,MAAO,+DAA+D,QAAQ,OAAO,QAAQ,EAAG;AACxG,iBAAO,IAAI,eAAe;AAAA,QAE3B;AAEA,cAAM,SAAS,QAAQ;AAEvB,cAAM,QAAQ,QAAQ,WAAW;AACjC,cAAM,gBAAgB,CAAC;AACvB,cAAM,eAAe,QAAQ,OAAO;AAEpC,iBAAU,IAAI,GAAG,IAAI,aAAa,QAAQ,IAAI,GAAG,KAAK,GAAI;AAEzD,wBAAc,KAAM,IAAI,QAAQ,EAAE,UAAW,cAAc,CAAE,CAAE;AAAA,QAEhE;AAEA,YAAI,WAAW;AAEf,YAAK,QAAQ,SAAS,UAAW;AAEhC,wBAAc,KAAM,cAAe,CAAE,CAAE;AAAA,QAExC,WAAY,QAAQ,SAAS,YAAa;AAEzC,sBAAY;AACZ,oBAAU,MAAM,SAAS,IAAI;AAE7B,mBAAU,IAAI,GAAG,IAAI,QAAQ,EAAG,GAAI;AAEnC,0BAAc,KAAM,cAAe,CAAE,CAAE;AAAA,UAExC;AAAA,QAED;AAEA,cAAM,QAAQ,IAAI,WAAY,QAAQ,OAAO,eAAe,WAAW,OAAQ;AAC/E,cAAM,SAAS,MAAM,UAAW,cAAc,SAAS,EAAG;AAE1D,eAAO,IAAI,eAAe,EAAE,cAAe,MAAO;AAAA,MAEnD;AAAA,IAED;AAGA,IAAM,kBAAN,MAAsB;AAAA;AAAA,MAGrB,QAAQ;AAEP,cAAM,iBAAiB,CAAC;AAExB,cAAM,WAAW,KAAK,WAAW;AAEjC,YAAK,aAAa,QAAY;AAE7B,qBAAY,OAAO,UAAW;AAE7B,kBAAM,UAAU,SAAU,GAAI;AAE9B,kBAAM,OAAO,KAAK,QAAS,OAAQ;AAEnC,2BAAe,KAAM,IAAK;AAAA,UAE3B;AAAA,QAED;AAEA,eAAO;AAAA,MAER;AAAA,MAEA,aAAa;AAIZ,YAAK,QAAQ,QAAQ,mBAAmB,OAAY,QAAO;AAE3D,cAAM,gBAAgB,KAAK,yBAAyB;AAEpD,aAAK,qBAAsB,aAAc;AAEzC,cAAM,YAAY,KAAK,qBAAsB,aAAc;AAC3D,cAAM,WAAW,KAAK,gBAAiB,SAAU;AAEjD,eAAO;AAAA,MAER;AAAA;AAAA;AAAA;AAAA,MAKA,2BAA2B;AAE1B,cAAM,gBAAgB,QAAQ,QAAQ;AAEtC,cAAM,gBAAgB,oBAAI,IAAI;AAE9B,mBAAY,UAAU,eAAgB;AAErC,gBAAM,eAAe,cAAe,MAAO;AAE3C,cAAK,aAAa,SAAS,MAAO,qBAAsB,MAAM,MAAO;AAEpE,kBAAM,YAAY;AAAA,cAEjB,IAAI,aAAa;AAAA,cACjB,MAAM,aAAa;AAAA,cACnB,QAAQ,CAAC;AAAA,YAEV;AAEA,0BAAc,IAAK,UAAU,IAAI,SAAU;AAAA,UAE5C;AAAA,QAED;AAEA,eAAO;AAAA,MAER;AAAA;AAAA;AAAA;AAAA,MAKA,qBAAsB,eAAgB;AAErC,cAAM,YAAY,QAAQ,QAAQ;AASlC,mBAAY,UAAU,WAAY;AAEjC,gBAAM,iBAAiB;AAAA,YAEtB,IAAI,UAAW,MAAO,EAAE;AAAA,YACxB,OAAO,UAAW,MAAO,EAAE,QAAQ,EAAE,IAAK,uBAAwB;AAAA,YAClE,QAAQ,UAAW,MAAO,EAAE,cAAc;AAAA,UAE3C;AAEA,gBAAM,gBAAgB,YAAY,IAAK,eAAe,EAAG;AAEzD,cAAK,kBAAkB,QAAY;AAElC,kBAAM,mBAAmB,cAAc,QAAS,CAAE,EAAE;AACpD,kBAAM,6BAA6B,cAAc,QAAS,CAAE,EAAE;AAE9D,gBAAK,2BAA2B,MAAO,GAAI,GAAI;AAE9C,4BAAc,IAAK,gBAAiB,EAAE,OAAQ,GAAI,IAAI;AAAA,YAEvD,WAAY,2BAA2B,MAAO,GAAI,GAAI;AAErD,4BAAc,IAAK,gBAAiB,EAAE,OAAQ,GAAI,IAAI;AAAA,YAEvD,WAAY,2BAA2B,MAAO,GAAI,GAAI;AAErD,4BAAc,IAAK,gBAAiB,EAAE,OAAQ,GAAI,IAAI;AAAA,YAEvD,WAAY,2BAA2B,MAAO,eAAgB,KAAK,cAAc,IAAK,gBAAiB,GAAI;AAE1G,4BAAc,IAAK,gBAAiB,EAAE,OAAQ,OAAQ,IAAI;AAAA,YAE3D;AAAA,UAED;AAAA,QAED;AAAA,MAED;AAAA;AAAA;AAAA;AAAA,MAKA,qBAAsB,eAAgB;AAErC,cAAM,YAAY,QAAQ,QAAQ;AAElC,cAAM,YAAY,oBAAI,IAAI;AAE1B,mBAAY,UAAU,WAAY;AAEjC,gBAAM,kBAAkB,CAAC;AAEzB,gBAAM,aAAa,YAAY,IAAK,SAAU,MAAO,CAAE;AAEvD,cAAK,eAAe,QAAY;AAG/B,kBAAM,WAAW,WAAW;AAE5B,qBAAS,QAAS,SAAW,OAAO,GAAI;AAEvC,kBAAK,cAAc,IAAK,MAAM,EAAG,GAAI;AAEpC,sBAAM,YAAY,cAAc,IAAK,MAAM,EAAG;AAG9C,oBAAK,UAAU,OAAO,MAAM,UAAa,UAAU,OAAO,MAAM,UAAa,UAAU,OAAO,MAAM,QAAY;AAE/G,sBAAK,gBAAiB,CAAE,MAAM,QAAY;AAEzC,0BAAM,UAAU,YAAY,IAAK,MAAM,EAAG,EAAE,QAAQ,OAAQ,SAAW,QAAS;AAE/E,6BAAO,OAAO,iBAAiB;AAAA,oBAEhC,CAAE,EAAG,CAAE,EAAE;AAET,wBAAK,YAAY,QAAY;AAE5B,4BAAM,WAAW,QAAQ,QAAQ,MAAO,QAAQ,SAAS,CAAE;AAE3D,0BAAK,aAAa,QAAY;AAE7B,gCAAQ,KAAM,gDAAgD,KAAM;AACpE;AAAA,sBAED;AAEA,4BAAM,OAAO;AAAA,wBAEZ,WAAW,SAAS,WAAW,gBAAgB,iBAAkB,SAAS,QAAS,IAAI;AAAA,wBACvF,IAAI,SAAS;AAAA,wBACb,iBAAiB,CAAE,GAAG,GAAG,CAAE;AAAA,wBAC3B,iBAAiB,CAAE,GAAG,GAAG,CAAE;AAAA,wBAC3B,cAAc,CAAE,GAAG,GAAG,CAAE;AAAA,sBAEzB;AAEA,iCAAW,SAAU,SAAWL,QAAQ;AAEvC,4BAAKA,OAAM,OAAO,SAAS,IAAK;AAE/B,+BAAK,YAAYA,OAAM;AAEvB,8BAAKA,OAAM,SAAS,cAAgB,MAAK,aAAaA,OAAM,SAAS,cAAc;AAAA,wBAEpF;AAAA,sBAED,CAAE;AAEF,0BAAK,CAAE,KAAK,UAAY,MAAK,YAAY,IAAI,QAAQ;AAIrD,0BAAK,iBAAiB,SAAW,MAAK,cAAc,SAAS,YAAY;AACzE,0BAAK,kBAAkB,SAAW,MAAK,eAAe,SAAS,aAAa;AAE5E,sCAAiB,CAAE,IAAI;AAAA,oBAExB;AAAA,kBAED;AAEA,sBAAK,gBAAiB,CAAE,EAAI,iBAAiB,CAAE,EAAG,UAAU,IAAK,IAAI;AAAA,gBAEtE,WAAY,UAAU,OAAO,UAAU,QAAY;AAElD,sBAAK,gBAAiB,CAAE,MAAM,QAAY;AAEzC,0BAAM,aAAa,YAAY,IAAK,MAAM,EAAG,EAAE,QAAQ,OAAQ,SAAW,QAAS;AAElF,6BAAO,OAAO,iBAAiB;AAAA,oBAEhC,CAAE,EAAG,CAAE,EAAE;AAET,0BAAM,YAAY,YAAY,IAAK,UAAW,EAAE,QAAS,CAAE,EAAE;AAC7D,0BAAM,QAAQ,YAAY,IAAK,SAAU,EAAE,QAAS,CAAE,EAAE;AAGxD,0BAAM,UAAU,YAAY,IAAK,KAAM,EAAE,QAAS,CAAE,EAAE;AAEtD,0BAAM,WAAW,QAAQ,QAAQ,MAAO,OAAQ;AAEhD,0BAAM,OAAO;AAAA,sBAEZ,WAAW,SAAS,WAAW,gBAAgB,iBAAkB,SAAS,QAAS,IAAI;AAAA,sBACvF,WAAW,QAAQ,QAAQ,SAAU,UAAW,EAAE;AAAA,oBAEnD;AAEA,oCAAiB,CAAE,IAAI;AAAA,kBAExB;AAEA,kCAAiB,CAAE,EAAG,UAAU,IAAK,IAAI;AAAA,gBAE1C;AAAA,cAED;AAAA,YAED,CAAE;AAEF,sBAAU,IAAK,SAAU,MAAO,GAAG,eAAgB;AAAA,UAEpD;AAAA,QAED;AAEA,eAAO;AAAA,MAER;AAAA;AAAA;AAAA,MAIA,gBAAiB,WAAY;AAE5B,cAAM,YAAY,QAAQ,QAAQ;AAGlC,cAAM,WAAW,CAAC;AAElB,mBAAY,UAAU,WAAY;AAEjC,gBAAM,WAAW,YAAY,IAAK,SAAU,MAAO,CAAE,EAAE;AAEvD,cAAK,SAAS,SAAS,GAAI;AAI1B,oBAAQ,KAAM,oIAAqI;AAAA,UAEpJ;AAEA,gBAAM,QAAQ,UAAU,IAAK,SAAU,CAAE,EAAE,EAAG;AAE9C,mBAAU,MAAO,IAAI;AAAA,YAEpB,MAAM,UAAW,MAAO,EAAE;AAAA,YAC1B;AAAA,UAED;AAAA,QAED;AAEA,eAAO;AAAA,MAER;AAAA,MAEA,QAAS,SAAU;AAElB,YAAI,SAAS,CAAC;AAEd,cAAM,QAAQ;AACd,gBAAQ,MAAM,QAAS,SAAW,WAAY;AAE7C,mBAAS,OAAO,OAAQ,MAAM,eAAgB,SAAU,CAAE;AAAA,QAE3D,CAAE;AAEF,eAAO,IAAI,cAAe,QAAQ,MAAM,IAAK,MAAO;AAAA,MAErD;AAAA,MAEA,eAAgB,WAAY;AAE3B,cAAM,SAAS,CAAC;AAEhB,YAAI,kBAAkB,IAAI,QAAQ;AAClC,YAAI,eAAe,IAAI,QAAQ;AAE/B,YAAK,UAAU,UAAY,WAAU,UAAU,UAAW,iBAAiB,IAAI,WAAW,GAAG,YAAa;AAE1G,0BAAkB,gBAAgB,QAAQ;AAC1C,uBAAe,aAAa,QAAQ;AAEpC,YAAK,UAAU,MAAM,UAAa,OAAO,KAAM,UAAU,EAAE,MAAO,EAAE,SAAS,GAAI;AAEhF,gBAAM,gBAAgB,KAAK,oBAAqB,UAAU,WAAW,UAAU,EAAE,QAAQ,iBAAiB,UAAW;AACrH,cAAK,kBAAkB,OAAY,QAAO,KAAM,aAAc;AAAA,QAE/D;AAEA,YAAK,UAAU,MAAM,UAAa,OAAO,KAAM,UAAU,EAAE,MAAO,EAAE,SAAS,GAAI;AAEhF,gBAAM,gBAAgB,KAAK,sBAAuB,UAAU,WAAW,UAAU,EAAE,QAAQ,UAAU,aAAa,UAAU,cAAc,UAAU,UAAW;AAC/J,cAAK,kBAAkB,OAAY,QAAO,KAAM,aAAc;AAAA,QAE/D;AAEA,YAAK,UAAU,MAAM,UAAa,OAAO,KAAM,UAAU,EAAE,MAAO,EAAE,SAAS,GAAI;AAEhF,gBAAM,aAAa,KAAK,oBAAqB,UAAU,WAAW,UAAU,EAAE,QAAQ,cAAc,OAAQ;AAC5G,cAAK,eAAe,OAAY,QAAO,KAAM,UAAW;AAAA,QAEzD;AAEA,YAAK,UAAU,kBAAkB,QAAY;AAE5C,gBAAM,aAAa,KAAK,mBAAoB,SAAU;AACtD,cAAK,eAAe,OAAY,QAAO,KAAM,UAAW;AAAA,QAEzD;AAEA,eAAO;AAAA,MAER;AAAA,MAEA,oBAAqB,WAAW,QAAQ,cAAc,MAAO;AAE5D,cAAM,QAAQ,KAAK,mBAAoB,MAAO;AAC9C,cAAM,SAAS,KAAK,uBAAwB,OAAO,QAAQ,YAAa;AAExE,eAAO,IAAI,oBAAqB,YAAY,MAAM,MAAM,OAAO,MAAO;AAAA,MAEvE;AAAA,MAEA,sBAAuB,WAAW,QAAQ,aAAa,cAAc,YAAa;AAEjF,YAAI;AACJ,YAAI;AAEJ,YAAK,OAAO,MAAM,UAAa,OAAO,MAAM,UAAa,OAAO,MAAM,QAAY;AAEjF,gBAAM,SAAS,KAAK,qBAAsB,OAAO,GAAG,OAAO,GAAG,OAAO,GAAG,UAAW;AAEnF,kBAAQ,OAAQ,CAAE;AAClB,mBAAS,OAAQ,CAAE;AAAA,QAEpB;AAEA,YAAK,gBAAgB,QAAY;AAEhC,wBAAc,YAAY,IAAK,UAAU,QAAS;AAClD,sBAAY,KAAM,UAAW;AAE7B,wBAAc,IAAI,MAAM,EAAE,UAAW,WAAY;AACjD,wBAAc,IAAI,WAAW,EAAE,aAAc,WAAY;AAAA,QAE1D;AAEA,YAAK,iBAAiB,QAAY;AAEjC,yBAAe,aAAa,IAAK,UAAU,QAAS;AACpD,uBAAa,KAAM,UAAW;AAE9B,yBAAe,IAAI,MAAM,EAAE,UAAW,YAAa;AACnD,yBAAe,IAAI,WAAW,EAAE,aAAc,YAAa,EAAE,OAAO;AAAA,QAErE;AAEA,cAAM,aAAa,IAAI,WAAW;AAClC,cAAM,QAAQ,IAAI,MAAM;AAExB,cAAM,mBAAmB,CAAC;AAE1B,YAAK,CAAE,UAAU,CAAE,MAAQ,QAAO,IAAI,wBAAyB,YAAY,eAAe,CAAE,CAAE,GAAG,CAAE,CAAE,CAAE;AAEvG,iBAAU,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK,GAAI;AAE5C,gBAAM,IAAK,OAAQ,CAAE,GAAG,OAAQ,IAAI,CAAE,GAAG,OAAQ,IAAI,CAAE,GAAG,UAAW;AACrE,qBAAW,aAAc,KAAM;AAE/B,cAAK,gBAAgB,OAAY,YAAW,YAAa,WAAY;AACrE,cAAK,iBAAiB,OAAY,YAAW,SAAU,YAAa;AAGpE,cAAK,IAAI,GAAI;AAEZ,kBAAM,WAAW,IAAI,WAAW,EAAE;AAAA,cACjC;AAAA,eACI,IAAI,KAAM,IAAM;AAAA,YACrB;AAEA,gBAAK,SAAS,IAAK,UAAW,IAAI,GAAI;AAErC,yBAAW,IAAK,CAAE,WAAW,GAAG,CAAE,WAAW,GAAG,CAAE,WAAW,GAAG,CAAE,WAAW,CAAE;AAAA,YAEhF;AAAA,UAED;AAEA,qBAAW,QAAS,kBAAoB,IAAI,IAAM,CAAE;AAAA,QAErD;AAEA,eAAO,IAAI,wBAAyB,YAAY,eAAe,OAAO,gBAAiB;AAAA,MAExF;AAAA,MAEA,mBAAoB,WAAY;AAE/B,cAAM,SAAS,UAAU,cAAc,OAAO;AAC9C,cAAM,SAAS,OAAO,OAAO,IAAK,SAAW,KAAM;AAElD,iBAAO,MAAM;AAAA,QAEd,CAAE;AAEF,cAAM,WAAW,WAAW,gBAAiB,UAAU,SAAU,EAAE,sBAAuB,UAAU,SAAU;AAE9G,eAAO,IAAI,oBAAqB,UAAU,YAAY,4BAA4B,WAAW,KAAK,OAAO,OAAO,MAAO;AAAA,MAExH;AAAA;AAAA;AAAA,MAIA,mBAAoB,QAAS;AAE5B,YAAI,QAAQ,CAAC;AAGb,YAAK,OAAO,MAAM,OAAY,SAAQ,MAAM,OAAQ,OAAO,EAAE,KAAM;AACnE,YAAK,OAAO,MAAM,OAAY,SAAQ,MAAM,OAAQ,OAAO,EAAE,KAAM;AACnE,YAAK,OAAO,MAAM,OAAY,SAAQ,MAAM,OAAQ,OAAO,EAAE,KAAM;AAGnE,gBAAQ,MAAM,KAAM,SAAW,GAAG,GAAI;AAErC,iBAAO,IAAI;AAAA,QAEZ,CAAE;AAGF,YAAK,MAAM,SAAS,GAAI;AAEvB,cAAI,cAAc;AAClB,cAAI,YAAY,MAAO,CAAE;AACzB,mBAAU,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAO;AAEzC,kBAAM,eAAe,MAAO,CAAE;AAC9B,gBAAK,iBAAiB,WAAY;AAEjC,oBAAO,WAAY,IAAI;AACvB,0BAAY;AACZ;AAAA,YAED;AAAA,UAED;AAEA,kBAAQ,MAAM,MAAO,GAAG,WAAY;AAAA,QAErC;AAEA,eAAO;AAAA,MAER;AAAA,MAEA,uBAAwB,OAAO,QAAQ,cAAe;AAErD,cAAM,YAAY;AAElB,cAAM,SAAS,CAAC;AAEhB,YAAI,SAAS;AACb,YAAI,SAAS;AACb,YAAI,SAAS;AAEb,cAAM,QAAS,SAAW,MAAO;AAEhC,cAAK,OAAO,EAAI,UAAS,OAAO,EAAE,MAAM,QAAS,IAAK;AACtD,cAAK,OAAO,EAAI,UAAS,OAAO,EAAE,MAAM,QAAS,IAAK;AACtD,cAAK,OAAO,EAAI,UAAS,OAAO,EAAE,MAAM,QAAS,IAAK;AAGtD,cAAK,WAAW,IAAM;AAErB,kBAAM,SAAS,OAAO,EAAE,OAAQ,MAAO;AACvC,mBAAO,KAAM,MAAO;AACpB,sBAAW,CAAE,IAAI;AAAA,UAElB,OAAO;AAGN,mBAAO,KAAM,UAAW,CAAE,CAAE;AAAA,UAE7B;AAEA,cAAK,WAAW,IAAM;AAErB,kBAAM,SAAS,OAAO,EAAE,OAAQ,MAAO;AACvC,mBAAO,KAAM,MAAO;AACpB,sBAAW,CAAE,IAAI;AAAA,UAElB,OAAO;AAEN,mBAAO,KAAM,UAAW,CAAE,CAAE;AAAA,UAE7B;AAEA,cAAK,WAAW,IAAM;AAErB,kBAAM,SAAS,OAAO,EAAE,OAAQ,MAAO;AACvC,mBAAO,KAAM,MAAO;AACpB,sBAAW,CAAE,IAAI;AAAA,UAElB,OAAO;AAEN,mBAAO,KAAM,UAAW,CAAE,CAAE;AAAA,UAE7B;AAAA,QAED,CAAE;AAEF,eAAO;AAAA,MAER;AAAA;AAAA;AAAA;AAAA,MAKA,qBAAsB,QAAQ,QAAQ,QAAQ,YAAa;AAE1D,cAAM,QAAQ,CAAC;AACf,cAAM,SAAS,CAAC;AAGhB,cAAM,KAAM,OAAO,MAAO,CAAE,CAAE;AAC9B,eAAO,KAAM,UAAU,SAAU,OAAO,OAAQ,CAAE,CAAE,CAAE;AACtD,eAAO,KAAM,UAAU,SAAU,OAAO,OAAQ,CAAE,CAAE,CAAE;AACtD,eAAO,KAAM,UAAU,SAAU,OAAO,OAAQ,CAAE,CAAE,CAAE;AAEtD,iBAAU,IAAI,GAAG,IAAI,OAAO,OAAO,QAAQ,KAAO;AAEjD,gBAAM,eAAe;AAAA,YACpB,OAAO,OAAQ,IAAI,CAAE;AAAA,YACrB,OAAO,OAAQ,IAAI,CAAE;AAAA,YACrB,OAAO,OAAQ,IAAI,CAAE;AAAA,UACtB;AAEA,cAAK,MAAO,aAAc,CAAE,CAAE,KAAK,MAAO,aAAc,CAAE,CAAE,KAAK,MAAO,aAAc,CAAE,CAAE,GAAI;AAE7F;AAAA,UAED;AAEA,gBAAM,kBAAkB,aAAa,IAAK,UAAU,QAAS;AAE7D,gBAAM,eAAe;AAAA,YACpB,OAAO,OAAQ,CAAE;AAAA,YACjB,OAAO,OAAQ,CAAE;AAAA,YACjB,OAAO,OAAQ,CAAE;AAAA,UAClB;AAEA,cAAK,MAAO,aAAc,CAAE,CAAE,KAAK,MAAO,aAAc,CAAE,CAAE,KAAK,MAAO,aAAc,CAAE,CAAE,GAAI;AAE7F;AAAA,UAED;AAEA,gBAAM,kBAAkB,aAAa,IAAK,UAAU,QAAS;AAE7D,gBAAM,aAAa;AAAA,YAClB,aAAc,CAAE,IAAI,aAAc,CAAE;AAAA,YACpC,aAAc,CAAE,IAAI,aAAc,CAAE;AAAA,YACpC,aAAc,CAAE,IAAI,aAAc,CAAE;AAAA,UACrC;AAEA,gBAAM,eAAe;AAAA,YACpB,KAAK,IAAK,WAAY,CAAE,CAAE;AAAA,YAC1B,KAAK,IAAK,WAAY,CAAE,CAAE;AAAA,YAC1B,KAAK,IAAK,WAAY,CAAE,CAAE;AAAA,UAC3B;AAEA,cAAK,aAAc,CAAE,KAAK,OAAO,aAAc,CAAE,KAAK,OAAO,aAAc,CAAE,KAAK,KAAM;AAEvF,kBAAM,aAAa,KAAK,IAAK,GAAG,YAAa;AAE7C,kBAAM,kBAAkB,aAAa;AAErC,kBAAM,KAAK,IAAI,MAAO,GAAG,iBAAiB,UAAW;AACrD,kBAAM,KAAK,IAAI,MAAO,GAAG,iBAAiB,UAAW;AAErD,kBAAM,KAAK,IAAI,WAAW,EAAE,aAAc,EAAG;AAC7C,kBAAM,KAAK,IAAI,WAAW,EAAE,aAAc,EAAG;AAG7C,gBAAK,GAAG,IAAK,EAAG,GAAI;AAEnB,iBAAG,IAAK,CAAE,GAAG,GAAG,CAAE,GAAG,GAAG,CAAE,GAAG,GAAG,CAAE,GAAG,CAAE;AAAA,YAExC;AAGA,kBAAM,cAAc,OAAO,MAAO,IAAI,CAAE;AACxC,kBAAM,WAAW,OAAO,MAAO,CAAE,IAAI;AAErC,kBAAM,IAAI,IAAI,WAAW;AACzB,kBAAM,IAAI,IAAI,MAAM;AACpB,qBAAU,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,iBAAkB;AAElD,gBAAE,KAAM,GAAG,MAAM,EAAE,MAAO,GAAG,MAAM,GAAG,CAAE,CAAE;AAE1C,oBAAM,KAAM,cAAc,IAAI,QAAS;AACvC,gBAAE,kBAAmB,GAAG,UAAW;AAEnC,qBAAO,KAAM,EAAE,CAAE;AACjB,qBAAO,KAAM,EAAE,CAAE;AACjB,qBAAO,KAAM,EAAE,CAAE;AAAA,YAElB;AAAA,UAED,OAAO;AAEN,kBAAM,KAAM,OAAO,MAAO,CAAE,CAAE;AAC9B,mBAAO,KAAM,UAAU,SAAU,OAAO,OAAQ,CAAE,CAAE,CAAE;AACtD,mBAAO,KAAM,UAAU,SAAU,OAAO,OAAQ,CAAE,CAAE,CAAE;AACtD,mBAAO,KAAM,UAAU,SAAU,OAAO,OAAQ,CAAE,CAAE,CAAE;AAAA,UAEvD;AAAA,QAED;AAEA,eAAO,CAAE,OAAO,MAAO;AAAA,MAExB;AAAA,IAED;AAGA,IAAM,aAAN,MAAiB;AAAA,MAEhB,cAAc;AAEb,eAAO,KAAK,UAAW,KAAK,gBAAgB,CAAE;AAAA,MAE/C;AAAA,MAEA,iBAAiB;AAEhB,eAAO,KAAK,UAAW,KAAK,gBAAgB,CAAE;AAAA,MAE/C;AAAA,MAEA,iBAAiB;AAEhB,eAAO,KAAK;AAAA,MAEb;AAAA,MAEA,UAAW,MAAO;AAEjB,aAAK,UAAU,KAAM,IAAK;AAC1B,aAAK,iBAAiB;AAAA,MAEvB;AAAA,MAEA,WAAW;AAEV,aAAK,UAAU,IAAI;AACnB,aAAK,iBAAiB;AAAA,MAEvB;AAAA,MAEA,eAAgB,KAAK,MAAO;AAE3B,aAAK,cAAc;AACnB,aAAK,kBAAkB;AAAA,MAExB;AAAA,MAEA,MAAO,MAAO;AAEb,aAAK,gBAAgB;AAErB,aAAK,WAAW,IAAI,QAAQ;AAC5B,aAAK,YAAY,CAAC;AAClB,aAAK,cAAc,CAAC;AACpB,aAAK,kBAAkB;AAEvB,cAAM,QAAQ;AAEd,cAAM,QAAQ,KAAK,MAAO,SAAU;AAEpC,cAAM,QAAS,SAAW,MAAM,GAAI;AAEnC,gBAAM,eAAe,KAAK,MAAO,WAAY;AAC7C,gBAAM,aAAa,KAAK,MAAO,WAAY;AAE3C,cAAK,gBAAgB,WAAa;AAElC,gBAAM,iBAAiB,KAAK,MAAO,UAAU,MAAM,gBAAgB,iBAAiB,EAAG;AACvF,gBAAM,gBAAgB,KAAK,MAAO,UAAY,MAAM,gBAAkB,4BAA6B;AACnG,gBAAM,WAAW,KAAK,MAAO,WAAY,MAAM,gBAAgB,KAAM,IAAK;AAE1E,cAAK,gBAAiB;AAErB,kBAAM,eAAgB,MAAM,cAAe;AAAA,UAE5C,WAAY,eAAgB;AAE3B,kBAAM,kBAAmB,MAAM,eAAe,MAAO,EAAG,CAAE,CAAE;AAAA,UAE7D,WAAY,UAAW;AAEtB,kBAAM,SAAS;AAAA,UAEhB,WAAY,KAAK,MAAO,WAAY,GAAI;AAIvC,kBAAM,2BAA4B,IAAK;AAAA,UAExC;AAAA,QAED,CAAE;AAEF,eAAO,KAAK;AAAA,MAEb;AAAA,MAEA,eAAgB,MAAM,UAAW;AAEhC,cAAM,WAAW,SAAU,CAAE,EAAE,KAAK,EAAE,QAAS,MAAM,EAAG,EAAE,QAAS,MAAM,EAAG;AAE5E,cAAM,YAAY,SAAU,CAAE,EAAE,MAAO,GAAI,EAAE,IAAK,SAAW,MAAO;AAEnE,iBAAO,KAAK,KAAK,EAAE,QAAS,MAAM,EAAG,EAAE,QAAS,MAAM,EAAG;AAAA,QAE1D,CAAE;AAEF,cAAM,OAAO,EAAE,MAAM,SAAS;AAC9B,cAAM,QAAQ,KAAK,cAAe,SAAU;AAE5C,cAAM,cAAc,KAAK,eAAe;AAGxC,YAAK,KAAK,kBAAkB,GAAI;AAE/B,eAAK,SAAS,IAAK,UAAU,IAAK;AAAA,QAEnC,OAAO;AAGN,cAAK,YAAY,aAAc;AAG9B,gBAAK,aAAa,YAAa;AAE9B,0BAAY,SAAS,KAAM,IAAK;AAAA,YAEjC,WAAY,YAAa,QAAS,EAAE,OAAO,QAAY;AAEtD,0BAAa,QAAS,IAAI,CAAC;AAC3B,0BAAa,QAAS,EAAG,YAAa,QAAS,EAAE,EAAG,IAAI,YAAa,QAAS;AAAA,YAE/E;AAEA,gBAAK,MAAM,OAAO,GAAK,aAAa,QAAS,EAAG,MAAM,EAAG,IAAI;AAAA,UAE9D,WAAY,OAAO,MAAM,OAAO,UAAW;AAE1C,wBAAa,QAAS,IAAI,CAAC;AAC3B,wBAAa,QAAS,EAAG,MAAM,EAAG,IAAI;AAAA,UAEvC,WAAY,aAAa,gBAAiB;AAEzC,gBAAK,aAAa,WAAa,aAAa,QAAS,IAAI,CAAE,IAAK;AAAA,gBAC3D,aAAa,QAAS,IAAI;AAAA,UAEhC;AAAA,QAED;AAEA,YAAK,OAAO,MAAM,OAAO,SAAW,MAAK,KAAK,MAAM;AACpD,YAAK,MAAM,SAAS,GAAK,MAAK,WAAW,MAAM;AAC/C,YAAK,MAAM,SAAS,GAAK,MAAK,WAAW,MAAM;AAE/C,aAAK,UAAW,IAAK;AAAA,MAEtB;AAAA,MAEA,cAAe,OAAQ;AAEtB,YAAI,KAAK,MAAO,CAAE;AAElB,YAAK,MAAO,CAAE,MAAM,IAAK;AAExB,eAAK,SAAU,MAAO,CAAE,CAAE;AAE1B,cAAK,MAAO,EAAG,GAAI;AAElB,iBAAK,MAAO,CAAE;AAAA,UAEf;AAAA,QAED;AAEA,YAAI,OAAO,IAAI,OAAO;AAEtB,YAAK,MAAM,SAAS,GAAI;AAEvB,iBAAO,MAAO,CAAE,EAAE,QAAS,YAAY,EAAG;AAC1C,iBAAO,MAAO,CAAE;AAAA,QAEjB;AAEA,eAAO,EAAE,IAAQ,MAAY,KAAW;AAAA,MAEzC;AAAA,MAEA,kBAAmB,MAAM,UAAU,aAAc;AAEhD,YAAI,WAAW,SAAU,CAAE,EAAE,QAAS,MAAM,EAAG,EAAE,QAAS,MAAM,EAAG,EAAE,KAAK;AAC1E,YAAI,YAAY,SAAU,CAAE,EAAE,QAAS,MAAM,EAAG,EAAE,QAAS,MAAM,EAAG,EAAE,KAAK;AAK3E,YAAK,aAAa,aAAa,cAAc,KAAM;AAElD,sBAAY,YAAY,QAAS,MAAM,EAAG,EAAE,QAAS,MAAM,EAAG,EAAE,KAAK;AAAA,QAEtE;AAEA,cAAM,cAAc,KAAK,eAAe;AACxC,cAAM,aAAa,YAAY;AAE/B,YAAK,eAAe,gBAAiB;AAEpC,eAAK,yBAA0B,MAAM,UAAU,SAAU;AACzD;AAAA,QAED;AAGA,YAAK,aAAa,KAAM;AAEvB,gBAAM,YAAY,UAAU,MAAO,GAAI,EAAE,MAAO,CAAE;AAClD,gBAAM,OAAO,SAAU,UAAW,CAAE,CAAE;AACtC,gBAAM,KAAK,SAAU,UAAW,CAAE,CAAE;AAEpC,cAAI,OAAO,UAAU,MAAO,GAAI,EAAE,MAAO,CAAE;AAE3C,iBAAO,KAAK,IAAK,SAAW,MAAO;AAElC,mBAAO,KAAK,KAAK,EAAE,QAAS,MAAM,EAAG;AAAA,UAEtC,CAAE;AAEF,qBAAW;AACX,sBAAY,CAAE,MAAM,EAAG;AACvB,iBAAQ,WAAW,IAAK;AAExB,cAAK,YAAa,QAAS,MAAM,QAAY;AAE5C,wBAAa,QAAS,IAAI,CAAC;AAAA,UAE5B;AAAA,QAED;AAGA,YAAK,aAAa,OAAS,aAAY,KAAK;AAG5C,YAAK,YAAY,eAAe,MAAM,QAAS,YAAa,QAAS,CAAE,GAAI;AAE1E,sBAAa,QAAS,EAAE,KAAM,SAAU;AAAA,QAEzC,OAAO;AAEN,cAAK,aAAa,IAAM,aAAa,QAAS,IAAI;AAAA,cAC7C,aAAY,IAAI;AAAA,QAEtB;AAEA,aAAK,eAAgB,aAAa,QAAS;AAG3C,YAAK,aAAa,OAAO,UAAU,MAAO,EAAI,MAAM,KAAM;AAEzD,sBAAY,IAAI,iBAAkB,SAAU;AAAA,QAE7C;AAAA,MAED;AAAA,MAEA,2BAA4B,MAAO;AAElC,cAAM,cAAc,KAAK,eAAe;AAExC,oBAAY,KAAK;AAIjB,YAAK,KAAK,MAAO,EAAI,MAAM,KAAM;AAEhC,sBAAY,IAAI,iBAAkB,YAAY,CAAE;AAAA,QAEjD;AAAA,MAED;AAAA;AAAA,MAGA,yBAA0B,MAAM,UAAU,WAAY;AAMrD,cAAM,QAAQ,UAAU,MAAO,IAAK,EAAE,IAAK,SAAW,MAAO;AAE5D,iBAAO,KAAK,KAAK,EAAE,QAAS,OAAO,EAAG,EAAE,QAAS,MAAM,GAAI;AAAA,QAE5D,CAAE;AAEF,cAAM,gBAAgB,MAAO,CAAE;AAC/B,cAAM,iBAAiB,MAAO,CAAE;AAChC,cAAM,iBAAiB,MAAO,CAAE;AAChC,cAAM,gBAAgB,MAAO,CAAE;AAC/B,YAAI,iBAAiB,MAAO,CAAE;AAG9B,gBAAS,gBAAiB;AAAA,UAEzB,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACJ,6BAAiB,WAAY,cAAe;AAC5C;AAAA,UAED,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AACJ,6BAAiB,iBAAkB,cAAe;AAClD;AAAA,QAEF;AAGA,aAAK,YAAY,EAAG,aAAc,IAAI;AAAA,UAErC,QAAQ;AAAA,UACR,SAAS;AAAA,UACT,QAAQ;AAAA,UACR,SAAS;AAAA,QAEV;AAEA,aAAK,eAAgB,KAAK,YAAY,GAAG,aAAc;AAAA,MAExD;AAAA,IAED;AAGA,IAAM,eAAN,MAAmB;AAAA,MAElB,MAAO,QAAS;AAEf,cAAM,SAAS,IAAI,aAAc,MAAO;AACxC,eAAO,KAAM,EAAG;AAEhB,cAAM,UAAU,OAAO,UAAU;AAEjC,YAAK,UAAU,MAAO;AAErB,gBAAM,IAAI,MAAO,8DAA8D,OAAQ;AAAA,QAExF;AAEA,cAAM,WAAW,IAAI,QAAQ;AAE7B,eAAQ,CAAE,KAAK,aAAc,MAAO,GAAI;AAEvC,gBAAM,OAAO,KAAK,UAAW,QAAQ,OAAQ;AAC7C,cAAK,SAAS,KAAO,UAAS,IAAK,KAAK,MAAM,IAAK;AAAA,QAEpD;AAEA,eAAO;AAAA,MAER;AAAA;AAAA,MAGA,aAAc,QAAS;AAUtB,YAAK,OAAO,KAAK,IAAI,OAAO,GAAI;AAE/B,kBAAW,OAAO,UAAU,IAAI,MAAM,KAAO,CAAE,OAAS,OAAO,KAAK;AAAA,QAErE,OAAO;AAEN,iBAAO,OAAO,UAAU,IAAI,MAAM,MAAM,OAAO,KAAK;AAAA,QAErD;AAAA,MAED;AAAA;AAAA,MAGA,UAAW,QAAQ,SAAU;AAE5B,cAAM,OAAO,CAAC;AAGd,cAAM,YAAc,WAAW,OAAS,OAAO,UAAU,IAAI,OAAO,UAAU;AAC9E,cAAM,gBAAkB,WAAW,OAAS,OAAO,UAAU,IAAI,OAAO,UAAU;AAElF,QAAE,WAAW,OAAS,OAAO,UAAU,IAAI,OAAO,UAAU;AAE5D,cAAM,UAAU,OAAO,SAAS;AAChC,cAAM,OAAO,OAAO,UAAW,OAAQ;AAGvC,YAAK,cAAc,EAAI,QAAO;AAE9B,cAAM,eAAe,CAAC;AAEtB,iBAAU,IAAI,GAAG,IAAI,eAAe,KAAO;AAE1C,uBAAa,KAAM,KAAK,cAAe,MAAO,CAAE;AAAA,QAEjD;AAGA,cAAM,KAAK,aAAa,SAAS,IAAI,aAAc,CAAE,IAAI;AACzD,cAAM,WAAW,aAAa,SAAS,IAAI,aAAc,CAAE,IAAI;AAC/D,cAAM,WAAW,aAAa,SAAS,IAAI,aAAc,CAAE,IAAI;AAI/D,aAAK,iBAAmB,kBAAkB,KAAK,OAAO,UAAU,MAAM,YAAc,OAAO;AAE3F,eAAQ,YAAY,OAAO,UAAU,GAAI;AAExC,gBAAM,UAAU,KAAK,UAAW,QAAQ,OAAQ;AAEhD,cAAK,YAAY,KAAO,MAAK,aAAc,MAAM,MAAM,OAAQ;AAAA,QAEhE;AAEA,aAAK,eAAe;AAEpB,YAAK,OAAO,OAAO,SAAW,MAAK,KAAK;AACxC,YAAK,aAAa,GAAK,MAAK,WAAW;AACvC,YAAK,aAAa,GAAK,MAAK,WAAW;AACvC,YAAK,SAAS,GAAK,MAAK,OAAO;AAE/B,eAAO;AAAA,MAER;AAAA,MAEA,aAAc,MAAM,MAAM,SAAU;AAGnC,YAAK,QAAQ,mBAAmB,MAAO;AAEtC,gBAAM,QAAQ,QAAQ,aAAc,CAAE;AAEtC,cAAK,MAAM,QAAS,KAAM,GAAI;AAE7B,iBAAM,QAAQ,IAAK,IAAI;AAEvB,oBAAQ,IAAI;AAAA,UAEb,OAAO;AAEN,iBAAM,QAAQ,IAAK,IAAI;AAAA,UAExB;AAAA,QAED,WAAY,SAAS,iBAAiB,QAAQ,SAAS,KAAM;AAE5D,gBAAM,QAAQ,CAAC;AAEf,kBAAQ,aAAa,QAAS,SAAW,UAAU,GAAI;AAGtD,gBAAK,MAAM,EAAI,OAAM,KAAM,QAAS;AAAA,UAErC,CAAE;AAEF,cAAK,KAAK,gBAAgB,QAAY;AAErC,iBAAK,cAAc,CAAC;AAAA,UAErB;AAEA,eAAK,YAAY,KAAM,KAAM;AAAA,QAE9B,WAAY,QAAQ,SAAS,gBAAiB;AAE7C,gBAAM,OAAO,OAAO,KAAM,OAAQ;AAElC,eAAK,QAAS,SAAW,KAAM;AAE9B,iBAAM,GAAI,IAAI,QAAS,GAAI;AAAA,UAE5B,CAAE;AAAA,QAEH,WAAY,SAAS,kBAAkB,QAAQ,SAAS,KAAM;AAE7D,cAAI,gBAAgB,QAAQ,aAAc,CAAE;AAC5C,cAAI,iBAAiB,QAAQ,aAAc,CAAE;AAC7C,gBAAM,iBAAiB,QAAQ,aAAc,CAAE;AAC/C,gBAAM,gBAAgB,QAAQ,aAAc,CAAE;AAC9C,cAAI;AAEJ,cAAK,cAAc,QAAS,MAAO,MAAM,EAAI,iBAAgB,cAAc,QAAS,QAAQ,MAAO;AACnG,cAAK,eAAe,QAAS,MAAO,MAAM,EAAI,kBAAiB,eAAe,QAAS,QAAQ,MAAO;AAEtG,cAAK,mBAAmB,WAAW,mBAAmB,cAAc,mBAAmB,YAAY,mBAAmB,cAAc,eAAe,QAAS,MAAO,MAAM,GAAI;AAE5K,6BAAiB;AAAA,cAChB,QAAQ,aAAc,CAAE;AAAA,cACxB,QAAQ,aAAc,CAAE;AAAA,cACxB,QAAQ,aAAc,CAAE;AAAA,YACzB;AAAA,UAED,OAAO;AAEN,6BAAiB,QAAQ,aAAc,CAAE;AAAA,UAE1C;AAGA,eAAM,aAAc,IAAI;AAAA,YAEvB,QAAQ;AAAA,YACR,SAAS;AAAA,YACT,QAAQ;AAAA,YACR,SAAS;AAAA,UAEV;AAAA,QAED,WAAY,KAAM,QAAQ,IAAK,MAAM,QAAY;AAEhD,cAAK,OAAO,QAAQ,OAAO,UAAW;AAErC,iBAAM,QAAQ,IAAK,IAAI,CAAC;AACxB,iBAAM,QAAQ,IAAK,EAAG,QAAQ,EAAG,IAAI;AAAA,UAEtC,OAAO;AAEN,iBAAM,QAAQ,IAAK,IAAI;AAAA,UAExB;AAAA,QAED,OAAO;AAEN,cAAK,QAAQ,SAAS,YAAa;AAElC,gBAAK,CAAE,MAAM,QAAS,KAAM,QAAQ,IAAK,CAAE,GAAI;AAE9C,mBAAM,QAAQ,IAAK,IAAI,CAAE,KAAM,QAAQ,IAAK,CAAE;AAAA,YAE/C;AAEA,iBAAM,QAAQ,IAAK,EAAE,KAAM,OAAQ;AAAA,UAEpC,WAAY,KAAM,QAAQ,IAAK,EAAG,QAAQ,EAAG,MAAM,QAAY;AAE9D,iBAAM,QAAQ,IAAK,EAAG,QAAQ,EAAG,IAAI;AAAA,UAEtC;AAAA,QAED;AAAA,MAED;AAAA,MAEA,cAAe,QAAS;AAEvB,cAAM,OAAO,OAAO,UAAW,CAAE;AACjC,YAAI;AAEJ,gBAAS,MAAO;AAAA,UAEf,KAAK;AACJ,mBAAO,OAAO,WAAW;AAAA,UAE1B,KAAK;AACJ,mBAAO,OAAO,WAAW;AAAA,UAE1B,KAAK;AACJ,mBAAO,OAAO,WAAW;AAAA,UAE1B,KAAK;AACJ,mBAAO,OAAO,SAAS;AAAA,UAExB,KAAK;AACJ,mBAAO,OAAO,SAAS;AAAA,UAExB,KAAK;AACJ,qBAAS,OAAO,UAAU;AAC1B,mBAAO,OAAO,eAAgB,MAAO;AAAA,UAEtC,KAAK;AACJ,qBAAS,OAAO,UAAU;AAC1B,mBAAO,OAAO,UAAW,MAAO;AAAA,UAEjC,KAAK;AACJ,mBAAO,OAAO,SAAS;AAAA,UAExB,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAEJ,kBAAM,cAAc,OAAO,UAAU;AACrC,kBAAM,WAAW,OAAO,UAAU;AAClC,kBAAM,mBAAmB,OAAO,UAAU;AAE1C,gBAAK,aAAa,GAAI;AAErB,sBAAS,MAAO;AAAA,gBAEf,KAAK;AAAA,gBACL,KAAK;AACJ,yBAAO,OAAO,gBAAiB,WAAY;AAAA,gBAE5C,KAAK;AACJ,yBAAO,OAAO,gBAAiB,WAAY;AAAA,gBAE5C,KAAK;AACJ,yBAAO,OAAO,gBAAiB,WAAY;AAAA,gBAE5C,KAAK;AACJ,yBAAO,OAAO,cAAe,WAAY;AAAA,gBAE1C,KAAK;AACJ,yBAAO,OAAO,cAAe,WAAY;AAAA,cAE3C;AAAA,YAED;AAEA,kBAAM,OAAc,WAAY,IAAI,WAAY,OAAO,eAAgB,gBAAiB,CAAE,CAAE;AAC5F,kBAAM,UAAU,IAAI,aAAc,KAAK,MAAO;AAE9C,oBAAS,MAAO;AAAA,cAEf,KAAK;AAAA,cACL,KAAK;AACJ,uBAAO,QAAQ,gBAAiB,WAAY;AAAA,cAE7C,KAAK;AACJ,uBAAO,QAAQ,gBAAiB,WAAY;AAAA,cAE7C,KAAK;AACJ,uBAAO,QAAQ,gBAAiB,WAAY;AAAA,cAE7C,KAAK;AACJ,uBAAO,QAAQ,cAAe,WAAY;AAAA,cAE3C,KAAK;AACJ,uBAAO,QAAQ,cAAe,WAAY;AAAA,YAE5C;AAEA;AAAA,UAED;AACC,kBAAM,IAAI,MAAO,4CAA4C,IAAK;AAAA,QAEpE;AAAA,MAED;AAAA,IAED;AAEA,IAAM,eAAN,MAAmB;AAAA,MAElB,YAAa,QAAQ,cAAe;AAEnC,aAAK,KAAK,IAAI,SAAU,MAAO;AAC/B,aAAK,SAAS;AACd,aAAK,eAAiB,iBAAiB,SAAc,eAAe;AACpE,aAAK,eAAe,IAAI,YAAY;AAAA,MAErC;AAAA,MAEA,YAAY;AAEX,eAAO,KAAK;AAAA,MAEb;AAAA,MAEA,OAAO;AAEN,eAAO,KAAK,GAAG,OAAO;AAAA,MAEvB;AAAA,MAEA,KAAM,QAAS;AAEd,aAAK,UAAU;AAAA,MAEhB;AAAA;AAAA;AAAA;AAAA,MAKA,aAAa;AAEZ,gBAAS,KAAK,SAAS,IAAI,OAAQ;AAAA,MAEpC;AAAA,MAEA,gBAAiB,MAAO;AAEvB,cAAM,IAAI,CAAC;AAEX,iBAAU,IAAI,GAAG,IAAI,MAAM,KAAO;AAEjC,YAAE,KAAM,KAAK,WAAW,CAAE;AAAA,QAE3B;AAEA,eAAO;AAAA,MAER;AAAA,MAEA,WAAW;AAEV,cAAM,QAAQ,KAAK,GAAG,SAAU,KAAK,MAAO;AAC5C,aAAK,UAAU;AACf,eAAO;AAAA,MAER;AAAA,MAEA,WAAW;AAEV,cAAM,QAAQ,KAAK,GAAG,SAAU,KAAK,QAAQ,KAAK,YAAa;AAC/D,aAAK,UAAU;AACf,eAAO;AAAA,MAER;AAAA,MAEA,WAAW;AAEV,cAAM,QAAQ,KAAK,GAAG,SAAU,KAAK,QAAQ,KAAK,YAAa;AAC/D,aAAK,UAAU;AACf,eAAO;AAAA,MAER;AAAA,MAEA,cAAe,MAAO;AAErB,cAAM,IAAI,CAAC;AAEX,iBAAU,IAAI,GAAG,IAAI,MAAM,KAAO;AAEjC,YAAE,KAAM,KAAK,SAAS,CAAE;AAAA,QAEzB;AAEA,eAAO;AAAA,MAER;AAAA,MAEA,YAAY;AAEX,cAAM,QAAQ,KAAK,GAAG,UAAW,KAAK,QAAQ,KAAK,YAAa;AAChE,aAAK,UAAU;AACf,eAAO;AAAA,MAER;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,WAAW;AAEV,YAAI,KAAK;AAET,YAAK,KAAK,cAAe;AAExB,gBAAM,KAAK,UAAU;AACrB,iBAAO,KAAK,UAAU;AAAA,QAEvB,OAAO;AAEN,iBAAO,KAAK,UAAU;AACtB,gBAAM,KAAK,UAAU;AAAA,QAEtB;AAGA,YAAK,OAAO,YAAa;AAExB,iBAAO,CAAE,OAAO;AAChB,gBAAM,CAAE,MAAM;AAEd,cAAK,QAAQ,WAAa,QAAS,OAAO,IAAM;AAEhD,gBAAQ,MAAM,IAAM;AAEpB,iBAAO,EAAI,OAAO,aAAc;AAAA,QAEjC;AAEA,eAAO,OAAO,aAAc;AAAA,MAE7B;AAAA,MAEA,cAAe,MAAO;AAErB,cAAM,IAAI,CAAC;AAEX,iBAAU,IAAI,GAAG,IAAI,MAAM,KAAO;AAEjC,YAAE,KAAM,KAAK,SAAS,CAAE;AAAA,QAEzB;AAEA,eAAO;AAAA,MAER;AAAA;AAAA,MAGA,YAAY;AAEX,YAAI,KAAK;AAET,YAAK,KAAK,cAAe;AAExB,gBAAM,KAAK,UAAU;AACrB,iBAAO,KAAK,UAAU;AAAA,QAEvB,OAAO;AAEN,iBAAO,KAAK,UAAU;AACtB,gBAAM,KAAK,UAAU;AAAA,QAEtB;AAEA,eAAO,OAAO,aAAc;AAAA,MAE7B;AAAA,MAEA,aAAa;AAEZ,cAAM,QAAQ,KAAK,GAAG,WAAY,KAAK,QAAQ,KAAK,YAAa;AACjE,aAAK,UAAU;AACf,eAAO;AAAA,MAER;AAAA,MAEA,gBAAiB,MAAO;AAEvB,cAAM,IAAI,CAAC;AAEX,iBAAU,IAAI,GAAG,IAAI,MAAM,KAAO;AAEjC,YAAE,KAAM,KAAK,WAAW,CAAE;AAAA,QAE3B;AAEA,eAAO;AAAA,MAER;AAAA,MAEA,aAAa;AAEZ,cAAM,QAAQ,KAAK,GAAG,WAAY,KAAK,QAAQ,KAAK,YAAa;AACjE,aAAK,UAAU;AACf,eAAO;AAAA,MAER;AAAA,MAEA,gBAAiB,MAAO;AAEvB,cAAM,IAAI,CAAC;AAEX,iBAAU,IAAI,GAAG,IAAI,MAAM,KAAO;AAEjC,YAAE,KAAM,KAAK,WAAW,CAAE;AAAA,QAE3B;AAEA,eAAO;AAAA,MAER;AAAA,MAEA,eAAgB,MAAO;AAEtB,cAAM,QAAQ,KAAK,GAAG,OAAO,MAAO,KAAK,QAAQ,KAAK,SAAS,IAAK;AACpE,aAAK,UAAU;AACf,eAAO;AAAA,MAER;AAAA,MAEA,UAAW,MAAO;AAEjB,cAAM,QAAQ,KAAK;AACnB,YAAI,IAAI,IAAI,WAAY,KAAK,GAAG,QAAQ,OAAO,IAAK;AAEpD,aAAK,KAAM,IAAK;AAEhB,cAAM,WAAW,EAAE,QAAS,CAAE;AAC9B,YAAK,YAAY,EAAI,KAAI,IAAI,WAAY,KAAK,GAAG,QAAQ,OAAO,QAAS;AAEzE,eAAO,KAAK,aAAa,OAAQ,CAAE;AAAA,MAEpC;AAAA,IAED;AAIA,IAAM,UAAN,MAAc;AAAA,MAEb,IAAK,KAAK,KAAM;AAEf,aAAM,GAAI,IAAI;AAAA,MAEf;AAAA,IAED;AAiEA,IAAM,YAAY,CAAC;AAmCnB,IAAM,YAAY,IAAI,MAAM;AAC5B,IAAM,UAAU,IAAI,QAAQ;AAAA;AAAA;;;ACzhI5B;AAAA;AAAA;AAAA;AACA,UAAM,YAAY;AAOlB,WAAO,kBAAkB,aAAa;AAAA,MACpC,QAAQ;AAAA,QACN,KAAa,EAAE,MAAM,QAAQ;AAAA,QAC7B,aAAa,EAAE,SAAS,GAAG;AAAA,MAC7B;AAAA,MAEA,MAAM,WAAY;AAChB,aAAK,QAAQ;AAAA,MACf;AAAA,MAEA,QAAQ,WAAY;AAClB,cAAM,OAAO,KAAK;AAClB,YAAI,CAAC,KAAK,IAAK;AAEf,aAAK,OAAO;AACZ,cAAM,SAAS,IAAI,MAAM,UAAU;AACnC,YAAI,KAAK,YAAa,QAAO,eAAe,KAAK,WAAW;AAC5D,eAAO,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,CAAC;AAAA,MAC5C;AAAA,MAEA,MAAM,SAAU,OAAO;AACrB,aAAK,QAAQ;AACb,aAAK,GAAG,YAAY,QAAQ,KAAK;AACjC,aAAK,GAAG,KAAK,gBAAgB,EAAC,QAAQ,OAAO,MAAY,CAAC;AAAA,MAC5D;AAAA,MAEA,QAAQ,WAAY;AAClB,YAAI,KAAK,MAAO,MAAK,GAAG,eAAe,MAAM;AAAA,MAC/C;AAAA,IACF,CAAC;AAAA;AAAA;;;ACrCD;AAAA;AAIA,aAAS,cAAc;AACrB,aAAO,YAAY,KAAK,IAAI,IAAI,MAAM,KAAK,KAAK,KAAK,OAAO,IAAI,GAAM;AAAA,IACxE;AAEA,aAAS,aAAa,KAAK,IAAI;AAC7B,UAAI,SAAS,SAAS,cAAc,QAAQ;AAC5C,aAAO,OAAO;AACd,aAAO,QAAQ;AACf,aAAO,KAAK;AACZ,aAAO,MAAM;AAEb,aAAO;AAAA,IACT;AAEA,aAAS,aAAa,IAAI;AACxB,YAAM,SAAS,SAAS,eAAe,EAAE;AACzC,YAAM,SAAS,OAAO;AAEtB,UAAI;AACF,kBAAU,OAAO,YAAY,MAAM;AAAA,MACrC,SAAS,GAAG;AAAA,MAEZ;AAAA,IACF;AAEA,aAAS,aAAa,QAAQ;AAC5B,YAAM,cAAc,SAAS,qBAAqB,QAAQ,EAAE,CAAC;AAC7D,kBAAY,WAAW,aAAa,QAAQ,WAAW;AAAA,IACzD;AAEA,aAAS,oBAAoB,KAAK,SAASM,UAAS;AAClD,aAAO,IAAIA,SAAQ,SAAS,SAAS,QAAQ;AAC3C,cAAM,UAAU,QAAQ,WAAW;AACnC,cAAM,WAAW,YAAY;AAC7B,cAAM,SAAS,aAAa,KAAK,QAAQ;AAEzC,cAAM,YAAY,WAAW,WAAW;AACtC,iBAAO,IAAI,MAAM,uBAAuB,MAAM,YAAY,CAAC;AAE3D,uBAAa,QAAQ;AAAA,QACvB,GAAG,OAAO;AAEV,cAAM,iBAAiB,SAASC,YAAW;AAAE,uBAAaA,UAAS;AAAA,QAAG;AAEtE,eAAO,iBAAiB,QAAQ,SAAS,GAAG;AAC1C,kBAAQ,EAAC,IAAI,KAAI,CAAC;AAElB,yBAAe,SAAS;AACxB,uBAAa,QAAQ;AAAA,QACvB,CAAC;AAED,eAAO,iBAAiB,SAAS,SAAS,GAAG;AAC3C,iBAAO,IAAI,MAAM,uBAAuB,MAAM,aAAa,CAAC,CAAC;AAE7D,yBAAe,SAAS;AACxB,uBAAa,QAAQ;AAAA,QACvB,CAAC;AAED,qBAAa,MAAM;AAAA,MACrB,CAAC;AAAA,IACH;AAEA,aAAS,YAAY,UAAU;AAC7B,iBAAW,YAAY,CAAC;AACxB,aAAO,SAAU,KAAK,SAAS;AAC7B,kBAAU,WAAW,CAAC;AACtB,eAAO,oBAAoB,KAAK,SAAS,SAAS,WAAW,OAAO;AAAA,MACtE;AAAA,IACF;AAEA,WAAO,UAAU;AAAA;AAAA;;;AC1EjB;AAAA;AAAA,QAAM,cAAc,uBAAkC;AAEtD,QAAM,aAAa;AAEnB,QAAM,aAAc,2BAAY;AAC9B,UAAI;AACJ,aAAO,WAAY;AACjB,kBAAU,WAAW,YAAY,UAAU;AAC3C,eAAO;AAAA,MACT;AAAA,IACF,EAAE;AAMF,WAAO,UAAU,OAAO,kBAAkB,qBAAqB;AAAA,MAC7D,QAAQ,EAAC,MAAM,QAAO;AAAA,MAEtB,MAAM,WAAY;AAChB,aAAK,QAAQ;AACb,aAAK,SAAS;AACd,aAAK,gBAAgB,WAAW,EAAE,KAAK,MAAM;AAC3C,eAAK,SAAS,IAAI,MAAM,WAAW;AACnC,eAAK,OAAO,eAAe,WAAW;AAAA,QACxC,CAAC;AAAA,MACH;AAAA,MAEA,QAAQ,WAAY;AAClB,cAAM,OAAO;AACb,cAAM,KAAK,KAAK;AAChB,cAAM,MAAM,KAAK;AAEjB,YAAI,CAAC,KAAK;AAAE;AAAA,QAAQ;AAEpB,aAAK,OAAO;AAEZ,aAAK,cAAc,KAAK,MAAM;AAC5B,eAAK,OAAO,KAAK,KAAK,SAAS,WAAY,WAAW;AACpD,iBAAK,QAAQ,UAAU;AACvB,iBAAK,MAAM,aAAa,UAAU;AAClC,eAAG,YAAY,QAAQ,KAAK,KAAK;AACjC,eAAG,KAAK,gBAAgB,EAAC,QAAQ,QAAQ,OAAO,KAAK,MAAK,CAAC;AAAA,UAC7D,CAAC;AAAA,QACH,CAAC;AAAA,MACH;AAAA,MAEA,QAAQ,WAAY;AAClB,YAAI,CAAC,KAAK,OAAO;AAAE;AAAA,QAAQ;AAC3B,aAAK,GAAG,eAAe,MAAM;AAAA,MAC/B;AAAA,IACF,CAAC;AAAA;AAAA;;;ACnDD;AAAA;AAYA,WAAO,UAAU,OAAO,kBAAkB,gBAAgB;AAAA,MACxD,QAAQ;AAAA,QACN,KAAa,EAAE,MAAM,QAAQ;AAAA,QAC7B,aAAa,EAAE,SAAS,GAAG;AAAA,MAC7B;AAAA,MAEA,MAAM,WAAY;AAChB,aAAK,QAAQ;AAAA,MACf;AAAA,MAEA,QAAQ,WAAY;AAClB,YAAI;AACJ,cAAM,OAAO,KAAK;AAClB,YAAI,CAAC,KAAK,IAAK;AAEf,aAAK,OAAO;AACZ,iBAAS,IAAI,MAAM,aAAa;AAChC,YAAI,KAAK,YAAa,QAAO,eAAe,KAAK,WAAW;AAC5D,eAAO,KAAK,KAAK,KAAK,CAAC,WAAW;AAGhC,iBAAO,SAAS,CAAC,MAAM;AACrB,gBAAI,aAAa,MAAM,eAAe,EAAE,UAAU;AAChD,gBAAE,SAAS,WAAW,CAAC,EAAG,EAAE,YAAY,EAAE,SAAS,SAAU,CAAC,GAAG;AAAA,YACnE;AAAA,UACF,CAAC;AAED,eAAK,KAAK,MAAM;AAAA,QAClB,CAAC;AAAA,MACH;AAAA,MAEA,MAAM,SAAU,OAAO;AACrB,aAAK,QAAQ;AACb,aAAK,GAAG,YAAY,QAAQ,KAAK;AACjC,aAAK,GAAG,KAAK,gBAAgB,EAAC,QAAQ,QAAQ,MAAY,CAAC;AAAA,MAC7D;AAAA,MAEA,QAAQ,WAAY;AAClB,YAAI,KAAK,MAAO,MAAK,GAAG,eAAe,MAAM;AAAA,MAC/C;AAAA,IACF,CAAC;AAAA;AAAA;;;ACpDD;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;ACJA;AAAA;AAAA,WAAO,UAAU,OAAO,kBAAkB,cAAc;AAAA,MACtD,QAAQ;AAAA,QACN,QAAQ,EAAC,SAAS,EAAC,GAAG,GAAG,GAAG,GAAG,GAAG,EAAC,GAAG,MAAM,OAAM;AAAA,MACpD;AAAA,MAEA,MAAM,WAAY;AAChB,aAAK,SAAS;AACd,aAAK,WAAW;AAChB,aAAK,OAAO,KAAK,KAAK,KAAK,IAAI;AAC/B,aAAK,SAAS,IAAI,MAAM,QAAQ;AAAA,MAClC;AAAA,MAEA,QAAQ,WAAY;AAClB,aAAK,OAAO,KAAK,KAAK,KAAK,MAAM;AAAA,MACnC;AAAA,MAEA,MAAM,WAAY;AAAE,aAAK,GAAG,iBAAiB,SAAS,KAAK,IAAI;AAAA,MAAG;AAAA,MAClE,OAAO,WAAY;AAAE,aAAK,GAAG,oBAAoB,SAAS,KAAK,IAAI;AAAA,MAAG;AAAA,MACtE,QAAQ,WAAY;AAAE,aAAK,MAAM;AAAA,MAAG;AAAA,MAEpC,MAAM,WAAY;AAChB,cAAM,WAAW,KAAK,GAAG,QAAQ,cAAc,uBAAuB;AACtE,YAAI,CAAC,UAAU;AACb,gBAAM,IAAI,MAAM,2CAA2C;AAAA,QAC7D;AACA,iBAAS,WAAW,qBAAqB,EAAE,cAAc,KAAK,EAAE;AAAA,MAClE;AAAA,MAEA,WAAW,WAAY;AACrB,eAAO,KAAK,OAAO,KAAK,KAAK,KAAK,MAAM;AAAA,MAC1C;AAAA,IACF,CAAC;AAAA;AAAA;;;AC/BD;AAAA;AAIA,aAAS,oBAAqB,UAAU;AACtC,UAAI,CAAC,UAAU;AACb,eAAO,CAAC;AAAA,MACV,WAAW,MAAM,QAAQ,QAAQ,GAAG;AAClC,eAAO;AAAA,MACT,WAAW,SAAS,WAAW;AAC7B,eAAO,SAAS;AAAA,MAClB,OAAO;AACL,eAAO,CAAC,QAAQ;AAAA,MAClB;AAAA,IACF;AAQA,aAAS,YAAa,MAAM,eAAe,QAAQ,cAAc;AAC/D,UAAI,CAAC,KAAM;AAEX,sBAAgB,iBAAiB,CAAC;AAElC,WAAK,SAAS,CAAC,SAAS;AAEtB,YAAI,CAAC,KAAK,OAAQ;AAElB,cAAM,gBAAgB,oBAAoB,KAAK,QAAQ;AAEvD,sBAAc,QAAQ,CAAC,aAAa;AAElC,cAAI,YAAY,EAAE,YAAY,UAAW;AACzC,cAAI,cAAc,UAAU,cAAc,QAAQ,SAAS,IAAI,MAAM,GAAI;AAEzE,mBAAS,SAAS;AAClB,mBAAS,eAAe;AACxB,mBAAS,cAAc;AAAA,QAEzB,CAAC;AAAA,MAEH,CAAC;AAAA,IACH;AAMA,WAAO,UAAU,OAAO,kBAAkB,gBAAgB;AAAA,MACxD,UAAU;AAAA,MAEV,QAAQ;AAAA,QACN,MAAM,EAAC,SAAS,GAAE;AAAA,QAClB,WAAW,EAAC,SAAS,OAAO,OAAO,CAAC,OAAO,KAAK,EAAC;AAAA,QACjD,kBAAkB,EAAC,SAAS,MAAK;AAAA,QACjC,cAAc,EAAC,SAAS,GAAG,KAAK,GAAG,KAAK,EAAC;AAAA,QACzC,WAAW,EAAC,SAAS,CAAC,EAAC;AAAA,MACzB;AAAA,MAEA,MAAM,WAAY;AAChB,cAAM,OAAO,KAAK;AAElB,aAAK,UAAU,IAAI,MAAM,kBAAkB,EAAE,KAAK;AAAA,UAChD,KAAK,OAAO,UAAU,KAAK;AAAA,UAAW,KAAK,OAAO,UAAU,KAAK;AAAA,UACjE,KAAK,OAAO,UAAU,KAAK;AAAA,UAAW,KAAK,OAAO,UAAU,KAAK;AAAA,UACjE,KAAK,OAAO,UAAU,KAAK;AAAA,UAAW,KAAK,OAAO,UAAU,KAAK;AAAA,QACnE,CAAC;AACD,aAAK,QAAQ,SAAS,MAAM;AAE5B,aAAK,qBAAqB,MAAM;AAC9B,gBAAM,OAAO,KAAK,GAAG,YAAY,MAAM;AACvC,gBAAMC,QAAO,KAAK;AAClB,sBAAY,MAAMA,MAAK,WAAW,KAAK,SAASA,MAAK,YAAY;AAAA,QACnE;AAEA,aAAK,mBAAmB;AACxB,aAAK,GAAG,iBAAiB,eAAe,KAAK,kBAAkB;AAAA,MAEjE;AAAA,MAEA,QAAQ,SAAU,SAAS;AACzB,cAAM,OAAO,KAAK;AAClB,cAAM,OAAO,KAAK,GAAG,YAAY,MAAM;AAEvC,YAAI,qBAAqB,CAAC;AAC1B,YAAI,uBAAuB,CAAC;AAE5B,YAAI,KAAK,UAAU,QAAQ;AACzB,cAAI,QAAQ,WAAW;AACrB,iCAAqB,KAAK,UAAU,OAAO,CAAC,SAAS,CAAC,QAAQ,UAAU,SAAS,IAAI,CAAC;AACtF,mCAAuB,QAAQ,UAAU,OAAO,CAAC,SAAS,CAAC,KAAK,UAAU,SAAS,IAAI,CAAC;AAAA,UAC1F,OAAO;AACL,iCAAqB,KAAK;AAAA,UAC5B;AAAA,QACF;AACA,YAAI,mBAAmB,QAAQ;AAC7B,sBAAY,MAAM,oBAAoB,KAAK,SAAS,KAAK,YAAY;AAAA,QACvE;AACA,YAAI,qBAAqB,QAAQ;AAC/B,sBAAY,MAAM,sBAAsB,MAAM,CAAC;AAAA,QACjD;AAEA,YAAI,QAAQ,aAAa,KAAK,iBAAiB,QAAQ,cAAc;AACnE,gBAAM,0BAA0B,KAAK,UAClC,OAAO,CAAC,SAAS,QAAQ,UAAU,SAAS,IAAI,CAAC;AACpD,cAAI,wBAAwB,QAAQ;AAClC,wBAAY,MAAM,yBAAyB,KAAK,SAAS,KAAK,YAAY;AAAA,UAC5E;AAAA,QACF;AAEA,YAAI,KAAK,KAAK,oBAAoB,CAAC,QAAQ,kBAAkB;AAC3D,eAAK,cAAc,KAAK,OAAO;AAAA,QACjC,WAAW,CAAC,KAAK,KAAK,oBAAoB,QAAQ,kBAAkB;AAClE,eAAK,cAAc,IAAI;AAAA,QACzB;AAAA,MACF;AAAA,MAEA,QAAQ,WAAY;AAClB,aAAK,GAAG,oBAAoB,eAAe,KAAK,kBAAkB;AAClE,cAAM,OAAO,KAAK,GAAG,YAAY,MAAM;AACvC,cAAM,OAAO,KAAK;AAElB,oBAAY,MAAM,KAAK,WAAW,MAAM,CAAC;AACzC,YAAI,KAAK,iBAAkB,MAAK,cAAc,IAAI;AAAA,MACpD;AAAA,MAEA,eAAe,SAAU,SAAS;AAChC,aAAK,GAAG,QAAQ,SAAS,aAAa;AAAA,MACxC;AAAA,IACF,CAAC;AAAA;AAAA;;;ACpID;AAAA;AASA,WAAO,UAAU,OAAO,kBAAkB,QAAQ;AAAA,MAChD,MAAM,WAAY;AAChB,aAAK,SAAS,KAAK,GAAG,QAAQ,QAAQ;AAEtC,aAAK,gBAAgB;AAErB,aAAK,WAAW;AAChB,aAAK;AAAA,QAA8C;AACnD,aAAK;AAAA,QAA8C,KAAK,GAAG,QAAQ,QAAQ;AAC3E,aAAK;AAAA,QAA8C;AAGnD,aAAK,QAAQ,KAAK,MAAM,KAAK,IAAI;AACjC,aAAK,aAAa,KAAK,WAAW,KAAK,IAAI;AAC3C,aAAK,cAAc,KAAK,YAAY,KAAK,IAAI;AAAA,MAC/C;AAAA,MAEA,MAAM,WAAY;AAChB,cAAM,KAAK,KAAK;AAChB,WAAG,iBAAiB,OAAO,KAAK,KAAK;AACrC,WAAG,iBAAiB,YAAY,KAAK,WAAW;AAChD,WAAG,iBAAiB,UAAU,KAAK,UAAU;AAC7C,WAAG,iBAAiB,gBAAgB,KAAK,WAAW;AACpD,WAAG,iBAAiB,cAAc,KAAK,UAAU;AACjD,WAAG,iBAAiB,eAAe,KAAK,WAAW;AACnD,WAAG,iBAAiB,aAAa,KAAK,UAAU;AAAA,MAClD;AAAA,MAEA,OAAO,WAAY;AACjB,cAAM,KAAK,KAAK;AAChB,WAAG,oBAAoB,OAAO,KAAK,KAAK;AACxC,WAAG,oBAAoB,YAAY,KAAK,WAAW;AACnD,WAAG,oBAAoB,UAAU,KAAK,UAAU;AAChD,WAAG,oBAAoB,gBAAgB,KAAK,WAAW;AACvD,WAAG,oBAAoB,cAAc,KAAK,UAAU;AACpD,WAAG,oBAAoB,eAAe,KAAK,WAAW;AACtD,WAAG,oBAAoB,aAAa,KAAK,UAAU;AAAA,MACrD;AAAA,MAEA,aAAa,WAAY;AACvB,aAAK,WAAW;AAAA,MAClB;AAAA,MAEA,YAAY,WAAY;AACtB,cAAM,QAAQ,KAAK;AACnB,aAAK,WAAW;AAChB,YAAI,CAAC,OAAO;AAAE;AAAA,QAAQ;AACtB,cAAM,YAAY,KAAK,aAAa;AACpC,aAAK,QAAQ;AACb,aAAK,OAAO,iBAAiB,KAAK,UAAU;AAC5C,aAAK,aAAa;AAAA,MACpB;AAAA,MAEA,OAAO,SAAU,KAAK;AACpB,cAAM,QAAQ,IAAI,OAAO;AAIzB,YAAI,MAAM,GAAG,KAAK,aAAa,KAAK,CAAC,KAAK,YAAY,KAAK,OAAO;AAAE;AAAA,QAAQ;AAC5E,cAAM,SAAS,KAAK,aAAa;AACjC,aAAK,QAAQ;AACb,aAAK,aAAa,IAAI,OAAO,eAAe,KAAK,GAAG,MAAM,MAAM,IAAI;AACpE,aAAK,OAAO,cAAc,KAAK,UAAU;AAAA,MAC3C;AAAA,IACF,CAAC;AAAA;AAAA;;;ACzED;AAAA;AAKA,WAAO,UAAU,OAAO,kBAAkB,mBAAmB;AAAA,MAC3D,MAAM,WAAY;AAChB,aAAK,WAAW,IAAI,MAAM,mBAAmB,EAAC,aAAa,KAAI,CAAC;AAChE,aAAK,gBAAgB,KAAK,cAAc,KAAK,IAAI;AACjD,aAAK,GAAG,iBAAiB,eAAe,KAAK,aAAa;AAC1D,aAAK,cAAc;AAAA,MACrB;AAAA,MAEA,QAAQ,WAAY;AAClB,aAAK,GAAG,oBAAoB,eAAe,KAAK,aAAa;AAAA,MAC/D;AAAA,MAEA,eAAe,WAAY;AACzB,aAAK,GAAG,SAAS,SAAS,CAAC,SAAS;AAClC,cAAI,KAAK,OAAQ,MAAK,WAAW,KAAK;AAAA,QACxC,CAAC;AAAA,MACH;AAAA,IACF,CAAC;AAAA;AAAA;;;ACtBD;AAAA;AAUA,WAAO,UAAU,OAAO,kBAAkB,mBAAmB;AAAA,MAC3D,QAAQ;AAAA,QACN,SAAS,EAAC,SAAS,KAAI;AAAA,QACvB,UAAU,EAAC,SAAS,GAAE;AAAA,QACtB,SAAS,EAAC,SAAS,GAAE;AAAA,QACrB,OAAO,EAAC,SAAS,WAAU;AAAA,QAC3B,QAAQ,EAAC,SAAS,KAAI;AAAA,QACtB,OAAO,EAAC,SAAS,KAAI;AAAA,MACvB;AAAA,MAEA,MAAM,WAAY;AAEhB,aAAK,WAAW;AAEhB,aAAK,MAAM,CAAC;AAEZ,aAAK,aAAa,CAAC;AACnB,aAAK,gBAAgB;AAErB,aAAK,cAAc,CAAC;AACpB,aAAK,YAAY,KAAK,UAAU,KAAK,IAAI;AACzC,aAAK,eAAe,KAAK,aAAa,KAAK,IAAI;AAAA,MACjD;AAAA,MAEA,MAAM,WAAY;AAChB,cAAM,UAAU,KAAK,GAAG;AAExB,YAAI,KAAK,KAAK,OAAO;AACnB,eAAK,WAAW,IAAI,iBAAiB,KAAK,OAAO,KAAK,MAAM,IAAI,CAAC;AACjE,eAAK,SAAS,QAAQ,SAAS,EAAC,WAAW,MAAM,SAAS,KAAI,CAAC;AAAA,QACjE;AAAA,MACF;AAAA,MAEA,OAAO,WAAY;AACjB,YAAI,KAAK,UAAU;AACjB,eAAK,SAAS,WAAW;AACzB,eAAK,WAAW;AAAA,QAClB;AAAA,MACF;AAAA;AAAA;AAAA;AAAA,MAKA,QAAQ,WAAY;AAClB,cAAM,OAAO,KAAK;AAClB,YAAI;AAGJ,YAAI,KAAK,SAAS;AAChB,sBAAY,KAAK,GAAG,QAAQ,iBAAiB,KAAK,OAAO;AAAA,QAC3D,OAAO;AAEL,sBAAY,KAAK,GAAG,QAAQ;AAAA,QAC9B;AAEA,aAAK,MAAM,MAAM,UAAU,MAAM,KAAK,SAAS;AAAA,MACjD;AAAA,MAEA,MAAO,WAAY;AACjB,cAAM,WAAW,IAAI,MAAM,QAAQ,GAC/B,eAAe,IAAI,MAAM,QAAQ,GACjC,gBAAgB,IAAI,MAAM,QAAQ,GAClC,OAAO,IAAI,MAAM,QAAQ,GACzB,MAAM,IAAI,MAAM,KAAK,GACrB,aAAa,CAAC,GACd,cAAc,oBAAI,IAAI;AAC1B,eAAO,SAAU,MAAM;AACrB,cAAI,CAAC,KAAK,KAAK,SAAS;AAAE;AAAA,UAAQ;AAGlC,gBAAM,gBAAgB,KAAK;AAC3B,cAAI,iBAAkB,OAAO,gBAAgB,KAAK,KAAK,UAAW;AAAE;AAAA,UAAQ;AAE5E,eAAK,gBAAgB;AAErB,gBAAM,KAAK,KAAK,IACZ,OAAO,KAAK,MACZ,OAAO,GAAG,YAAY,MAAM;AAChC,cAAI;AAEJ,cAAI,CAAC,MAAM;AAAE;AAAA,UAAQ;AAErB,qBAAW,SAAS;AACpB,sBAAY,MAAM;AAClB,aAAG,SAAS,iBAAiB,QAAQ;AACrC,aAAG,SAAS,cAAc,aAAa;AACvC,2BAAiB,KAAK,SAAS,YAAY,aAAa;AAExD,eAAK,IAAI,QAAQ,SAAS;AAG1B,qBACG,KAAK,CAAC,GAAG,MAAM,YAAY,IAAI,CAAC,IAAI,YAAY,IAAI,CAAC,IAAI,IAAI,EAAE,EAC/D,QAAQ,KAAK,SAAS;AAGzB,eAAK,WACF,OAAO,CAACC,QAAO,CAAC,YAAY,IAAIA,GAAE,CAAC,EACnC,QAAQ,KAAK,YAAY;AAG5B,oBAAU,KAAK,YAAY,UAAU;AAGrC,mBAAS,UAAWA,KAAI;AACtB,gBAAI,QAAQC,OAAMC,WAAU;AAE5B,gBAAI,CAACF,IAAG,UAAU;AAAE;AAAA,YAAQ;AAE5B,YAAAC,QAAOD,IAAG,YAAY,MAAM;AAE5B,gBAAI,CAACC,OAAM;AAAE;AAAA,YAAQ;AAErB,gBAAI,cAAcA,KAAI,EAAE,QAAQ,IAAI;AACpC,qBAAS,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,IAAI;AAC5C,qBAAS,KAAK,KAAK,IAAI,SAAS,MAAM;AACtC,gBAAI,UAAU,YAAY;AAE1B,gBAAI,CAAC,QAAQ;AAAE;AAAA,YAAQ;AAEvB,YAAAC,YAAW,SAAS,WAAW,YAAY;AAC3C,gBAAIA,YAAW,SAAS,gBAAgB;AACtC,yBAAW,KAAKF,GAAE;AAClB,0BAAY,IAAIA,KAAIE,SAAQ;AAAA,YAC9B;AAAA,UACF;AAEA,mBAAS,YAAa,UAAU;AAC9B,mBAAO,KAAK,IAAI,SAAS,GAAG,SAAS,GAAG,SAAS,CAAC;AAAA,UACpD;AAAA,QACF;AAAA,MACF,EAAG;AAAA,MAEH,WAAW,SAAU,UAAU;AAC7B,iBAAS,KAAK,KAAK;AACnB,iBAAS,SAAS,KAAK,KAAK,KAAK;AACjC,aAAK,YAAY,KAAK;AACtB,aAAK,GAAG,KAAK,OAAO,KAAK,WAAW;AAAA,MACtC;AAAA,MACA,cAAc,SAAU,UAAU;AAChC,iBAAS,KAAK,QAAQ;AACtB,iBAAS,YAAY,KAAK,KAAK,KAAK;AACpC,aAAK,YAAY,KAAK;AACtB,aAAK,GAAG,KAAK,UAAU,KAAK,WAAW;AAAA,MACzC;AAAA,IACF,CAAC;AAED,aAAS,UAAW,MAAM,QAAQ;AAChC,WAAK,SAAS;AACd,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AAAE,aAAK,CAAC,IAAI,OAAO,CAAC;AAAA,MAAG;AAAA,IACjE;AAAA;AAAA;;;AChKA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;ACJA;AAAA;AAMA,WAAO,UAAU,OAAO,kBAAkB,YAAY;AAAA,MACpD,QAAQ;AAAA,QACN,UAAU,EAAC,MAAM,SAAQ;AAAA,MAC3B;AAAA,MAEA,MAAM,WAAY;AAChB,aAAK,SAAS,KAAK,GAAG,QAAQ,QAAQ;AACtC,aAAK,mBAAmB;AACxB,aAAK,WAAW,KAAK,KAAK;AAC1B,aAAK,GAAG,iBAAiB,eAAe,KAAK,YAAY,KAAK,IAAI,CAAC;AAAA,MACrE;AAAA,MAEA,MAAM,WAAY;AAChB,YAAI,CAAC,KAAK,iBAAkB,MAAK,YAAY;AAAA,MAC/C;AAAA,MAEA,aAAa,WAAY;AACvB,YAAI,OAAO;AACX,cAAM,SAAS,KAAK,GAAG,YAAY,MAAM;AACzC,cAAM,QAAQ,KAAK,GAAG,QAAQ;AAE9B,YAAI,CAAC,OAAQ;AAEb,YAAI;AACJ,eAAO,SAAS,CAAC,SAAS;AACxB,cAAI,KAAK,WACJ,CAAC,KAAK,YAAY,KAAK,SAAS,KAAK,UAAW,WAAU;AAAA,QACjE,CAAC;AAED,YAAI,CAAC,QAAS;AAEd,cAAM,kBAAkB,QAAQ,SAAS,MAAM;AAC/C,gBAAQ,kBAAkB,MAAM,KAAK;AACrC,wBAAgB,aAAa,QAAQ,WAAW;AAChD,aAAK,OAAO,mBAAmB,eAAe;AAC9C,aAAK,mBAAmB;AAAA,MAC1B;AAAA,IACF,CAAC;AAAA;AAAA;;;AC3CD;AAAA;AAAA,WAAO,UAAU,OAAO,kBAAkB,aAAa;AAAA,MACrD,QAAQ;AAAA,QACN,aAAa,EAAC,MAAM,OAAM;AAAA,QAC1B,QAAQ,EAAC,SAAS,MAAK;AAAA,QACvB,OAAO,EAAC,SAAS,EAAC;AAAA,MACpB;AAAA,MACA,MAAM,WAAY;AAChB,aAAK,SAAS,KAAK,GAAG,QAAQ,QAAQ;AACtC,aAAK,OAAO,SAAS,IAAI;AACzB,aAAK,QAAQ;AACb,aAAK,OAAO,CAAC;AACb,aAAK,YAAY,IAAI,MAAM,UAAU;AAAA,MACvC;AAAA,MACA,QAAQ,WAAY;AAClB,aAAK,OAAO,YAAY,IAAI;AAAA,MAC9B;AAAA,MACA,QAAQ,WAAY;AAClB,aAAK,KAAK,SAAS;AAAA,MACrB;AAAA,MACA,mBAAmB,WAAY;AAC7B,aAAK,QAAQ;AACb,aAAK,OAAO,CAAC;AAAA,MACf;AAAA,MACA,MAAO,WAAY;AACjB,cAAM,QAAQ,IAAI,MAAM,QAAQ;AAChC,cAAM,SAAS,IAAI,MAAM,QAAQ;AACjC,cAAM,QAAQ,IAAI,MAAM,QAAQ;AAEhC,eAAO,SAAU,GAAG,IAAI;AACtB,gBAAM,KAAK,KAAK;AAChB,gBAAM,OAAO,KAAK;AAClB,gBAAM,YAAY,KAAK;AACvB,gBAAM,QAAQ,KAAK,QAAQ,KAAK;AAEhC,cAAI,CAAC,KAAK,OAAQ;AAGlB,cAAI,CAAC,KAAK,KAAK,QAAQ;AACrB,kBAAM,WAAW,KAAK,GAAG,SAAS;AAClC,iBAAK,QAAQ,KAAK,SAAS,KAAK,OAAO,SAAS,QAAQ;AACxD,iBAAK,OAAO,KAAK,OAAO,QAAQ,UAAU,MAAM,KAAK,KAAK,WAAW,GAAG,KAAK,KAAK,KAAK,CAAC;AACxF,eAAG,KAAK,kBAAkB;AAAA,UAC5B;AAGA,cAAI,CAAC,KAAK,KAAK,QAAQ;AACrB,oBAAQ,KAAK,oCAAoC,KAAK,WAAW;AACjE,iBAAK,GAAG,aAAa,aAAa,EAAC,QAAQ,MAAK,CAAC;AACjD,eAAG,KAAK,gBAAgB;AACxB;AAAA,UACF;AAGA,gBAAM,WAAW,GAAG,SAAS;AAC7B,gBAAM,YAAY,KAAK,KAAK,CAAC;AAC7B,iBAAO,WAAW,WAAW,QAAQ;AAErC,gBAAMC,YAAW,OAAO,OAAO;AAC/B,cAAI;AAEJ,cAAIA,YAAW,OAAO;AAEpB,iBAAK,KAAK,MAAM;AAGhB,gBAAI,CAAC,KAAK,KAAK,QAAQ;AACrB,mBAAK,GAAG,aAAa,aAAa,EAAC,QAAQ,MAAK,CAAC;AACjD,iBAAG,KAAK,gBAAgB;AACxB;AAAA,YACF;AAEA,kBAAM,KAAK,QAAQ;AACnB,yBAAa,KAAK,KAAK,CAAC;AAAA,UAC1B,OAAO;AAGL,kBAAM,KAAK,OAAO,UAAU,KAAK,CAAC,EAAE,IAAI,QAAQ;AAChD,yBAAa;AAAA,UACf;AAGA,qBAAW,IAAI,SAAS;AACxB,aAAG,SAAS,OAAO,UAAU;AAI7B,oBAAU,IAAI,OAAO,KAAK,KAAK;AAC/B,oBAAU,IAAI,OAAO,KAAK;AAC1B,oBAAU,IAAI,YAAY,EAAC,GAAE,GAAG,GAAE,IAAI,GAAE,EAAC;AACzC,gBAAM,gBAAgB,UAAU,gBAAgB,KAAK,OAAO,WAAW,CAAC;AAExE,cAAI,CAAC,cAAc,QAAQ;AAEzB,qBAAS,KAAK,KAAK;AAAA,UACrB,OAAO;AAEL,mBAAO,WAAW,cAAc,CAAC,EAAE,OAAO,QAAQ;AAClD,qBAAS,IAAI,OAAO,UAAU,KAAK,CAAC;AAAA,UACtC;AAAA,QAEF;AAAA,MACF,EAAE;AAAA,IACJ,CAAC;AAAA;AAAA;;;;;;;;ICpGKC,GCGAC,GCHAC,GCYAC,GGaAC;;;;ANzBN,IAAMJ,IAAN,MAAMA;MAEcK,OAAAA,YAAEC,GAAOC,GAAAA;AACzB,cAAMC,IAASC,KAAKC,IAAI,IAAIH,CAAAA;AAC5B,eAAOE,KAAKE,MAAML,IAAQE,CAAAA,IAAUA;MACrC;MAEYH,OAAAA,OAAEO,GAAAA;AACb,eAAOA,EAAKH,KAAKI,MAAMJ,KAAKK,OAAAA,IAAWF,EAAKG,MAAAA,CAAAA;MAC7C;MAEuBV,OAAAA,kBAAEW,GAAGC,GAAAA;AAE3B,YAAIC,IAAKF,EAAEG,IAAIF,EAAEE,GACbC,IAAKJ,EAAEK,IAAIJ,EAAEI,GACbC,IAAKN,EAAEO,IAAIN,EAAEM;AAEjB,eAAOL,IAAKA,IAAKE,IAAKA,IAAKE,IAAKA;MAEjC;MAImBjB,OAAAA,cAAEmB,GAAMC,GAAAA;AAC1B,iBAASC,IAAAA,OAAWC,IAAAA,IAAQC,IAAIJ,EAAKT,QAAQc,IAAID,IAAI,GAAA,EAAKD,IAAIC,GAAGC,IAAIF,EAAAA,EACjEH,EAAKG,CAAAA,EAAGJ,KAAKE,EAAGF,KAAKE,EAAGF,IAAIC,EAAKK,CAAAA,EAAGN,KAAOC,EAAKK,CAAAA,EAAGN,KAAKE,EAAGF,KAAKE,EAAGF,IAAIC,EAAKG,CAAAA,EAAGJ,MAAQE,EAAGN,KAAKK,EAAKK,CAAAA,EAAGV,IAAIK,EAAKG,CAAAA,EAAGR,MAAMM,EAAGF,IAAIC,EAAKG,CAAAA,EAAGJ,MAAMC,EAAKK,CAAAA,EAAGN,IAAIC,EAAKG,CAAAA,EAAGJ,KAAKC,EAAKG,CAAAA,EAAGR,MAAOO,IAAAA,CAAKA;AAC/L,eAAOA;MACR;MAEuBrB,OAAAA,kBAAEyB,GAAQC,GAASC,GAAAA;AAKzC,YAAIC,IAAc,KACdC,IAAAA,MAEAC,IAAkB,CAAA;AAQtB,eANAJ,EAAQK,UAAUC,QAASC,CAAAA,OAAAA;AACzBL,cAAcxB,KAAK8B,IAAIP,EAASM,EAAAA,EAAKjB,GAAGY,CAAAA,GACxCC,IAAezB,KAAK+B,IAAIR,EAASM,EAAAA,EAAKjB,GAAGa,CAAAA,GACzCC,EAAgBM,KAAKT,EAASM,EAAAA,CAAAA;QAAAA,CAAAA,GAAAA,CAAAA,EAG5BR,EAAOT,IAAIa,IAAe,OAAOJ,EAAOT,IAAIY,IAAc,OAC5DS,KAAKC,cAAcR,GAAiBL,CAAAA;MAIvC;MAEczB,OAAAA,SAAEW,GAAGC,GAAGS,GAAAA;AAKrB,gBAFSA,EAAEP,IAAIH,EAAEG,MADRF,EAAEM,IAAIP,EAAEO,MADRN,EAAEE,IAAIH,EAAEG,MAGRO,EAAEH,IAAIP,EAAEO;MAElB;MAEYlB,OAAAA,OAAEW,GAAGC,GAAAA;AAChB,eAAA,KAAY2B,kBAAkB5B,GAAGC,CAAAA,IAAK;MACvC;MAUmBZ,OAAAA,cAAEwC,GAAUC,IAAY,MAAA;AAE1CA,YAAYrC,KAAK+B,IAAKM,GAAWC,OAAOC,OAAAA;AAmBxC,iBAfIC,IAAc,CAAA,GACdC,IAAUL,EAASM,SAAAA,GACnBC,IAAYP,EAASQ,aAAc,UAAA,GACnCC,IAAcJ,IAAUA,EAAQK,QAAQH,EAAUG,OAGlDC,IAAY,GAEZC,IAAa,CAAA,GACbC,IAAe,CAAA,GAGfC,IAAelD,KAAKmD,MAAO,IAAId,CAAAA,GAC/Be,KAAkBpD,KAAKC,IAAK,IAAIiD,CAAAA,GAE1BhC,KAAI,GAAGA,KAAI2B,GAAa3B,MAAO;AAEvC,cAAImC,KAAQZ,IAAUA,EAAQa,KAAMpC,EAAAA,IAAMA,IAGtCqC,KAAO;AAGXA,UAAAA,MAAAA,CAAAA,EAAkBZ,EAAUW,KAAMD,EAAAA,IAAUD,MAAnC,KACTG,MAAAA,CAAAA,EAAkBZ,EAAUa,KAAMH,EAAAA,IAAUD,MAAnC,MACTG,MAAAA,CAAAA,EAAkBZ,EAAUc,KAAMJ,EAAAA,IAAUD,MAAnC,QAIIZ,IAEXQ,EAAWhB,KAAMQ,EAAae,EAAAA,CAAAA,KAI9BN,EAAajB,KAAMW,EAAUW,KAAMD,EAAAA,CAAAA,GACnCJ,EAAajB,KAAMW,EAAUa,KAAMH,EAAAA,CAAAA,GACnCJ,EAAajB,KAAMW,EAAUc,KAAMJ,EAAAA,CAAAA,GAEnCb,EAAae,EAAAA,IAASR,GACtBC,EAAWhB,KAAMe,CAAAA,GACjBA;QAIH;AAID,cAAMW,KAAoB,IAAIC,gBAC5B,IAAIC,aAAcX,CAAAA,GAClBN,EAAUkB,UACVlB,EAAUmB,UAAAA,GAGNC,IAAS,IAAIC;AAInB,eAHAD,EAAOE,aAAc,YAAYP,EAAAA,GACjCK,EAAOG,SAAUlB,CAAAA,GAEVe;MAER;IAAA;ACxIH,IAAMvE,IAAN,MAAMA;MACJ2E,YAAaC,GAAAA;AACXnC,aAAKoC,UAAU,CAAA,GACfpC,KAAKmC,gBAAgBA;MACtB;MAEDpC,KAAMsC,GAAAA;AAEJrC,aAAKoC,QAAQrC,KAAKsC,CAAAA,GAGlBrC,KAAKsC,SAAStC,KAAKoC,QAAQ/D,SAAS,CAAA;MACrC;MAEDkE,MAAAA;AAEE,cAAMT,IAAS9B,KAAKoC,QAAQ,CAAA,GAEtBI,IAAMxC,KAAKoC,QAAQG,IAAAA;AAOzB,eAJIvC,KAAKoC,QAAQ/D,SAAS,MACxB2B,KAAKoC,QAAQ,CAAA,IAAKI,GAClBxC,KAAKyC,SAAS,CAAA,IAETX;MACR;MAEDY,OAAQC,GAAAA;AACN,cAAM1D,IAAIe,KAAKoC,QAAQQ,QAAQD,CAAAA,GAIzBH,IAAMxC,KAAKoC,QAAQG,IAAAA;AAErBtD,cAAMe,KAAKoC,QAAQ/D,SAAS,MAC9B2B,KAAKoC,QAAQnD,CAAAA,IAAKuD,GAEdxC,KAAKmC,cAAcK,CAAAA,IAAOxC,KAAKmC,cAAcQ,CAAAA,IAC/C3C,KAAKsC,SAASrD,CAAAA,IAEde,KAAKyC,SAASxD,CAAAA;MAGnB;MAED4D,OAAAA;AACE,eAAA,KAAYT,QAAQ/D;MACrB;MAEDyE,eAAgBH,GAAAA;AACd3C,aAAKsC,SAAStC,KAAKoC,QAAQQ,QAAQD,CAAAA,CAAAA;MACpC;MAEDL,SAAUS,GAAAA;AAER,cAAMV,IAAUrC,KAAKoC,QAAQW,CAAAA;AAG7B,eAAOA,IAAI,KAAG;AAEZ,gBAAMC,KAAYD,IAAI,KAAM,KAAK,GAC3BE,IAASjD,KAAKoC,QAAQY,CAAAA;AAE5B,cAAA,EAAIhD,KAAKmC,cAAcE,CAAAA,IAAWrC,KAAKmC,cAAcc,CAAAA,GAQnD;AANAjD,eAAKoC,QAAQY,CAAAA,IAAWX,GACxBrC,KAAKoC,QAAQW,CAAAA,IAAKE,GAElBF,IAAIC;QAKP;MACF;MAEDP,SAAUM,GAAAA;AAER,cAAM1E,IAAS2B,KAAKoC,QAAQ/D,QAC1BgE,IAAUrC,KAAKoC,QAAQW,CAAAA,GACvBG,IAAYlD,KAAKmC,cAAcE,CAAAA;AAEjC,mBAAa;AAEX,gBAAMc,IAAWJ,IAAI,KAAM,GACzBK,IAAUD,IAAU;AAGtB,cACIE,GADAC,IAAO;AAwBX,cArBIF,IAAU/E,MAGZgF,IAAcrD,KAAKmC,cADJnC,KAAKoC,QAAQgB,CAAAA,CAAAA,GAIxBC,IAAcH,MAChBI,IAAOF,KAKPD,IAAU9E,KAEI2B,KAAKmC,cADNnC,KAAKoC,QAAQe,CAAAA,CAAAA,KAEA,SAATG,IAAgBJ,IAAYG,OAC7CC,IAAOH,IAKE,SAATG,EAQF;AAPAtD,eAAKoC,QAAQW,CAAAA,IAAK/C,KAAKoC,QAAQkB,CAAAA,GAC/BtD,KAAKoC,QAAQkB,CAAAA,IAAQjB,GACrBU,IAAIO;QAOP;MACF;IAAA;AC/HH,IAAM9F,IAAN,MAAMA;MACJ0E,cAAAA;AACElC,aAAKuD,UAAU,CAAA;MAChB;MAEDxD,KAAMyD,GAAIC,GAAAA;AAAAA,mBACJA,MAAkBA,IAAKD,IAC3BxD,KAAKuD,QAAQxD,KAAK,EAChB2D,MAAMF,GACNG,OAAOF,EAAAA,CAAAA;MAEV;MAEDG,aAAAA;AACE,cAAML,IAAUvD,KAAKuD,SACfM,IAAM,CAAA;AAEZ,YAAIC,GAAYC,GAAYC,GACxBC,IAAY,GACdC,IAAY,GACZC,IAAa;AAEfL,YAAaP,EAAQ,CAAA,EAAGG,MACxBK,IAAaR,EAAQ,CAAA,EAAGG,MACxBM,IAAcT,EAAQ,CAAA,EAAGI,OAGzBE,EAAI9D,KAAK+D,CAAAA;AAET,iBAAS7E,IAAI,GAAGA,IAAIsE,EAAQlF,QAAQY,KAAK;AACvC,gBAAMyE,IAAOH,EAAQtE,CAAAA,EAAGyE,MAClBC,IAAQJ,EAAQtE,CAAAA,EAAG0E;AAGzB,cAAIrG,EAAM8G,SAASN,GAAYE,GAAaL,CAAAA,KAAU,GAAK;AACzD,gBAAA,EAAIrG,EAAM+G,OAAOP,GAAYE,CAAAA,KAAgB1G,EAAM8G,SAASN,GAAYC,GAAYJ,CAAAA,IAAS,IAItF;AAELE,gBAAI9D,KAAKgE,CAAAA,GAETD,IAAaC,GACbE,IAAYC,GAEZH,IAAaD,GACbE,IAAcF,GACdI,IAAYD,GACZE,IAAaF,GAEbhF,IAAIgF;AACJ;YACD;AAhBCD,gBAAcL,GACdQ,IAAalF;UAgBhB;AAGD,cAAI3B,EAAM8G,SAASN,GAAYC,GAAYL,CAAAA,KAAS,GAAK;AACvD,gBAAA,EAAIpG,EAAM+G,OAAOP,GAAYC,CAAAA,KAAezG,EAAM8G,SAASN,GAAYE,GAAaN,CAAAA,IAAQ,IAIrF;AAELG,gBAAI9D,KAAKiE,CAAAA,GAETF,IAAaE,GACbC,IAAYE,GAEZJ,IAAaD,GACbE,IAAcF,GACdI,IAAYD,GACZE,IAAaF,GAEbhF,IAAIgF;AACJ;YACD;AAhBCF,gBAAaL,GACbQ,IAAYjF;UAgBf;QACF;AAQD,eANoB,MAAf4E,EAAIxF,UAAmBf,EAAM+G,OAAOR,EAAIA,EAAIxF,SAAS,CAAA,GAAIkF,EAAQA,EAAQlF,SAAS,CAAA,EAAGqF,IAAAA,KAExFG,EAAI9D,KAAKwD,EAAQA,EAAQlF,SAAS,CAAA,EAAGqF,IAAAA,GAGvC1D,KAAKsE,OAAOT,GACLA;MACR;IAAA;AC3EH,IAAMpG,IAAN,MAAMA;MACLyE,cAAAA;AACClC,aAAKuE,QAAQ,CAAA;MACb;MAQgB5G,OAAAA,WAAEwC,GAAUC,IAAY,MAAA;AACxC,gBCtBF,MAAA;UAOkBzC,OAAAA,UAAEwC,IAAUC,IAAAA;AAE1B,kBAAMoE,IAAUxE,KAAKyE,qBAAqBtE,IAAUC,EAAAA,GAE9CsE,IAAO,CAAA;AAEbF,cAAQlF,SAASK,QAASgF,CAAAA,OAAAA;AACxBA,cAAAA,GAAElG,IAAInB,EAAMsH,YAAYD,GAAElG,GAAG,CAAA,GAC7BkG,GAAEhG,IAAIrB,EAAMsH,YAAYD,GAAEhG,GAAG,CAAA,GAC7BgG,GAAE9F,IAAIvB,EAAMsH,YAAYD,GAAE9F,GAAG,CAAA;YAAA,CAAA,GAG/B6F,EAAKpF,WAAWkF,EAAQlF;AAExB,kBAAMuF,IAAS7E,KAAK8E,oBAAoBN,CAAAA;AA0CxC,mBArCAE,EAAKG,SAAS,IAAIE,MAAMF,EAAOxG,MAAAA,GAC/BwG,EAAOlF,QAAQ,CAACqF,IAAOC,OAAAA;AAErB,oBAAMC,KAAiB,oBAAIC;AAC3BH,cAAAA,GAAMrF,QAAQ,CAACb,IAAMsG,OAAAA;AAAgBF,gBAAAA,GAAeG,IAAIvG,IAAMsG,EAAAA;cAAAA,CAAAA;AAE9D,oBAAME,KAAW,IAAIP,MAAMC,GAAM3G,MAAAA;AACjC2G,cAAAA,GAAMrF,QAAQ,CAACb,IAAMsG,OAAAA;AAEnB,sBAAMG,IAAmB,CAAA;AACzBzG,gBAAAA,GAAK0G,WAAW7F,QAASoD,CAAAA,OAAMwC,EAAiBxF,KAAKmF,GAAeO,IAAI1C,EAAAA,CAAAA,CAAAA;AAGxE,sBAAMQ,IAAU,CAAA;AAChBzE,gBAAAA,GAAK0G,WAAW7F,QAASoD,CAAAA,OAAMQ,EAAQxD,KAAKC,KAAK0F,0BAA0B5G,IAAMiE,EAAAA,CAAAA,CAAAA;AAEjF,sBAAM4C,IAAW,IAAIC,QAAS,GAAG,GAAG,CAAA;AACpCD,kBAASE,IAAKnB,EAAKpF,SAAUR,GAAKY,UAAU,CAAA,CAAA,CAAA,GAC5CiG,EAASE,IAAKnB,EAAKpF,SAAUR,GAAKY,UAAU,CAAA,CAAA,CAAA,GAC5CiG,EAASE,IAAKnB,EAAKpF,SAAUR,GAAKY,UAAU,CAAA,CAAA,CAAA,GAC5CiG,EAASG,aAAc,CAAA,GACvBH,EAASlH,IAAInB,EAAMsH,YAAYe,EAASlH,GAAG,CAAA,GAC3CkH,EAAShH,IAAIrB,EAAMsH,YAAYe,EAAShH,GAAG,CAAA,GAC3CgH,EAAS9G,IAAIvB,EAAMsH,YAAYe,EAAS9G,GAAG,CAAA,GAE3CyG,GAASF,EAAAA,IAAa,EACpBW,IAAIX,IACJI,YAAYD,GACZ7F,WAAWZ,GAAKY,WAChBiG,UAAUA,GACVpC,SAASA,EAAAA;cAAAA,CAAAA,GAIbmB,EAAKG,OAAOI,EAAAA,IAAcK;YAAAA,CAAAA,GAGrBZ;UACR;UAO0B/G,OAAAA,qBAAEwC,IAAUC,IAAAA;AAErC,mBADAD,KAAW7C,EAAM0I,cAAc7F,IAAUC,EAAAA,GAAAA,KAC7B6F,2BAA2B9F,EAAAA;UACxC;UAMoBxC,OAAAA,eAAEuI,IAAAA;AACrB,gBAAIC,KAAY,oBAAIC,IAAI,CAACF,EAAAA,CAAAA;AAEzB,mBAAMC,GAAUtD,OAAO,KAAG;AACxB,oBAAMwD,IAAQF;AACdA,cAAAA,KAAY,oBAAIC,OAEhBC,EAAM1G,QAASN,CAAAA,OAAAA;AACbA,gBAAAA,GAAQ2F,QAAQkB,GAAKlB,OACrB3F,GAAQmG,WAAW7F,QAAS2G,CAAAA,OAAAA;AAAAA,6BACvBA,GAAUtB,SACXmB,GAAUN,IAAIS,EAAAA;gBACf,CAAA;cAAA,CAAA;YAGN;UACF;UAEyB3I,OAAAA,oBAAE4I,IAAAA;AAE1B,kBAEMC,KAAgB,CAAA;AActB,mBAhBiBD,GAAeE,SAIvB9G,QAASN,CAAAA,OAAAA;AAAAA,yBACZA,GAAQ2F,QAEVwB,GAAcnH,GAAQ2F,KAAAA,EAAOjF,KAAKV,EAAAA,KAGlCA,GAAQ2F,QAAQwB,GAAcnI,QAC9B2B,KAAK0G,eAAerH,EAAAA,GACpBmH,GAAczG,KAAK,CAACV,EAAAA,CAAAA;YACrB,CAAA,GAGImH;UACR;UAE6B7I,OAAAA,wBAAE0B,IAASsH,IAAAA;AACvC,kBAAMnB,IAAa,oBAAIY,OAGjBQ,IAASD,GAAiBtH,GAAQK,UAAU,CAAA,CAAA,GAC5CmH,IAASF,GAAiBtH,GAAQK,UAAU,CAAA,CAAA;AAkBlD,mBApBeiH,GAAiBtH,GAAQK,UAAU,CAAA,CAAA,EAO3CC,QAASmH,CAAAA,OAAAA;AACVA,cAAAA,OAAczH,OACduH,EAAOG,SAASD,EAAAA,KAAcD,EAAOE,SAASD,EAAAA,MAChDtB,EAAWK,IAAIiB,EAAAA;YAChB,CAAA,GAEHF,EAAOjH,QAASmH,CAAAA,OAAAA;AACVA,cAAAA,OAAczH,MACdwH,EAAOE,SAASD,EAAAA,KAClBtB,EAAWK,IAAIiB,EAAAA;YAChB,CAAA,GAGItB;UACR;UAEgC7H,OAAAA,2BAAEwC,IAAAA;AAEjC,kBAAMsG,KAAW,CAAA,GACXnH,IAAW,CAAA,GAEX0H,IAAW7G,GAAS8G,WAAWD,UAC/B5F,IAAQjB,GAASiB,OAQjBuF,IAAmB,CAAA;AAEzB,qBAAS1H,KAAI,GAAGA,KAAI+H,EAASnG,OAAO5B,KAClCK,GAASS,KAAK,IAAI6F,UAAUsB,oBAAoBF,GAAU/H,EAAAA,CAAAA,GAC1D0H,EAAiB1H,EAAAA,IAAK,CAAA;AAIxB,qBAASA,IAAI,GAAGA,IAAIkB,GAASiB,MAAMP,OAAO5B,KAAK,GAAG;AAChD,oBAAMX,KAAI8C,EAAMC,KAAKpC,CAAAA,GACfV,KAAI6C,EAAMC,KAAKpC,IAAI,CAAA,GACnBD,KAAIoC,EAAMC,KAAKpC,IAAI,CAAA,GACnBH,IAAO,EAACY,WAAW,CAACpB,IAAGC,IAAGS,EAAAA,GAAIwG,YAAY,KAAA;AAChDiB,cAAAA,GAAS1G,KAAKjB,CAAAA,GACd6H,EAAiBrI,EAAAA,EAAGyB,KAAKjB,CAAAA,GACzB6H,EAAiBpI,EAAAA,EAAGwB,KAAKjB,CAAAA,GACzB6H,EAAiB3H,EAAAA,EAAGe,KAAKjB,CAAAA;YAC1B;AAOD,mBAJA2H,GAAS9G,QAASN,CAAAA,OAAAA;AAChBA,cAAAA,GAAQmG,aAAaxF,KAAKmH,wBAAwB9H,IAASsH,CAAAA;YAAAA,CAAAA,GAGtD,EACLF,UAAUA,IACVnH,UAAUA,EAAAA;UAEb;UAE+B3B,OAAAA,0BAAEW,IAAGC,IAAAA;AAEnC,kBAAM6I,IAAQ9I,GAAEoB,WACV2H,IAAKD,EAAM,CAAA,GAAIE,IAAKF,EAAM,CAAA,GAAIG,IAAKH,EAAM,CAAA,GAEzCI,IAAQjJ,GAAEmB,WACV+H,IAAUD,EAAMT,SAASM,CAAAA,GACzBK,IAAUF,EAAMT,SAASO,CAAAA,GACzBK,IAAUH,EAAMT,SAASQ,CAAAA;AAK/B,mBAAIE,KAAWC,KAAWC,IACjB5C,MAAM6C,KAAKR,CAAAA,IACTK,KAAWC,IACb,CAACL,GAAIC,CAAAA,IACHI,KAAWC,IACb,CAACL,GAAIC,CAAAA,IACHE,KAAWE,IACb,CAACJ,GAAIF,CAAAA,KAEZQ,QAAQC,KAAK,sFAAA,GACN,CAAA;UAEV;QAAA,GDhMcC,UAAU5H,GAAUC,CAAAA;MACnC;MAOD4H,YAAaC,GAAQvD,GAAAA;AACpB1E,aAAKuE,MAAM0D,CAAAA,IAAUvD;MACrB;MAUDwD,cAAeD,GAAQE,GAASC,GAAcC,GAAAA;AAE7C,YAAA,CAAKrI,KAAKuE,MAAM0D,CAAAA,EAAS,QAAA,IAAWrC;AAEpCwC,YAAeA,KAAgB,MAC/BC,IAAYA,KAAa;AAEzB,cAAMC,IAAa,CAAA;AAanB,eAZiBtI,KAAKuE,MAAM0D,CAAAA,EAAQpD,OAAOsD,CAAAA,EAElCxI,QAAS4I,CAAAA,OAAAA;AACbH,eAAgBC,IACf/K,EAAM4C,kBAAkBkI,GAAcG,GAAE5C,QAAAA,IAAY0C,IAAYA,KACnEC,EAAWvI,KAAKwI,GAAE5C,QAAAA,IAGnB2C,EAAWvI,KAAKwI,GAAE5C,QAAAA;QAClB,CAAA,GAGKrI,EAAMkL,OAAOF,CAAAA,KAAe,IAAI1C;MACvC;MAUD6C,eAAgBzB,GAAUiB,GAAQE,GAASO,IAAAA,OAAe;AACzD,cACMpJ,IAAWU,KAAKuE,MAAM0D,CAAAA,EAAQ3I;AACpC,YAAIqJ,IAAc,MACdC,IAAkBC;AAWtB,eAdc7I,KAAKuE,MAAM0D,CAAAA,EAAQpD,OAAOsD,CAAAA,EAKlCxI,QAASgD,CAAAA,OAAAA;AACd,gBAAMmG,KAAWxL,EAAM4C,kBAAkByC,GAAKgD,UAAUqB,CAAAA;AACpD8B,UAAAA,KAAWF,MAAAA,CACRF,KAAgBpL,EAAMyL,kBAAkB/B,GAAUrE,IAAMrD,CAAAA,OAC9DqJ,IAAchG,IACdiG,IAAkBE;QAClB,CAAA,GAGKH;MACP;MAYDK,SAAUC,GAAeC,GAAgBjB,GAAQE,GAAAA;AAChD,cAAMgB,IAAQnJ,KAAKuE,MAAM0D,CAAAA,EAAQpD,OAAOsD,CAAAA,GAClC7I,IAAWU,KAAKuE,MAAM0D,CAAAA,EAAQ3I,UAE9BqJ,IAAc3I,KAAKyI,eAAeQ,GAAehB,GAAQE,GAAAA,IAAS,GAClEiB,IAAepJ,KAAKyI,eAAeS,GAAgBjB,GAAQE,GAAAA,IAAS;AAG1E,YAAA,CAAKQ,KAAAA,CAAgBS,EACpB,QAAA;AAGD,cAAMC,KElHR,MAAA;UACa1L,OAAAA,KAAE2L,IAAAA;AACX,qBAAS7K,KAAI,GAAGA,KAAI6K,GAAMjL,QAAQI,MAAK;AAErC,oBAAMkE,IAAO2G,GAAM7K,EAAAA;AACnBkE,gBAAK4G,IAAI,GACT5G,EAAK6G,IAAI,GACT7G,EAAK8G,IAAI,GACT9G,EAAK+G,OAAO,GACZ/G,EAAKgH,UAAAA,OACLhH,EAAKiH,SAAAA,OACLjH,EAAKM,SAAS;YACf;UACF;UAEatF,OAAAA,QAAE2L,IAAAA;AACd,qBAAS7K,KAAI,GAAGA,KAAI6K,GAAMjL,QAAQI,MAAK;AACrC,oBAAMkE,IAAO2G,GAAM7K,EAAAA;AAAAA,qBACZkE,EAAK4G,GAAAA,OACL5G,EAAK6G,GAAAA,OACL7G,EAAK8G,GAAAA,OACL9G,EAAK+G,MAAAA,OACL/G,EAAKgH,SAAAA,OACLhH,EAAKiH,QAAAA,OACLjH,EAAKM;YACb;UACF;UAEUtF,OAAAA,OAAAA;AACT,mBAAA,IAAWJ,EAAW,SAAUoF,IAAAA;AAC9B,qBAAOA,GAAK4G;YACb,CAAA;UACF;UAEY5L,OAAAA,OAAE2L,IAAOO,IAAOrH,GAAAA;AAC3BxC,iBAAK8J,KAAKR,EAAAA;AAIV,kBAAMS,KAAW/J,KAAKgK,KAAAA;AAItB,iBAFAD,GAAShK,KAAK8J,EAAAA,GAEPE,GAASlH,KAAAA,IAAS,KAAG;AAG1B,oBAAMoH,KAAcF,GAASxH,IAAAA;AAG7B,kBAAI0H,OAAgBzH,GAAK;AACvB,oBAAI0H,KAAOD;AACX,sBAAME,KAAM,CAAA;AACZ,uBAAOD,GAAKjH,SACVkH,CAAAA,GAAIpK,KAAKmK,EAAAA,GACTA,KAAOA,GAAKjH;AAGd,uBADAjD,KAAKoK,QAAQD,EAAAA,GACNA,GAAIE,QAAAA;cACZ;AAGDJ,cAAAA,GAAYL,SAAAA;AAGZ,oBAAMpE,KAAaxF,KAAKwF,WAAW8D,IAAOW,EAAAA;AAE1C,uBAAShL,KAAI,GAAGqL,KAAK9E,GAAWnH,QAAQY,KAAIqL,IAAIrL,MAAK;AACnD,sBAAMqH,KAAYd,GAAWvG,EAAAA;AAE7B,oBAAIqH,GAAUsD,OAEZ;AAKF,sBAAMW,KAASN,GAAYT,IAAIlD,GAAUoD,MACnCc,KAAclE,GAAUqD;AAE9B,oBAAA,CAAKa,MAAeD,KAASjE,GAAUkD,GAAG;AAKxC,sBAFAlD,GAAUqD,UAAAA,MACVrD,GAAUrD,SAASgH,IAAAA,CACd3D,GAAUX,YAAAA,CAAanD,EAAImD,SAAU,OAAA,IAAU8E,MAAM,kBAAA;AAC1DnE,kBAAAA,GAAUmD,IAAInD,GAAUmD,KAAKzJ,KAAK0K,UAAUpE,GAAUX,UAAUnD,EAAImD,QAAAA,GACpEW,GAAUkD,IAAIe,IACdjE,GAAUiD,IAAIjD,GAAUkD,IAAIlD,GAAUmD,GAEjCe,KAKHT,GAASjH,eAAewD,EAAAA,IAHxByD,GAAShK,KAAKuG,EAAAA;gBAKjB;cACF;YACF;AAGD,mBAAO,CAAA;UACR;UAEe3I,OAAAA,UAAEgN,IAAMC,IAAAA;AACtB,mBAAOtN,EAAM4C,kBAAkByK,IAAMC,EAAAA;UACtC;UAEgBjN,OAAAA,WAAE2L,IAAO3G,IAAAA;AACxB,kBAAMwH,IAAM,CAAA;AAEZ,qBAASU,KAAI,GAAGA,KAAIlI,GAAK6C,WAAWnH,QAAQwM,KAC1CV,GAAIpK,KAAKuJ,GAAM3G,GAAK6C,WAAWqF,EAAAA,CAAAA,CAAAA;AAGjC,mBAAOV;UACR;QAAA,GFFmBW,OAAO3B,GAAOR,GAAaS,CAAAA,GAEzC2B,IAAkB,SAAUzM,IAAGC,IAAAA;AACpC,mBAASU,IAAI,GAAGA,IAAIX,GAAEkH,WAAWnH,QAAQY,IACxC,KAAIX,GAAEkH,WAAWvG,CAAAA,MAAOV,GAAEwH,GACzB,QAAOzH,GAAEiF,QAAQtE,CAAAA;QAGnB,GAGK+L,IAAU,IAAIxN;AACpBwN,UAAQjL,KAAKkJ,CAAAA;AACb,iBAAShK,KAAI,GAAGA,KAAIoK,EAAMhL,QAAQY,MAAK;AACtC,gBAAMI,KAAUgK,EAAMpK,EAAAA,GAChBgM,IAAc5B,EAAMpK,KAAI,CAAA;AAE9B,cAAIgM,GAAa;AAChB,kBAAM1H,KAAUwH,EAAgB1L,IAAS4L,CAAAA;AACzCD,cAAQjL,KACPT,EAASiE,GAAQ,CAAA,CAAA,GACjBjE,EAASiE,GAAQ,CAAA,CAAA,CAAA;UAElB;QACD;AACDyH,UAAQjL,KAAKmJ,CAAAA,GACb8B,EAAQpH,WAAAA;AAGR,cAAMU,KAAO0G,EAAQ1G,KAAK4G,IAAKlM,CAAAA,OAAM,IAAI4G,QAAQ5G,GAAEP,GAAGO,GAAEL,GAAGK,GAAEH,CAAAA,CAAAA;AAE7D,eADAyF,GAAK6G,MAAAA,GACE7G;MACP;IAAA;AASF7G,MAAY2N,UAAUC,WAAY,WAAA;AACjC,YAAMC,IAAQ,IAAIC;AAClB,aAAA,SAAiBtD,GAAQjB,GAAU0B,IAAAA,OAAe;AACjD,YAAA,CAAK1I,KAAKuE,MAAM0D,CAAAA,EAAS,QAAA;AAEzB,YAAIuD,IAAmB,MACnB1C,IAAW/K,KAAKC,IAAI,IAAI,CAAA;AAC5B,cAAM0G,IAAO1E,KAAKuE,MAAM0D,CAAAA;AAExB,iBAAShJ,KAAI,GAAGA,KAAIyF,EAAKG,OAAOxG,QAAQY,MAAK;AAC5C,gBAAM+F,IAAQN,EAAKG,OAAO5F,EAAAA;AAC1B,qBAAW0D,KAAQqC,GAAO;AACzB,gBAAI0D,MACH4C,EAAMG,sBACL/G,EAAKpF,SAASqD,EAAKjD,UAAU,CAAA,CAAA,GAC7BgF,EAAKpF,SAASqD,EAAKjD,UAAU,CAAA,CAAA,GAC7BgF,EAAKpF,SAASqD,EAAKjD,UAAU,CAAA,CAAA,CAAA,GAE1B3B,KAAK2N,IAAIJ,EAAMK,gBAAgB3E,CAAAA,CAAAA,IAAa,SAM5C1J,EAAM2C,cALI,CACZyE,EAAKpF,SAASqD,EAAKjD,UAAU,CAAA,CAAA,GAC7BgF,EAAKpF,SAASqD,EAAKjD,UAAU,CAAA,CAAA,GAC7BgF,EAAKpF,SAASqD,EAAKjD,UAAU,CAAA,CAAA,CAAA,GAEDsH,CAAAA,EAC5B,QAAO/H;AAIV,kBAAM2M,KAAmBtO,EAAM4C,kBAAkByC,EAAKgD,UAAUqB,CAAAA;AAC5D4E,YAAAA,KAAmB9C,MACtB0C,IAAmBvM,IACnB6J,IAAW8C;UAEZ;QACD;AAED,eAAOJ;MACP;IACD,EAvCiC,GAqDlC/N,EAAY2N,UAAUS,YAAa,WAAA;AAClC,YAAMC,IAAQ,IAAIlG,WACZ0F,IAAQ,IAAIC,SACZQ,IAAW,IAAIC,YAEfC,IAAW,IAAIrG;AAErB,UAAI+C,GAEAC,GADAsD,IAAe,IAAItG;AAGvB,aAAA,SAAiBuG,GAAUC,GAAQzJ,GAAMsF,GAAQE,GAASkE,IAAAA;AACzD,cAAM/M,KAAWU,KAAKuE,MAAM0D,CAAAA,EAAQ3I,UAC9B6J,KAAQnJ,KAAKuE,MAAM0D,CAAAA,EAAQpD,OAAOsD,CAAAA,GAElCmE,KAAY,CAAC3J,CAAAA,GACb4J,KAAY,CAAA;AAClBA,QAAAA,GAAU5J,EAAKoD,EAAAA,IAAM,GAErB4C,IAAAA,QACAuD,EAAa7G,IAAI,GAAG,GAAG,CAAA,GACvBuD,IAAkBC,UAGlByC,EAAMG,sBACLnM,GAASqD,EAAKjD,UAAU,CAAA,CAAA,GACxBJ,GAASqD,EAAKjD,UAAU,CAAA,CAAA,GACxBJ,GAASqD,EAAKjD,UAAU,CAAA,CAAA,CAAA,GAEzB4L,EAAMkB,aAAaJ,GAAQN,CAAAA,GAC3BG,EAASQ,KAAKX,CAAAA;AAEd,iBAAS7B,KAAcqC,GAAU/J,IAAAA,GAAO0H,IAAaA,KAAcqC,GAAU/J,IAAAA,GAAO;AAEnFwJ,YAAS1G,IACR/F,GAAS2K,GAAYvK,UAAU,CAAA,CAAA,GAC/BJ,GAAS2K,GAAYvK,UAAU,CAAA,CAAA,GAC/BJ,GAAS2K,GAAYvK,UAAU,CAAA,CAAA,CAAA,GAGhCqM,EAASW,oBAAoBT,GAAUH,CAAAA,GAEnCA,EAAM5L,kBAAkB+L,CAAAA,IAAYrD,MACvCD,IAAcsB,IACdiC,EAAaO,KAAKX,CAAAA,GAClBlD,IAAkBkD,EAAM5L,kBAAkB+L,CAAAA;AAG3C,gBAAMU,KAAQJ,GAAUtC,GAAYlE,EAAAA;AACpC,cAAA,EAAI4G,KAAQ,GAEZ,UAAS1N,KAAI,GAAGA,KAAIgL,GAAYzE,WAAWnH,QAAQY,MAAK;AACvD,kBAAMqH,KAAY6C,GAAMc,GAAYzE,WAAWvG,EAAAA,CAAAA;AAC3CqH,YAAAA,GAAUP,MAAMwG,OAEpBD,GAAUvM,KAAKuG,EAAAA,GACfiG,GAAUjG,GAAUP,EAAAA,IAAM4G,KAAQ;UAClC;QACD;AAGD,eADAN,GAAUI,KAAKP,CAAAA,GACRvD;MACP;IACD,EA/DkC;AGxLnC,IAAMjL,IAAN,cAAgCkP,SAAAA;MAC9B1K,cAAAA;AACE2K,cAAAA,GAEA7M,KAAK8M,gBAAgB,IAAIC,KACvB,IAAIC,eAAgB,MAAM,IAAI,EAAA,GAC9B,IAAIC,kBAAmB,EAAEC,OAnBrB,SAAA,CAAA,CAAA,GAsBNlN,KAAKmN,gBAAgB,IAAIJ,KACvB,IAAIK,YAAa,KAAK,KAAK,GAAA,GAC3B,IAAIH,kBAAmB,EAAEC,OAvBrB,SAAA,CAAA,CAAA,GA2BNlN,KAAKqN,cAAc,IAAIN,KACrB,IAAIK,YAAa,KAAK,KAAK,GAAA,GAC3B,IAAIH,kBAAmB,EAAEC,OAzBf,QAAA,CAAA,CAAA,GA6BZlN,KAAKsN,cAAc,IAAIP,KACrB,IAAIK,YAAa,KAAK,GAAG,GAAA,GACzB,IAAIH,kBAAmB,EAAEC,OAhCf,SAAA,CAAA,CAAA,GAmCZlN,KAAKuN,cAAc,IAAIX,YAEvB5M,KAAKwN,oBAAoB,IAAIC,kBAAmB,EAAEP,OAvC9C,OAuCkEQ,WAAW,EAAA,CAAA,GACjF1N,KAAK2N,qBAAqB,IAAIV,kBAAmB,EAAEC,OAvC3C,MAAA,CAAA,GAwCRlN,KAAK4N,qBAAqB,IAAIZ,eAAgB,IAAA,GAE9ChN,KAAK6N,WAAW,CACd7N,KAAK8M,eACL9M,KAAKmN,eACLnN,KAAKqN,aACLrN,KAAKsN,aACLtN,KAAKuN,WAAAA,GAGPvN,KAAK6N,SAASlO,QAAWmO,OAAAA;AAEvBA,YAAOC,UAAAA,OAEP/N,KAAK6F,IAAKiI,CAAAA;QAAAA,CAAAA;MAIb;MAMDE,QAAU1J,GAAAA;AAER,eAAQtE,KAAKuN,YAAYU,SAAS5P,SAEhC2B,MAAKuN,YAAYU,SAAU,CAAA,EAAIF,UAAAA,OAC/B/N,KAAKuN,YAAY7K,OAAQ1C,KAAKuN,YAAYU,SAAU,CAAA,CAAA;AAItD3J,YAAO,CAAEtE,KAAK8M,cAAc9F,QAAAA,EAAWkH,OAAQ5J,CAAAA;AAG/C,cAAMnE,IAAW,IAAI4B;AACrB5B,UAAS6B,aAAa,YAAY,IAAIN,gBAAgB,IAAIC,aAA2B,IAAd2C,EAAKjG,MAAAA,GAAa,CAAA,CAAA;AACzF,iBAASY,IAAI,GAAGA,IAAIqF,EAAKjG,QAAQY,IAC/BkB,GAAS8G,WAAWD,SAASmH,OAAOlP,GAAGqF,EAAMrF,CAAAA,EAAIR,GAAG6F,EAAMrF,CAAAA,EAAIN,IA1ErD,KA0EiE2F,EAAMrF,CAAAA,EAAIJ,CAAAA;AAEtFmB,aAAKuN,YAAY1H,IAAK,IAAIuI,KAAMjO,GAAUH,KAAKwN,iBAAAA,CAAAA;AAE/C,iBAAUvO,IAAI,GAAGA,IAAIqF,EAAKjG,SAAS,GAAGY,KAAM;AAE1C,gBAAM0D,IAAO,IAAIoK,KAAM/M,KAAK4N,oBAAoB5N,KAAK2N,kBAAAA;AACrDhL,YAAKqE,SAASyF,KAAMnI,EAAMrF,CAAAA,CAAAA,GAC1B0D,EAAKqE,SAASrI,KAlFL,KAmFTqB,KAAKuN,YAAY1H,IAAKlD,CAAAA;QAEvB;AAID,eAFA3C,KAAKuN,YAAYQ,UAAAA,MAAU;MAI5B;MAMDM,kBAAmBrH,GAAAA;AAIjB,eAFAhH,KAAK8M,cAAc9F,SAASyF,KAAMzF,CAAAA,GAClChH,KAAK8M,cAAciB,UAAAA,MAAU;MAG9B;MAMDO,kBAAmBtH,GAAAA;AAIjB,eAFAhH,KAAKmN,cAAcnG,SAASyF,KAAMzF,CAAAA,GAClChH,KAAKmN,cAAcY,UAAAA,MAAU;MAG9B;MAMDQ,gBAAiBvH,GAAAA;AAIf,eAFAhH,KAAKqN,YAAYrG,SAASyF,KAAMzF,CAAAA,GAChChH,KAAKqN,YAAYU,UAAAA,MAAU;MAG5B;MAMDS,gBAAiBxH,GAAAA;AAIf,eAFAhH,KAAKsN,YAAYtG,SAASyF,KAAMzF,CAAAA,GAChChH,KAAKsN,YAAYS,UAAAA,MAAU;MAG5B;MAMDU,QAAAA;AAEE,eAAQzO,KAAKuN,YAAYU,SAAS5P,SAEhC2B,MAAKuN,YAAYU,SAAU,CAAA,EAAIF,UAAAA,OAC/B/N,KAAKuN,YAAY7K,OAAQ1C,KAAKuN,YAAYU,SAAU,CAAA,CAAA;AAUtD,eANAjO,KAAK6N,SAASlO,QAAWmO,OAAAA;AAEvBA,YAAOC,UAAAA;QAAU,CAAA,GAAA;MAMpB;IAAA;;;;;ACxLH;AAAA;AAAA,QAAM,EAAE,YAAY,IAAI;AAExB,QAAM,aAAa,IAAI,YAAY;AACnC,QAAM,OAAO;AAOb,WAAO,UAAU,OAAO,eAAe,OAAO;AAAA,MAC5C,MAAM,WAAY;AAChB,aAAK,UAAU;AACf,aAAK,SAAS,oBAAI,IAAI;AAAA,MACxB;AAAA;AAAA;AAAA;AAAA,MAKA,oBAAoB,SAAU,UAAU;AACtC,aAAK,UAAU,IAAI,MAAM,KAAK,QAAQ;AACtC,mBAAW,YAAY,MAAM,YAAY,WAAW,QAAQ,CAAC;AAC7D,cAAM,KAAK,KAAK,MAAM,EAAE,QAAQ,CAAC,UAAU,MAAM,kBAAkB,CAAC;AAAA,MACtE;AAAA;AAAA;AAAA;AAAA,MAKA,YAAY,WAAY;AACtB,eAAO,KAAK;AAAA,MACd;AAAA;AAAA;AAAA;AAAA,MAKA,UAAU,SAAU,MAAM;AACxB,aAAK,OAAO,IAAI,IAAI;AAAA,MACtB;AAAA;AAAA;AAAA;AAAA,MAKA,aAAa,SAAU,MAAM;AAC3B,aAAK,OAAO,OAAO,IAAI;AAAA,MACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,SAAS,SAAU,OAAO,KAAK,SAAS;AACtC,eAAO,KAAK,UACR,WAAW,SAAS,OAAO,KAAK,MAAM,OAAO,IAC7C;AAAA,MACN;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,UAAU,SAAU,UAAU;AAC5B,eAAO,KAAK,UACR,WAAW,SAAS,MAAM,QAAQ,IAClC;AAAA,MACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,SAAS,SAAU,UAAU,SAAS;AACpC,eAAO,KAAK,UACR,WAAW,eAAe,UAAU,MAAM,SAAS,IAAI,IACvD;AAAA,MACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUA,WAAW,SAAU,OAAO,KAAK,SAAS,MAAM,WAAW;AACzD,YAAI,CAAC,KAAK,SAAS;AACjB,oBAAU,KAAK,GAAG;AAClB,iBAAO;AAAA,QACT,WAAW,CAAC,MAAM;AAChB,oBAAU,KAAK,GAAG;AAClB,iBAAO,KAAK,QAAQ,KAAK,OAAO;AAAA,QAClC;AACA,eAAO,WAAW,UAAU,OAAO,KAAK,MAAM,MAAM,SAAS,SAAS;AAAA,MACxE;AAAA,IACF,CAAC;AAAA;AAAA;;;ACjGD;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AAAA;AAKA,WAAO,UAAU,OAAO,kBAAkB,UAAU;AAAA,MAClD,mBAAmB;AAAA,QACjB,UAAU;AAAA,UACR,WAAW;AAAA,UACX,OAAO;AAAA,UACP,QAAQ;AAAA,QACV;AAAA,QACA,UAAU,EAAC,GAAG,KAAK,GAAG,GAAG,GAAG,EAAC;AAAA,QAC7B,UAAU;AAAA,UACR,KAAK;AAAA,UACL,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA,UAAU;AAAA,QACR,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,KAAK;AAAA,MACP;AAAA,IACF,CAAC;AAAA;AAAA;;;ACvBD;AAAA;AAMA,WAAO,QAAQ,YAAY,OAAO,kBAAkB,WAAW;AAAA,MAC7D,mBAAmB;AAAA,QACjB,OAAO,CAAC;AAAA,QACR,UAAU,EAAC,GAAG,KAAK,GAAG,GAAG,GAAG,EAAC;AAAA,MAC/B;AAAA,MACA,UAAU;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,QACX,mBAAmB;AAAA,QACnB,OAAO;AAAA,QACP,eAAe;AAAA,QACf,OAAO;AAAA,QACP,SAAS;AAAA,MACX;AAAA,IACF,CAAC;AAED,WAAO,QAAQ,YAAY,OAAO,kBAAkB,SAAS;AAAA,MAC3D,QAAQ;AAAA;AAAA,QAEN,OAAO,EAAC,SAAS,IAAI,KAAK,EAAC;AAAA,QAC3B,OAAO,EAAC,SAAS,IAAI,KAAK,EAAC;AAAA;AAAA,QAG3B,SAAS,EAAC,SAAS,GAAE;AAAA;AAAA,QAGrB,WAAW,EAAC,SAAS,IAAG;AAAA,QACxB,mBAAmB,EAAC,SAAS,IAAG;AAAA;AAAA,QAGhC,OAAO,EAAC,SAAS,EAAC;AAAA,QAClB,eAAe,EAAC,SAAS,EAAC;AAAA;AAAA,QAG1B,OAAO,EAAC,SAAS,WAAW,MAAM,QAAO;AAAA,QACzC,SAAS,EAAC,SAAS,IAAG;AAAA,MACxB;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,MAAM,WAAY;AAChB,cAAM,KAAK,KAAK;AAChB,cAAM,OAAO,KAAK;AAClB,YAAI,WAAW,GAAG,WAAW;AAE7B,cAAM,WAAW,IAAI,MAAM,cAAc,KAAK,OAAO,KAAK,OAAO,KAAK,SAAS,KAAK,OAAO;AAC3F,aAAK,QAAQ,CAAC;AACd,cAAM,eAAe,SAAS,aAAa,UAAU;AACrD,iBAAS,IAAI,GAAG,IAAI,aAAa,OAAO,KAAK;AAC3C,eAAK,MAAM,KAAK;AAAA,YACd,GAAG,aAAa,KAAK,CAAC;AAAA,YACtB,KAAK,KAAK,OAAO,IAAI,KAAK,KAAK;AAAA,YAC/B,KAAK,KAAK,YAAY,KAAK,OAAO,IAAI,KAAK;AAAA,YAC3C,QAAQ,KAAK,QAAQ,KAAK,OAAO,IAAI,KAAK,iBAAiB;AAAA;AAAA,UAC7D,CAAC;AAAA,QACH;AAEA,YAAI,CAAC,UAAU;AACb,qBAAW,CAAC;AACZ,mBAAS,WAAW,IAAI,MAAM,kBAAkB;AAAA,YAC9C,OAAO,KAAK;AAAA,YACZ,aAAa,KAAK,UAAU;AAAA,YAC5B,SAAS,KAAK;AAAA,YACd,aAAa;AAAA,UACf,CAAC;AAAA,QACH;AAEA,aAAK,OAAO,IAAI,MAAM,KAAK,UAAU,SAAS,QAAQ;AACtD,WAAG,YAAY,QAAQ,KAAK,IAAI;AAAA,MAClC;AAAA,MAEA,QAAQ,WAAY;AAClB,aAAK,GAAG,eAAe,MAAM;AAAA,MAC/B;AAAA,MAEA,MAAM,SAAU,GAAG,IAAI;AACrB,YAAI,CAAC,GAAI;AAET,cAAM,eAAe,KAAK,KAAK,SAAS,aAAa,UAAU;AAC/D,iBAAS,IAAI,GAAG,IAAI,aAAa,OAAO,KAAI;AAC1C,gBAAM,SAAS,KAAK,MAAM,CAAC;AAC3B,gBAAM,QAAQ,OAAO,IAAI,KAAK,IAAI,OAAO,GAAG,IAAI,OAAO;AACvD,uBAAa,KAAK,GAAG,KAAK;AAC1B,iBAAO,OAAO,OAAO,QAAQ;AAAA,QAC/B;AACA,qBAAa,cAAc;AAAA,MAC7B;AAAA,IACF,CAAC;AAAA;AAAA;;;ACjGD;AAAA;AASA,WAAO,QAAQ,YAAY,OAAO,kBAAkB,UAAU;AAAA,MAC5D,mBAAmB;AAAA,QACjB,MAAgB,CAAC;AAAA,MACnB;AAAA,MACA,UAAU;AAAA,QACR,MAAgB;AAAA,QAChB,UAAgB;AAAA,QAChB,QAAgB;AAAA,QAChB,mBAAmB;AAAA,QACnB,QAAgB;AAAA,MAClB;AAAA,IACF,CAAC;AAED,WAAO,QAAQ,YAAY,OAAO,kBAAkB,QAAQ;AAAA,MAC1D,QAAQ;AAAA,QACN,MAAgB,EAAC,SAAS,CAAC,EAAC;AAAA,QAC5B,UAAgB,EAAC,SAAS,GAAE;AAAA,QAC5B,QAAgB,EAAC,SAAS,EAAC;AAAA,QAC3B,gBAAgB,EAAC,SAAS,EAAC;AAAA,QAC3B,QAAgB,EAAC,SAAS,MAAK;AAAA,MACjC;AAAA,MAEA,MAAM,WAAY;AAChB,cAAM,KAAK,KAAK,IACZ,OAAO,KAAK;AAChB,YAAI,WAAW,GAAG,WAAW;AAE7B,YAAI,CAAC,KAAK,KAAK,QAAQ;AACrB,kBAAQ,MAAM,kDAAkD;AAChE;AAAA,QACF;AAEA,cAAM,QAAQ,IAAI,MAAM,iBAAiB,KAAK,KAAK,IAAI,SAAU,OAAO;AACtE,kBAAQ,MAAM,MAAM,GAAG;AACvB,iBAAO,IAAI,MAAM,QAAQ,OAAO,MAAM,CAAC,CAAC,GAAG,OAAO,MAAM,CAAC,CAAC,GAAG,OAAO,MAAM,CAAC,CAAC,CAAC;AAAA,QAC/E,CAAC,CAAC;AACF,cAAM,WAAW,IAAI,MAAM;AAAA,UACzB;AAAA,UAAO,KAAK;AAAA,UAAU,KAAK;AAAA,UAAQ,KAAK;AAAA,UAAgB,KAAK;AAAA,QAC/D;AAEA,YAAI,CAAC,UAAU;AACb,qBAAW,CAAC;AACZ,mBAAS,WAAW,IAAI,MAAM,kBAAkB;AAAA,QAClD;AAEA,aAAK,OAAO,IAAI,MAAM,KAAK,UAAU,SAAS,QAAQ;AACtD,aAAK,GAAG,YAAY,QAAQ,KAAK,IAAI;AAAA,MACvC;AAAA,MAEA,QAAQ,SAAU,UAAU;AAC1B,YAAI,CAAC,OAAO,KAAK,QAAQ,EAAE,OAAQ;AAEnC,aAAK,OAAO;AACZ,aAAK,KAAK;AAAA,MACZ;AAAA,MAEA,QAAQ,WAAY;AAClB,YAAI,KAAK,KAAM,MAAK,GAAG,eAAe,MAAM;AAAA,MAC9C;AAAA,IACF,CAAC;AAAA;AAAA;;;ACpED;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACFA;AACA;AACA;AACA;AACA;",
  "names": ["KeyboardEvent", "p", "v", "KeyboardEvent", "p", "d", "max", "max", "distance", "angle", "id", "angle", "xml", "text", "library", "animations", "v", "d", "extra", "technique", "f", "count", "position", "p", "g", "i", "index", "max", "axis", "matrix", "vector", "angle", "v", "_a", "d", "err", "p", "l", "_b", "i", "td", "f", "fl", "Deflate", "AsyncDeflate", "Inflate", "AsyncInflate", "Gzip", "Gunzip", "AsyncGunzip", "Zlib", "Unzlib", "AsyncUnzlib", "Decompress", "AsyncDecompress", "DecodeUTF8", "EncodeUTF8", "ZipPassThrough", "ZipDeflate", "AsyncZipDeflate", "Zip", "UnzipPassThrough", "UnzipInflate", "AsyncUnzipInflate", "Unzip", "dat", "final", "p", "r", "d", "j", "v", "child", "distance", "angle", "material", "g", "skeleton", "Promise", "timeoutId", "data", "el", "mesh", "distance", "distance", "Utils", "BinaryHeap", "Channel", "Pathfinding", "PathfindingHelper", "static", "value", "decimals", "factor", "Math", "pow", "round", "list", "floor", "random", "length", "a", "b", "dx", "x", "dy", "y", "dz", "z", "poly", "pt", "c", "i", "l", "j", "vector", "polygon", "vertices", "lowestPoint", "highestPoint", "polygonVertices", "vertexIds", "forEach", "vId", "min", "max", "push", "this", "isPointInPoly", "distanceToSquared", "geometry", "tolerance", "Number", "EPSILON", "hashToIndex", "indices", "getIndex", "positions", "getAttribute", "vertexCount", "count", "nextIndex", "newIndices", "newPositions", "decimalShift", "log10", "shiftMultiplier", "index", "getX", "hash", "getY", "getZ", "positionAttribute", "BufferAttribute", "Float32Array", "itemSize", "normalized", "result", "BufferGeometry", "setAttribute", "setIndex", "constructor", "scoreFunction", "content", "element", "sinkDown", "pop", "end", "bubbleUp", "remove", "node", "indexOf", "size", "rescoreElement", "n", "parentN", "parent", "elemScore", "child2N", "child1N", "child1Score", "swap", "portals", "p1", "p2", "left", "right", "stringPull", "pts", "portalApex", "portalLeft", "portalRight", "apexIndex", "leftIndex", "rightIndex", "triarea2", "vequal", "path", "zones", "navMesh", "_buildNavigationMesh", "zone", "v", "roundNumber", "groups", "_buildPolygonGroups", "Array", "group", "groupIndex", "indexByPolygon", "Map", "polyIndex", "set", "newGroup", "neighbourIndices", "neighbours", "get", "_getSharedVerticesInOrder", "centroid", "Vector3", "add", "divideScalar", "id", "mergeVertices", "_buildPolygonsFromGeometry", "seed", "nextBatch", "Set", "batch", "neighbour", "navigationMesh", "polygonGroups", "polygons", "_spreadGroupId", "vertexPolygonMap", "groupB", "groupC", "candidate", "includes", "position", "attributes", "fromBufferAttribute", "_buildPolygonNeighbours", "aList", "a0", "a1", "a2", "bList", "shared0", "shared1", "shared2", "from", "console", "warn", "buildZone", "setZoneData", "zoneID", "getRandomNode", "groupID", "nearPosition", "nearRange", "candidates", "p", "sample", "getClosestNode", "checkPolygon", "closestNode", "closestDistance", "Infinity", "distance", "isVectorInPolygon", "findPath", "startPosition", "targetPosition", "nodes", "farthestNode", "paths", "graph", "f", "g", "h", "cost", "visited", "closed", "start", "init", "openHeap", "heap", "currentNode", "curr", "ret", "cleanUp", "reverse", "il", "gScore", "beenVisited", "Error", "heuristic", "pos1", "pos2", "e", "search", "getPortalFromTo", "channel", "nextPolygon", "map", "shift", "prototype", "getGroup", "plane", "Plane", "closestNodeGroup", "setFromCoplanarPoints", "abs", "distanceToPoint", "measuredDistance", "clampStep", "point", "triangle", "Triangle", "endPoint", "closestPoint", "startRef", "endRef", "endTarget", "nodeQueue", "nodeDepth", "projectPoint", "copy", "closestPointToPoint", "depth", "Object3D", "super", "_playerMarker", "Mesh", "SphereGeometry", "MeshBasicMaterial", "color", "_targetMarker", "BoxGeometry", "_nodeMarker", "_stepMarker", "_pathMarker", "_pathLineMaterial", "LineBasicMaterial", "linewidth", "_pathPointMaterial", "_pathPointGeometry", "_markers", "marker", "visible", "setPath", "children", "concat", "setXYZ", "Line", "setPlayerPosition", "setTargetPosition", "setNodePosition", "setStepPosition", "reset"]
}
